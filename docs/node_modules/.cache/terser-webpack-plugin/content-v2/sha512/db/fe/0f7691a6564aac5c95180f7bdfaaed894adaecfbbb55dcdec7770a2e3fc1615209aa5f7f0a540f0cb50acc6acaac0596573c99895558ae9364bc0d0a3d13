{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[616],{1014:function(e,t,n){\"use strict\";n.r(t);var r=n(56),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[n(\"h1\",{attrs:{id:\"snyk-for-python\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#snyk-for-python\"}},[e._v(\"#\")]),e._v(\" Snyk for Python\")]),e._v(\" \"),n(\"p\",[e._v('{% hint style=\"success\" %}\\nSnyk provides security scanning on projects for vulnerabilities through our CLI and the application UI (app.snyk.io).\\n{% endhint %}')]),e._v(\" \"),n(\"p\",[e._v(\"The following describes how to use Snyk to scan Python projects:\")]),e._v(\" \"),n(\"h2\",{attrs:{id:\"features\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#features\"}},[e._v(\"#\")]),e._v(\" Features\")]),e._v(\" \"),n(\"table\",[n(\"thead\",[n(\"tr\",[n(\"th\",[e._v(\"Package managers / Features\")]),e._v(\" \"),n(\"th\",[e._v(\"CLI support\")]),e._v(\" \"),n(\"th\",[e._v(\"Git support\")]),e._v(\" \"),n(\"th\",[e._v(\"License scanning\")]),e._v(\" \"),n(\"th\",[e._v(\"Fix PRs\")]),e._v(\" \"),n(\"th\",[n(\"p\",[e._v(\"Runtime\")]),n(\"p\",[e._v(\"monitoring\")])])])]),e._v(\" \"),n(\"tbody\",[n(\"tr\",[n(\"td\",[n(\"a\",{attrs:{href:\"https://pypi.org/project/pip/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"Pip and PyPI\"),n(\"OutboundLink\")],1)]),e._v(\" \"),n(\"td\",[e._v(\"✔︎\")]),e._v(\" \"),n(\"td\",[e._v(\"✔︎\")]),e._v(\" \"),n(\"td\",[e._v(\"✔︎\")]),e._v(\" \"),n(\"td\",[e._v(\"✔︎\")]),e._v(\" \"),n(\"td\")]),e._v(\" \"),n(\"tr\",[n(\"td\",[n(\"a\",{attrs:{href:\"https://pipenv.kennethreitz.org/en/latest/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"pipenv\"),n(\"OutboundLink\")],1)]),e._v(\" \"),n(\"td\",[e._v(\"✔︎\")]),e._v(\" \"),n(\"td\"),e._v(\" \"),n(\"td\",[e._v(\"✔︎\")]),e._v(\" \"),n(\"td\"),e._v(\" \"),n(\"td\")]),e._v(\" \"),n(\"tr\",[n(\"td\",[e._v(\"setup.py\")]),e._v(\" \"),n(\"td\",[e._v(\"✔︎\")]),e._v(\" \"),n(\"td\"),e._v(\" \"),n(\"td\",[e._v(\"✔︎\")]),e._v(\" \"),n(\"td\"),e._v(\" \"),n(\"td\")]),e._v(\" \"),n(\"tr\",[n(\"td\",[n(\"a\",{attrs:{href:\"https://python-poetry.org\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"Poetry\"),n(\"OutboundLink\")],1)]),e._v(\" \"),n(\"td\",[e._v(\"✔︎\")]),e._v(\" \"),n(\"td\"),e._v(\" \"),n(\"td\",[e._v(\"✔︎\")]),e._v(\" \"),n(\"td\"),e._v(\" \"),n(\"td\")])])]),e._v(\" \"),n(\"p\",[e._v('{% hint style=\"info\" %}\\nFeatures might not be available, depending on your subscription plan.\\n{% endhint %}')]),e._v(\" \"),n(\"p\",[e._v('{% hint style=\"info\" %}\\nPyPI licenses are supported for all Python projects.\\n{% endhint %}')]),e._v(\" \"),n(\"h2\",{attrs:{id:\"how-it-works\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#how-it-works\"}},[e._v(\"#\")]),e._v(\" How it works\")]),e._v(\" \"),n(\"p\",[e._v('{% hint style=\"info\" %}\\nTo scan your dependencies, you must ensure you have first installed the relevant package manager, and that your project contains the supported manifest files.\\n{% endhint %}')]),e._v(\" \"),n(\"p\",[e._v(\"Once we’ve built the tree, we can use our vulnerability database to find vulnerabilities in any of the packages anywhere in the dependency tree.\")]),e._v(\" \"),n(\"p\",[e._v(\"The way by which Snyk analyzes and builds the tree varies depending on the language and package manager of the project, as well as the location of your project.\")]),e._v(\" \"),n(\"h2\",{attrs:{id:\"snyk-cli-tool-for-python-projects\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#snyk-cli-tool-for-python-projects\"}},[e._v(\"#\")]),e._v(\" Snyk CLI tool for Python projects\")]),e._v(\" \"),n(\"p\",[e._v(\"The way by which Snyk analyzes and builds the tree varies depending on the language and package manager of the project.\")]),e._v(\" \"),n(\"h2\",{attrs:{id:\"pip\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#pip\"}},[e._v(\"#\")]),e._v(\" Pip\")]),e._v(\" \"),n(\"p\",[e._v(\"Snyk requires the full, nested dependency tree in order to run tests. Requirements.txt files only contain the top-level dependencies and not the nested or transitive dependencies. The most efficient way to ensure accuracy is to install the full pip project.\")]),e._v(\" \"),n(\"p\",[e._v(\"Snyk runs tests against the specific pip installation used for that specific service/product rather than an unlinked, separate dependency tree.\")]),e._v(\" \"),n(\"p\",[e._v(\"In order to scan the full dependency tree, Snyk analyzes the installed packages to ensure none are missing. This happens even when not explicitly specified in the manifest file.\")]),e._v(\" \"),n(\"h2\",{attrs:{id:\"pipenv\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#pipenv\"}},[e._v(\"#\")]),e._v(\" Pipenv\")]),e._v(\" \"),n(\"p\",[e._v(\"In order to build the dependency tree, run \"),n(\"code\",[e._v(\"pipenv install\")]),e._v(\" as Snyk needs this to create the \"),n(\"code\",[e._v(\"pipenv graph\")]),e._v(\" which is then used for the dependency scan to fulfil itself.\")]),e._v(\" \"),n(\"p\",[e._v(\"Snyk uses the built dependency tree to analyze the \"),n(\"code\",[e._v(\"Pipfile\")]),e._v(\".\")]),e._v(\" \"),n(\"h2\",{attrs:{id:\"setup-py\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#setup-py\"}},[e._v(\"#\")]),e._v(\" setup.py\")]),e._v(\" \"),n(\"p\",[e._v(\"In order to build the dependency tree, Snyk analyzes the \"),n(\"code\",[e._v(\"setup.py\")]),e._v(\" file, and detects packages listed in the \"),n(\"code\",[e._v(\"install_requires\")]),e._v(\" key.\")]),e._v(\" \"),n(\"p\",[e._v(\"There is no auto-discovery for this file, it must be specified manually:\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"snyk test --file=setup.py\\n\")])])]),n(\"p\",[e._v(\"You can convert \"),n(\"code\",[e._v(\"setup.py\")]),e._v(\" to \"),n(\"code\",[e._v(\"requirements.txt\")]),e._v(\" by installing the packages into a virtual environment and then running \"),n(\"code\",[e._v(\"pip freeze\")]),e._v(\".\")]),e._v(\" \"),n(\"h2\",{attrs:{id:\"poetry\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#poetry\"}},[e._v(\"#\")]),e._v(\" Poetry\")]),e._v(\" \"),n(\"p\",[e._v(\"To find issues in a Python Poetry application Snyk uses \"),n(\"code\",[e._v(\"pyproject.toml\")]),e._v(\" and \"),n(\"code\",[e._v(\"poetry.lock\")]),e._v(\" files. Note both these files must be present for Snyk to identify Poetry dependencies and test for issues.\")]),e._v(\" \"),n(\"h2\",{attrs:{id:\"additional-support-details\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#additional-support-details\"}},[e._v(\"#\")]),e._v(\" Additional support details\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"https://github.com/snyk/snyk-python-plugin/blob/master/lib/types.ts\\n\")])])]),n(\"h2\",{attrs:{id:\"cli-parameters-for-python\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#cli-parameters-for-python\"}},[e._v(\"#\")]),e._v(\" CLI parameters for Python\")]),e._v(\" \"),n(\"h3\",{attrs:{id:\"prerequisites\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#prerequisites\"}},[e._v(\"#\")]),e._v(\" \"),n(\"strong\",[e._v(\"Prerequisites\")])]),e._v(\" \"),n(\"ul\",[n(\"li\",[e._v(\"Ensure you've installed the relevant package manager before you begin using the Snyk CLI tool.\")]),e._v(\" \"),n(\"li\",[e._v(\"Ensure you've included the relevant manifest files supported by Snyk before testing.\")]),e._v(\" \"),n(\"li\",[e._v(\"Install and authenticate the Snyk CLI to start analyzing projects from your local environment. Read more about our CLI in \"),n(\"a\",{attrs:{href:\"https://support.snyk.io/hc/articles/360003812458#UUID-6d3e2b39-daa0-f2f1-19d2-b9107b678c81\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"Getting started with the CLI\"),n(\"OutboundLink\")],1),e._v(\" as well.\")])]),e._v(\" \"),n(\"h3\",{attrs:{id:\"parameters\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#parameters\"}},[e._v(\"#\")]),e._v(\" Parameters\")]),e._v(\" \"),n(\"p\",[e._v(\"When scanning your Python project for vulnerabilities, use these options to modify commands:\")]),e._v(\" \"),n(\"table\",[n(\"thead\",[n(\"tr\",[n(\"th\",[e._v(\"Option\")]),e._v(\" \"),n(\"th\",[e._v(\"Description\")])])]),e._v(\" \"),n(\"tbody\",[n(\"tr\",[n(\"td\",[n(\"code\",[e._v(\"--command=\")])]),e._v(\" \"),n(\"td\",[n(\"p\",[e._v('Snyk uses Python in order to scan and find your dependencies. Snyk needs the Python version to start scanning, and defaults to \"python\"')]),n(\"p\",[e._v(\"If you are using multiple Python versions, use this parameter to specify the correct Python command for execution.\")]),n(\"p\",[e._v(\"For example: \"),n(\"code\",[e._v(\"snyk test --command=python3\")])]),n(\"p\",[e._v(\"See \"),n(\"a\",{attrs:{href:\"snyk-for-python.md\"}},[e._v(\"Using different Python versions\")]),e._v(\" for more details\")])])]),e._v(\" \"),n(\"tr\",[n(\"td\",[n(\"code\",[e._v(\"--skip-unresolved=\")])]),e._v(\" \"),n(\"td\",[e._v(\"Skip packages when they can’t be found in the environment (for example, private packages that can’t be accessed from the machine running the scan).\")])]),e._v(\" \"),n(\"tr\",[n(\"td\",[n(\"code\",[e._v(\"--file=\")])]),e._v(\" \"),n(\"td\",[n(\"p\",[e._v(\"Specify a specific file to test. By default, Snyk scans the requirements.txt file on the top level of the project.\")]),n(\"p\",[e._v(\"If explicitly specified with this parameter, Snyk can recognize any manifest files named \"),n(\"em\",[e._v(\"req\")]),e._v(\".txt, where: Each (*) is a wildcard and req can appear anywhere in the file name.\")]),n(\"p\",[e._v(\"For example, Snyk recognizes your manifest file when you have renamed it to requirements-dev.txt.\")]),n(\"p\",[n(\"strong\",[e._v(\"Note\")]),e._v(\": --package-manager=pip should be added to your cmd if the file name is not requirements.txt\")])])]),e._v(\" \"),n(\"tr\",[n(\"td\",[n(\"code\",[e._v(\"--package-manager=pip\")])]),e._v(\" \"),n(\"td\",[e._v(\"This parameter is mandatory if you specify a value for the --file parameter that is not to a requirements.txt file. The test fails without this parameter. Specify this parameter with the value pip.\")])])])]),e._v(\" \"),n(\"h2\",{attrs:{id:\"git-services-for-python-projects\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#git-services-for-python-projects\"}},[e._v(\"#\")]),e._v(\" Git services for Python projects\")]),e._v(\" \"),n(\"p\",[e._v(\"Python projects can be imported from any of the Git repositories we support.\")]),e._v(\" \"),n(\"p\",[e._v(\"In order to test your Python projects using pip as a package manager, we analyze your \"),n(\"code\",[e._v(\"requirements.txt\")]),e._v(\" file, and so you must have this file in your repository before importing.\")]),e._v(\" \"),n(\"p\",[e._v(\"If you’ve renamed your \"),n(\"code\",[e._v(\"requirements.txt\")]),e._v(\" files (for example, if you have renamed a file to \"),n(\"code\",[e._v(\"requirements-dev.txt)\")]),e._v(\", we try to import every file that follows the \"),n(\"code\",[e._v(\"**/*req*.txt\")]),e._v(\" convention as a Python project.\")]),e._v(\" \"),n(\"p\",[e._v(\"If you've placed your files in a requirements folder (for example, if you have placed your file under \"),n(\"code\",[e._v(\"requirements/requirements.txt\")]),e._v(\") we try to import every file that follows the \"),n(\"code\",[e._v(\"**/requirements/*.txt\")]),e._v(\"convention as a Python project.\")]),e._v(\" \"),n(\"p\",[e._v(\"If you are using a package manager that creates different manifest file formats other than \"),n(\"code\",[e._v(\"requirements.txt\")]),e._v(\", then either convert or import (depending on the package manager/supported files) the manifest file to the \"),n(\"code\",[e._v(\"requirements.txt\")]),e._v(\" format.\")]),e._v(\" \"),n(\"p\",[e._v(\"For example:\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"dephell deps convert --from=conda --to=requirements.txt\\n\")])])]),n(\"h2\",{attrs:{id:\"using-different-python-versions\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#using-different-python-versions\"}},[e._v(\"#\")]),e._v(\" Using different Python versions\")]),e._v(\" \"),n(\"p\",[e._v(\"Some Python projects may have dependencies that are only valid using Python 3. By default, Snyk scans with Python 2.\")]),e._v(\" \"),n(\"p\",[e._v(\"You can adjust the version of Python Snyk uses to scan dependencies, in both the CLI and Git integration.\")]),e._v(\" \"),n(\"h2\",{attrs:{id:\"setting-python-version-in-the-cli\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#setting-python-version-in-the-cli\"}},[e._v(\"#\")]),e._v(\" Setting Python version in the CLI\")]),e._v(\" \"),n(\"p\",[e._v(\"Add the following parameter to \"),n(\"code\",[e._v(\"snyk test\")]),e._v(\" or \"),n(\"code\",[e._v(\"snyk monitor\")])]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"--command=python3\\n\")])])]),n(\"p\",[e._v(\"You can also set a specific Python version by adding the following to a \"),n(\"code\",[e._v(\".snyk\")]),e._v(\" \"),n(\"a\",{attrs:{href:\"https://docs.snyk.io/fixing-and-prioritizing-issues/policies/the-.snyk-file\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"policy file\"),n(\"OutboundLink\")],1),e._v(\".\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"language-settings:\\npython: '3.7.2'\\n\")])])]),n(\"h2\",{attrs:{id:\"setting-python-version-in-git-projects\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#setting-python-version-in-git-projects\"}},[e._v(\"#\")]),e._v(\" Setting Python version in Git projects\")]),e._v(\" \"),n(\"p\",[e._v('{% hint style=\"info\" %}\\nWhen testing projects imported from Git, Snyk uses a recent version of either Python 2 or Python 3, for example 2.7.4 or 3.7.4.\\n{% endhint %}')]),e._v(\" \"),n(\"p\",[e._v(\"By default Snyk tests using Python 2.\")]),e._v(\" \"),n(\"p\",[e._v(\"To define which Python major version Snyk uses to test your Git imported projects, use either organization settings, or a \"),n(\"code\",[e._v(\".snyk\")]),e._v(\" \"),n(\"a\",{attrs:{href:\"https://docs.snyk.io/fixing-and-prioritizing-issues/policies/the-.snyk-file\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"policy file\"),n(\"OutboundLink\")],1),e._v(\".\")]),e._v(\" \"),n(\"p\",[e._v(\"To define Python version for all projects in an organization:\")]),e._v(\" \"),n(\"ol\",[n(\"li\",[e._v(\"Log in to your account and navigate to the relevant group and organization to manage.\")]),e._v(\" \"),n(\"li\",[e._v(\"Click on settings (IMAGE REMOVED!) - (https://raw.githubusercontent.com/snyk/user-docs/main/docs/.gitbook/assets/cog_icon.png) > \"),n(\"strong\",[e._v(\"Languages\")]),e._v(\".\")]),e._v(\" \"),n(\"li\",[e._v(\"Click \"),n(\"strong\",[e._v(\"Edit settings\")]),e._v(\" for \"),n(\"strong\",[e._v(\"Python\")]),e._v(\".\")]),e._v(\" \"),n(\"li\",[e._v(\"Select to use \"),n(\"strong\",[e._v(\"Python 2\")]),e._v(\" or \"),n(\"strong\",[e._v(\"Python 3\")]),e._v(\" when testing projects for this organization\")])]),e._v(\" \"),n(\"p\",[e._v(\"(IMAGE REMOVED!) - (https://raw.githubusercontent.com/snyk/user-docs/main/docs/.gitbook/assets/mceclip1-18-.png)\")]),e._v(\" \"),n(\"p\",[e._v(\"We recommend you create different organizations to work with different Python versions.\")]),e._v(\" \"),n(\"p\",[e._v(\"If you prefer to use one organization but require projects to use different Python versions, you may add a \"),n(\"code\",[e._v(\".snyk\")]),e._v(\" file to a project repository, and specify the desired version.\")]),e._v(\" \"),n(\"p\",[e._v(\"The\"),n(\"code\",[e._v(\".snyk\")]),e._v(\" file must be in the same directory as the project manifest file.\")]),e._v(\" \"),n(\"h2\",{attrs:{id:\"major-and-minor-versions\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#major-and-minor-versions\"}},[e._v(\"#\")]),e._v(\" Major and minor versions\")]),e._v(\" \"),n(\"p\",[e._v(\"On finding a \"),n(\"code\",[e._v(\".snyk\")]),e._v(\" file, Snyk detects the major version specified, and uses this to control whether the project is tested with Python 2 or Python 3. It does not use the exact version specified.\")]),e._v(\" \"),n(\"p\",[e._v(\"For example, for projects imported via Git:\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"language-settings:\\npython: '3.7.2'\\n\")])])]),n(\"p\",[e._v(\"This example tells Snyk to use a recent version of Python 3, but Snyk will not use the exact minor and patch version specified.\")])])}),[],!1,null,null,null);t.default=s.exports}}]);","extractedComments":[]}