{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[630],{1030:function(e,t,n){\"use strict\";n.r(t);var a=n(56),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"integrate-snyk-into-your-workflow\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#integrate-snyk-into-your-workflow\"}},[e._v(\"#\")]),e._v(\" Integrate Snyk into your workflow\")]),e._v(\" \"),a(\"p\",[e._v(\"This example shows how Snyk can integrate into your GitHub-based workflow.\")]),e._v(\" \"),a(\"h2\",{attrs:{id:\"step-1-set-up-environment\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#step-1-set-up-environment\"}},[e._v(\"#\")]),e._v(\" Step 1: Set up environment\")]),e._v(\" \"),a(\"ol\",[a(\"li\",[a(\"p\",[e._v(\"Open up \"),a(\"a\",{attrs:{href:\"https://docs.snyk.io/snyk-cli\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"Snyk CLI\"),a(\"OutboundLink\")],1),e._v(\", and run a git clone command on the \"),a(\"strong\",[e._v(\"goof\")]),e._v(\" repository.\")]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v(\"   git clone https://github.com/snyk/goof.git\\n\")])])])]),e._v(\" \"),a(\"li\",[a(\"p\",[e._v(\"Create a new branch, add vulnerabilities on this branch, then merge changes back to GitHub as a Pull Request:\")]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v(\"   git branch add_vulns\\n   git checkout add_vulns\\n\")])])])])]),e._v(\" \"),a(\"h2\",{attrs:{id:\"step-2-add-an-open-source-dependency\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#step-2-add-an-open-source-dependency\"}},[e._v(\"#\")]),e._v(\" Step 2: Add an open source dependency\")]),e._v(\" \"),a(\"p\",[e._v(\"Review the \"),a(\"strong\",[e._v(\"package.json\")]),e._v(\" manifest file in your cloned goof application, to see multiple direct dependencies listed:\")]),e._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:n(!function(){var e=new Error(\"Cannot find module '../../../.gitbook/assets/dependencies.png'\");throw e.code=\"MODULE_NOT_FOUND\",e}()),alt:\"\"}})]),e._v(\" \"),a(\"p\",[e._v('{% hint style=\"info\" %}\\nThese direct dependencies can also have additional transitive dependencies; libraries that they depend on.\\n{% endhint %}')]),e._v(\" \"),a(\"p\",[e._v(\"To add the dependency:\")]),e._v(\" \"),a(\"ul\",[a(\"li\",[e._v(\"Add the \"),a(\"strong\",[e._v(\"tinymce 4.1.0\")]),e._v(\" library at the bottom of the dependencies list:\")])]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v('   {\\n   \"name\": \"goof\",\\n   ...\\n   }\\n   \"dependencies\" {\\n    ...\\n   \"typeorm\": \"^0.2.24\",\\n   \"tinymce\": \"4.1.0\"\\n   },\\n   ...\\n')])])]),a(\"p\",[e._v('{% hint style=\"info\" %}\\nTip: remember to place a comma after the previous dependency.\\n{% endhint %}')]),e._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[e._v(\"Create a \"),a(\"a\",{attrs:{href:\"https://docs.npmjs.com/files/package-lock.json\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"lock file\"),a(\"OutboundLink\")],1),e._v(\" for our Node application:\")]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v(\"npm install --package-lock\\n\")])])])])]),e._v(\" \"),a(\"p\",[e._v('{% hint style=\"info\" %}\\nTip: if this file already exists, run rm package-lock.json to remove it**.**\\n{% endhint %}')]),e._v(\" \"),a(\"h2\",{attrs:{id:\"step-3-commit-and-review-changes\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#step-3-commit-and-review-changes\"}},[e._v(\"#\")]),e._v(\" Step 3: Commit and review changes\")]),e._v(\" \"),a(\"ul\",[a(\"li\",[e._v(\"Commit your change locally, checking the status of the change in our local git repository, then adding the change to our local git, then committing it:\")])]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v('   git status\\n   git add package*\\n   git commit -m \"adding tinymce v4.1.0\"\\n')])])]),a(\"ul\",[a(\"li\",[e._v(\"Commit your local code change to GitHub, transferring the files and history to your upstream git repository on GitHub:\")])]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v(\"   git push --set-upstream origin add_vulns\\n\")])])]),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v(\"GitHub has received your changes on your **add\\\\_vulns** branch.\\n\")])])]),a(\"ul\",[a(\"li\",[e._v(\"In GitHub, click \"),a(\"strong\",[e._v(\"Compare & pull request\")]),e._v(\" to compare the \"),a(\"strong\",[e._v(\"add_vulns\")]),e._v(\" branch with the \"),a(\"strong\",[e._v(\"master\")]),e._v(\" branch and generate a pull request:\")])]),e._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:n(!function(){var e=new Error(\"Cannot find module '../../../.gitbook/assets/click-compare.png'\");throw e.code=\"MODULE_NOT_FOUND\",e}()),alt:\"\"}})]),e._v(\" \"),a(\"h2\",{attrs:{id:\"step-4-snyk-tests-pull-request-checks\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#step-4-snyk-tests-pull-request-checks\"}},[e._v(\"#\")]),e._v(\" Step 4: Snyk tests pull request checks\")]),e._v(\" \"),a(\"p\",[e._v(\"Snyk automatically tests your pull request for vulnerability and license checks in the merge process:\")]),e._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:n(!function(){var e=new Error(\"Cannot find module '../../../.gitbook/assets/snyk_vuln_lic_check.png'\");throw e.code=\"MODULE_NOT_FOUND\",e}()),alt:\"\"}})]),e._v(\" \"),a(\"p\",[e._v(\"As the PR workflow completed, Snyk validated the vulnerability and license policy set for the project. Based on the policy, the checks either passed or failed; this is shown in GitHub.\")]),e._v(\" \"),a(\"p\",[e._v(\"This allows you to establish a security gate and prevent pull requests from adding new vulnerabilities, or new open source libraries that do not meet your license policy, to the source code baseline.\")]),e._v(\" \"),a(\"p\",[e._v(\"For more details on PR checks see the article on our \"),a(\"RouterLink\",{attrs:{to:\"/snyk/features/integrations/git-repository-scm-integrations/github-integration.html\"}},[e._v(\"GitHub integration\")]),e._v(\".\")],1)])}),[],!1,null,null,null);t.default=s.exports}}]);","extractedComments":[]}