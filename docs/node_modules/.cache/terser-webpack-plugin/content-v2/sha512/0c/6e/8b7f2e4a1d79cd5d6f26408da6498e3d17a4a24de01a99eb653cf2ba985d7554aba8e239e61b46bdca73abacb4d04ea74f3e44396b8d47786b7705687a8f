{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[729],{1134:function(e,t,n){\"use strict\";n.r(t);var s=n(56),a=Object(s.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[n(\"h1\",{attrs:{id:\"setup\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#setup\"}},[e._v(\"#\")]),e._v(\" Setup\")]),e._v(\" \"),n(\"h2\",{attrs:{id:\"save-password-to-session-manager\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#save-password-to-session-manager\"}},[e._v(\"#\")]),e._v(\" Save Password to Session Manager\")]),e._v(\" \"),n(\"p\",[e._v(\"Run the following command, replacing \"),n(\"code\",[e._v(\"abc123\")]),e._v(\", with \"),n(\"strong\",[e._v(\"your unique token\")]),e._v(\". This places the token in the session parameter manager.\")]),e._v(\" \"),n(\"div\",{staticClass:\"language-text extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v('aws ssm put-parameter --name \"snykAuthToken\" --value \"abc123\" --type SecureString\\n')])])]),n(\"h2\",{attrs:{id:\"setup-the-application-scanning\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#setup-the-application-scanning\"}},[e._v(\"#\")]),e._v(\" Setup the Application Scanning\")]),e._v(\" \"),n(\"p\",[e._v(\"We want to insert testing with \"),n(\"strong\",[e._v(\"Snyk\")]),e._v(\" after \"),n(\"code\",[e._v(\"maven\")]),e._v(\" has built the application. The simplest method is to insert commands to download, authorize and run the \"),n(\"strong\",[e._v(\"Snyk\")]),e._v(\" commands after Mvn has built the application/dependency tree.\")]),e._v(\" \"),n(\"p\",[e._v(\"In \"),n(\"code\",[e._v(\"modules/snyk/Dockerfile\")]),e._v(\", we have inserted the following commands to perform these actions\")]),e._v(\" \"),n(\"p\",[e._v(\"Set an environment variable from a value passed to the \"),n(\"code\",[e._v(\"docker build\")]),e._v(\" command, this will contain the token for \"),n(\"strong\",[e._v(\"Snyk\")]),e._v(\". By using an environment variable, \"),n(\"strong\",[e._v(\"Snyk\")]),e._v(\" will automatically detect the token when used.\")]),e._v(\" \"),n(\"div\",{staticClass:\"language-text extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"#~~~~~~~SNYK Variable~~~~~~~~~~~~\\n# Declare Snyktoken as a build-arg\\nARG snyk_auth_token\\n# Set the SNYK_TOKEN environment variable\\nENV SNYK_TOKEN=${snyk_auth_token}\\n#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\")])])]),n(\"p\",[e._v(\"Download \"),n(\"strong\",[e._v(\"Snyk\")]),e._v(\", run a test, looking for medium to high severity issues, and if the build succeeds, post the results to \"),n(\"strong\",[e._v(\"Snyk\")]),e._v(\" for monitoring and reporting. If a new vulnerability is found, you will be notified.\")]),e._v(\" \"),n(\"div\",{staticClass:\"language-text extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v('# package the application\\nRUN mvn package -Dmaven.test.skip=true\\n\\n#~~~~~~~SNYK test~~~~~~~~~~~~\\n# download, configure and run snyk. Break build if vulns present, post results to `https://snyk.io/`\\nRUN curl -Lo ./snyk \"https://github.com/snyk/snyk/releases/download/v1.210.0/snyk-linux\"\\nRUN chmod -R +x ./snyk\\n#Auth set through environment variable\\nRUN ./snyk test --severity-threshold=medium\\nRUN ./snyk monitor\\n')])])]),n(\"h2\",{attrs:{id:\"setting-up-docker-scanning\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#setting-up-docker-scanning\"}},[e._v(\"#\")]),e._v(\" Setting Up Docker Scanning\")]),e._v(\" \"),n(\"p\",[e._v(\"Later in the build process, a docker image is created. We want to analyze it for vulnerabilities. We will do this in \"),n(\"code\",[e._v(\"buildspec.yml\")]),e._v(\". First, pull the \"),n(\"strong\",[e._v(\"Snyk\")]),e._v(\" token \"),n(\"code\",[e._v(\"snykAuthToken\")]),e._v(\" from the \"),n(\"code\",[e._v(\"parameter store\")]),e._v(\":\")]),e._v(\" \"),n(\"div\",{staticClass:\"language-text extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v('env:\\n  parameter-store:\\n    SNYK_AUTH_TOKEN: \"snykAuthToken\"\\n')])])]),n(\"p\",[e._v(\"In the \"),n(\"code\",[e._v(\"prebuild\")]),e._v(\" phase, we will install Snyk\")]),e._v(\" \"),n(\"div\",{staticClass:\"language-text extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v('phases:\\n  pre_build:\\n    commands:\\n\\n      - PWDUTILS=$(pwd)\\n      - curl -Lo ./snyk \"https://github.com/snyk/snyk/releases/download/v1.210.0/snyk-linux\"\\n      - chmod -R +x ./snyk\\n')])])]),n(\"p\",[e._v(\"In the \"),n(\"code\",[e._v(\"build\")]),e._v(\" phase we will pass the token to the \"),n(\"strong\",[e._v(\"docker compose\")]),e._v(\" command where it will be retrieved in the Dockerfile code we previously setup to test the application:\")]),e._v(\" \"),n(\"div\",{staticClass:\"language-text extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"build:\\n    commands:\\n      - docker build --build-arg snyk_auth_token=$SNYK_AUTH_TOKEN -t $REPOSITORY_URI:latest .\\n\")])])]),n(\"p\",[e._v(\"Next we will \"),n(\"strong\",[e._v(\"authorize\")]),e._v(\" the \"),n(\"strong\",[e._v(\"Snyk\")]),e._v(\" instance for testing the Docker image thatâ€™s produced. If it passes we will pass the results to \"),n(\"strong\",[e._v(\"Snyk\")]),e._v(\" for monitoring and reporting.\")]),e._v(\" \"),n(\"div\",{staticClass:\"language-text extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"build:\\n    commands:\\n      - $PWDUTILS/snyk auth $SNYK_AUTH_TOKEN\\n      - $PWDUTILS/snyk test --docker $REPOSITORY_URI:latest\\n      - $PWDUTILS/snyk monitor --docker $REPOSITORY_URI:latest\\n      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG\\n\")])])]),n(\"p\",[e._v(\"In terminal, \"),n(\"strong\",[e._v(\"navigate\")]),e._v(\" to this folder:\")]),e._v(\" \"),n(\"div\",{staticClass:\"language-text extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"cd ~/environment/aws-modernization-workshop/\\n\")])])]),n(\"p\",[e._v(\"To try this module, let us copy the \"),n(\"strong\",[e._v(\"Snyk\")]),e._v(\" versions over to our build:\")]),e._v(\" \"),n(\"div\",{staticClass:\"language-text extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"cp modules/snyk/Dockerfile modules/containerize-application/Dockerfile\\ncp modules/snyk/buildspec.yml buildspec.yml\\n\")])])])])}),[],!1,null,null,null);t.default=a.exports}}]);","extractedComments":[]}