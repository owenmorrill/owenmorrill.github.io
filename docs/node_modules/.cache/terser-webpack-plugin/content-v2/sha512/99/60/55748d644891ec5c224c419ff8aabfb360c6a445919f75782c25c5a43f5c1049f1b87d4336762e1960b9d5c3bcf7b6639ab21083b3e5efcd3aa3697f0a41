{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[862],{1260:function(e,t,n){\"use strict\";n.r(t);var a=n(56),o=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[n(\"h1\",{attrs:{id:\"section-4-containerize-your-app\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#section-4-containerize-your-app\"}},[e._v(\"#\")]),e._v(\" Section 4: Containerize your app\")]),e._v(\" \"),n(\"h2\",{attrs:{id:\"step-1-create-a-new-branch-for-the-container-files\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#step-1-create-a-new-branch-for-the-container-files\"}},[e._v(\"#\")]),e._v(\" Step 1: Create a new branch for the container files\")]),e._v(\" \"),n(\"p\",[e._v(\"Let's start by creating a new branch from our \"),n(\"code\",[e._v(\"develop\")]),e._v(\" branch, where we'll create the files for this section before merging them to \"),n(\"code\",[e._v(\"develop\")]),e._v(\". Call it \"),n(\"code\",[e._v(\"add-container-files\")]),e._v(\" .\")]),e._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:\"https://partner-workshop-assets.s3.us-east-2.amazonaws.com/gh-container-newbranch.png\",alt:\"\"}})]),e._v(\" \"),n(\"h2\",{attrs:{id:\"step-2-create-the-files-for-the-container-workflow\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#step-2-create-the-files-for-the-container-workflow\"}},[e._v(\"#\")]),e._v(\" Step 2: Create the files for the Container workflow\")]),e._v(\" \"),n(\"p\",[e._v('{% hint style=\"info\" %}\\nIn this step you\\'ll create a Dockerfile and modify the GitHub Actions CI Workflows. The files are available in the '),n(\"code\",[e._v(\"container-actions\")]),e._v(\" branch if you want to copy-paste from there. These are there for reference; attempting to merge that branch to \"),n(\"code\",[e._v(\"develop\")]),e._v(\" will cause Merge Conflicts.\\n{% endhint %}\")]),e._v(\" \"),n(\"h3\",{attrs:{id:\"create-a-dockerfile\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#create-a-dockerfile\"}},[e._v(\"#\")]),e._v(\" Create a Dockerfile\")]),e._v(\" \"),n(\"p\",[e._v(\"The first file we'll create is the \"),n(\"code\",[e._v(\"Dockerfile\")]),e._v(' , the instructions to package the application into a container. Ensure you\\'re on the new branch, and click on \"Add File\", then \"Create new file\".')]),e._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:\"https://partner-workshop-assets.s3.us-east-2.amazonaws.com/gh-container-createnewfile.png\",alt:\"\"}})]),e._v(\" \"),n(\"p\",[e._v(\"Call the new file \"),n(\"code\",[e._v(\"Dockerfile\")]),e._v(\" as shown below.\")]),e._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:\"https://partner-workshop-assets.s3.us-east-2.amazonaws.com/gh-container-createdockerfile.png\",alt:\"\"}})]),e._v(\" \"),n(\"p\",[e._v(\"Paste this in as the contents of the \"),n(\"code\",[e._v(\"Dockerfile\")])]),e._v(\" \"),n(\"div\",{staticClass:\"language-text extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v('FROM node:6-stretch\\n\\nRUN mkdir /usr/src/goof\\nRUN mkdir /tmp/extracted_files\\nCOPY . /usr/src/goof\\nWORKDIR /usr/src/goof\\n\\nRUN npm update\\nRUN npm install\\nEXPOSE 3001\\nEXPOSE 9229\\nENTRYPOINT [\"npm\", \"start\"]\\n')])])]),n(\"p\",[e._v(\"When ready, commit the changes directly to the \"),n(\"code\",[e._v(\"add-container-files\")]),e._v(\" branch.\")]),e._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:\"https://partner-workshop-assets.s3.us-east-2.amazonaws.com/gh-container-createdockerfile2.png\",alt:\"\"}})]),e._v(\" \"),n(\"h3\",{attrs:{id:\"modify-the-ci-workflows\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#modify-the-ci-workflows\"}},[e._v(\"#\")]),e._v(\" Modify the CI workflows\")]),e._v(\" \"),n(\"p\",[e._v(\"Now, we need to tell GitHub Actions how to build our container. Recall that the \"),n(\"code\",[e._v(\".github/workflows\")]),e._v(\" folder contains the CI workflows that re-build our application when Pull Requests are opened against our branches. Let's add the Container build steps to both CI workflows using the GitHub Editor.\")]),e._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:\"https://partner-workshop-assets.s3.us-east-2.amazonaws.com/gh-container-editdevelopci.png\",alt:\"\"}})]),e._v(\" \"),n(\"p\",[e._v(\"Replace the contents of \"),n(\"code\",[e._v(\".github/workflows/goof-ci-develop\")]),e._v(\" with the following:\")]),e._v(\" \"),n(\"div\",{staticClass:\"language-text extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node\\n# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions\\n\\nname: Node.js CI task for develop branch\\n\\non:\\n  push:\\n    branches: [ develop ]\\n  pull_request:\\n    branches: [ develop ]\\n\\njobs:\\n  build_app:\\n    runs-on: ubuntu-latest\\n    steps:\\n    - uses: actions/checkout@v2\\n    - name: Use Node.js 12.x\\n      uses: actions/setup-node@v1\\n      with:\\n        node-version: 12.x\\n    - run: npm ci\\n    - run: npm run build --if-present\\n  build_container:\\n    needs: [build_app]\\n    runs-on: ubuntu-latest\\n    steps:\\n      - uses: actions/checkout@v2\\n      - name: Setup up Docker Buildx\\n        uses: docker/setup-buildx-action@v1\\n      - name: Build Docker Image\\n        id: docker_build\\n        uses: docker/build-push-action@v2\\n        with:\\n          push: false\\n          load: true\\n          tags: goof:develop         \\n      - name: Snyk Container Test\\n        continue-on-error: true\\n        uses: snyk/actions/docker@master\\n        env:\\n          SNYK_TOKEN: ${{ Secrets.SNYK_TOKEN }}\\n        with:\\n          image: goof:develop\\n          args: --file=Dockerfile\\n      - name: Upload Container Scan results to GitHub Code Scanning\\n        uses: github/codeql-action/upload-sarif@v1\\n        with:\\n          sarif_file: snyk.sarif\\n\")])])]),n(\"p\",[e._v(\"Our CI workflow will now take the following actions:\")]),e._v(\" \"),n(\"ol\",[n(\"li\",[e._v(\"First, it will build the app. This is the \"),n(\"code\",[e._v(\"build-app\")]),e._v(\" job.\")]),e._v(\" \"),n(\"li\",[e._v(\"If the app build succeeds, it will build the container.\")]),e._v(\" \"),n(\"li\",[e._v(\"If the container builds successfully, it will then scan it with Snyk container.\")]),e._v(\" \"),n(\"li\",[e._v(\"When the scan is done, results are pushed to GitHub Security Code Scanning.\")])]),e._v(\" \"),n(\"p\",[e._v(\"Now commit the changes directly to our new \"),n(\"code\",[e._v(\"add-container-files\")]),e._v(\" branch.\")]),e._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:\"https://partner-workshop-assets.s3.us-east-2.amazonaws.com/gh-container-commitcontainerci.png\",alt:\"\"}})]),e._v(\" \"),n(\"p\",[e._v(\"Now, repeat the same process for the \"),n(\"code\",[e._v(\"PROD\")]),e._v(\" workflow, replacing the image tag specified in lines 36 and 43 from \"),n(\"code\",[e._v(\"goof:develop\")]),e._v(\" to \"),n(\"code\",[e._v(\"goof:PROD\")]),e._v(\". This will ensure the \"),n(\"code\",[e._v(\"PROD\")]),e._v(\" and \"),n(\"code\",[e._v(\"develop\")]),e._v(\" containers remain separate entities once uploaded to a container registry.\")]),e._v(\" \"),n(\"h2\",{attrs:{id:\"step-3-create-a-pull-request-into-develop\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#step-3-create-a-pull-request-into-develop\"}},[e._v(\"#\")]),e._v(\" Step 3: Create a Pull Request into develop\")]),e._v(\" \"),n(\"p\",[e._v(\"With the Dockerfile created and workflows modified, we'll merge the \"),n(\"code\",[e._v(\"add-container-files\")]),e._v(\" branch into the \"),n(\"code\",[e._v(\"develop\")]),e._v(\" branch to make it official. In GitHub, initiative a Pull Request. Like in the previous section, remember to select your fork as the Base repo.\")]),e._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:\"https://partner-workshop-assets.s3.us-east-2.amazonaws.com/gh-container-addfilespr.png\",alt:\"\"}})]),e._v(\" \"),n(\"p\",[e._v(\"Once the PR is created, the checks will run, including the new one we added to build the container image. Once all checks complete, merge the Pull Request and delete the branch.\")]),e._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:\"https://partner-workshop-assets.s3.us-east-2.amazonaws.com/gh-container-addfileprchecks.png\",alt:\"\"}})]),e._v(\" \"),n(\"p\",[e._v(\"We have now packaged our application into a container! Even through we fixed all open and fixable issues with the Open Source components in our application, our decision to package it into a container introduced additional risks that must be addressed. Head on to Section 2 to see how Snyk Container helps you find and fix those issues.\")])])}),[],!1,null,null,null);t.default=o.exports}}]);","extractedComments":[]}