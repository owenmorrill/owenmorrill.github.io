{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[825],{1223:function(e,t,n){\"use strict\";n.r(t);var s=n(56),a=Object(s.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[n(\"h1\",{attrs:{id:\"set-up-a-container-delivery-pipeline-with-vulnerability-scanning\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#set-up-a-container-delivery-pipeline-with-vulnerability-scanning\"}},[e._v(\"#\")]),e._v(\" Set up a container delivery pipeline with vulnerability scanning\")]),e._v(\" \"),n(\"p\",[e._v(\"Now that we know our container builds and runs, we'll set up a delivery pipeline to differentiate the PROD-ready version of our container, from the \"),n(\"code\",[e._v(\"dev\")]),e._v(\" tag we're actively developing.\")]),e._v(\" \"),n(\"p\",[e._v(\"We'll use Git branches to track these two states of our code.\")]),e._v(\" \"),n(\"h2\",{attrs:{id:\"create-a-github-branch-for-the-prod-code\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#create-a-github-branch-for-the-prod-code\"}},[e._v(\"#\")]),e._v(\" Create a GitHub branch for the PROD code\")]),e._v(\" \"),n(\"p\",[e._v(\"In GitHub, create a new branch. Call it PROD.\")]),e._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:\"https://partner-workshop-assets.s3.us-east-2.amazonaws.com/gh-create-prodbranch.png\",alt:\"\"}})]),e._v(\" \"),n(\"p\",[e._v(\"That's all for now! Now, let's set up the CD portion of our pipeline in Docker Hub.\")]),e._v(\" \"),n(\"h2\",{attrs:{id:\"configure-docker-hub-for-continuous-delivery\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#configure-docker-hub-for-continuous-delivery\"}},[e._v(\"#\")]),e._v(\" Configure Docker Hub for Continuous Delivery\")]),e._v(\" \"),n(\"p\",[e._v(\"We can use Docker Hub's Autobuild to re-build our PROD Container every time changes are pushed into our repo's PROD branch. Navigate to the repo for the \"),n(\"code\",[e._v(\"goof\")]),e._v(\" container created in the last step.\")]),e._v(\" \"),n(\"h3\",{attrs:{id:\"optional-enable-vulnerability-scanning\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#optional-enable-vulnerability-scanning\"}},[e._v(\"#\")]),e._v(\" Optional: Enable Vulnerability Scanning\")]),e._v(\" \"),n(\"p\",[e._v('{% hint style=\"info\" %}\\nThis step requires a paid Docker Hub subscription\\n{% endhint %}')]),e._v(\" \"),n(\"p\",[e._v(\"Navigate to the Repository settings, then click the button to enable Vulnerability Scanning.\")]),e._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:\"https://partner-workshop-assets.s3.us-east-2.amazonaws.com/hub-repo-enable-scans.png\",alt:\"Enable Image Scanning in the Repo Settings\"}})]),e._v(\" \"),n(\"p\",[e._v(\"Docker Hub uses Snyk to scan for vulnerabilities as images are pushed into Docker Hub. Combined with Autobuild, Docker Hub will update vulnerability counts each time our PROD container is re-built.\")]),e._v(\" \"),n(\"h3\",{attrs:{id:\"configure-autobuild-for-the-github-repo-s-prod-branch\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#configure-autobuild-for-the-github-repo-s-prod-branch\"}},[e._v(\"#\")]),e._v(\" Configure AutoBuild for the GitHub repo's PROD branch\")]),e._v(\" \"),n(\"p\",[e._v(\"Next up, navigate to \"),n(\"code\",[e._v(\"Builds\")]),e._v(\". AutoBuild requires you to connect Docker Hub to GitHub.\")]),e._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:\"https://partner-workshop-assets.s3.us-east-2.amazonaws.com/dockerhub-configurescm.png\",alt:\"\"}})]),e._v(\" \"),n(\"p\",[e._v(\"Select your GitHub Repo from the drop-down list.\")]),e._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:\"https://partner-workshop-assets.s3.us-east-2.amazonaws.com/dockerhub-chooserepo.png\",alt:\"\"}})]),e._v(\" \"),n(\"p\",[e._v(\"Configure the rules to use the PROD branch, and to tag the built image PROD. Trigger the build.\")]),e._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:\"https://partner-workshop-assets.s3.us-east-2.amazonaws.com/dockerhub-choosegitbranch.png\",alt:\"\"}})]),e._v(\" \"),n(\"p\",[e._v(\"Once Autobuild completes, you'll see the PROD container, and its vulnerabilities, next to the dev container we pushed earlier in the Repo overview Tab.\")]),e._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:\"https://partner-workshop-assets.s3.us-east-2.amazonaws.com/dockerhub-tagvulns.png\",alt:\"\"}})]),e._v(\" \"),n(\"p\",[e._v(\"Our container has many vulnerabilities! It's not good to wait until PROD to catch these, so we'll set up CI workflows with GitHub Actions to catch vulnerabilities as part of the Pull Request process.\")]),e._v(\" \"),n(\"h2\",{attrs:{id:\"set-up-ci-and-snyk-scans-with-github-actions\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#set-up-ci-and-snyk-scans-with-github-actions\"}},[e._v(\"#\")]),e._v(\" Set up CI and Snyk scans with GitHub Actions\")]),e._v(\" \"),n(\"p\",[e._v(\"The sample repo includes two GitHub Actions templates that run when Pull Requests are opened against the PROD branch. They can be found in the repo's \"),n(\"code\",[e._v(\".github/workflows\")]),e._v(\" folder.\")]),e._v(\" \"),n(\"ul\",[n(\"li\",[e._v(\"The first one will fail if high severity vulnerabilities with available fixes are found\")]),e._v(\" \"),n(\"li\",[e._v(\"The second one builds the application and container, then scans with Snyk Container\")])]),e._v(\" \"),n(\"p\",[e._v(\"The Container task ensures our application builds correctly after code changes, and will not fail the check in case of vulnerabilities.\")]),e._v(\" \"),n(\"p\",[e._v('{% tabs %}\\n{% tab title=\"Snyk Open Source\" %}')]),e._v(\" \"),n(\"div\",{staticClass:\"language-text extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"name: Check for Open Source Vulnerabilities with Snyk\\non: \\n  pull_request:\\n    branches:\\n      PROD\\njobs:\\n  oss-security:\\n    runs-on: ubuntu-latest\\n    steps:\\n    - uses: actions/checkout@master\\n    - name: Check for High Severity OSS Vulnerabilities\\n      uses: snyk/actions/node@master\\n      env:\\n        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}\\n      with:\\n        args: --severity-threshold=high --fail-on=upgradable\\n\")])])]),n(\"p\",[e._v(\"{% endtab %}\")]),e._v(\" \"),n(\"p\",[e._v('{% tab title=\"CI + Snyk Container\" %}')]),e._v(\" \"),n(\"div\",{staticClass:\"language-text extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"name: CI task for PROD branch\\n\\non:\\n  pull_request:\\n    branches: [ PROD ]\\n\\njobs:\\n  build_app:\\n    runs-on: ubuntu-latest\\n    steps:\\n    - uses: actions/checkout@v2\\n    - name: Use Node.js 12.x\\n      uses: actions/setup-node@v1\\n      with:\\n        node-version: 12.x\\n    - run: npm ci\\n    - run: npm run build --if-present\\n  build_container:\\n    needs: [build_app]\\n    runs-on: ubuntu-latest\\n    steps:\\n      - uses: actions/checkout@v2\\n      - name: Setup up Docker Buildx\\n        uses: docker/setup-buildx-action@v1\\n      - name: Build Docker Image\\n        id: docker_build\\n        uses: docker/build-push-action@v2\\n        with:\\n          push: false\\n          load: true\\n          tags: goof:PROD         \\n      - name: Snyk Container Test\\n        continue-on-error: true\\n        uses: snyk/actions/docker@master\\n        env:\\n          SNYK_TOKEN: ${{ Secrets.SNYK_TOKEN }}\\n        with:\\n          image: goof:PROD\\n          args: --file=Dockerfile\\n      - name: Upload Container Scan results to GitHub Code Scanning\\n        uses: github/codeql-action/upload-sarif@v1\\n        with:\\n          sarif_file: snyk.sarif\\n\")])])]),n(\"p\",[e._v(\"{% endtab %}\\n{% endtabs %}\")]),e._v(\" \"),n(\"p\",[e._v(\"To use these workflows, you'll need to save a Snyk Token into GitHub.\")]),e._v(\" \"),n(\"h4\",{attrs:{id:\"retrieve-your-snyk-token\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#retrieve-your-snyk-token\"}},[e._v(\"#\")]),e._v(\" Retrieve your Snyk Token\")]),e._v(\" \"),n(\"p\",[e._v(\"You can find your API Token one of two ways:\")]),e._v(\" \"),n(\"ul\",[n(\"li\",[e._v(\"If you have the Snyk CLI, retrieve it by running \"),n(\"code\",[e._v(\"snyk config get api\")])]),e._v(\" \"),n(\"li\",[e._v(\"In the Snyk UI, head to your account \"),n(\"a\",{attrs:{href:\"https://app.snyk.io/account\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"Settings Page\"),n(\"OutboundLink\")],1),e._v(\" and retrieve it.\")])]),e._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:\"https://partner-workshop-assets.s3.us-east-2.amazonaws.com/snyk-token.png\",alt:\"\"}})]),e._v(\" \"),n(\"p\",[e._v('{% hint style=\"info\" %}\\nStuck? Check out '),n(\"a\",{attrs:{href:\"https://support.snyk.io/hc/en-us/articles/360004008278-Revoking-and-regenerating-Snyk-API-tokens\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"Revoking and regenerating Snyk API Tokens\"),n(\"OutboundLink\")],1),e._v(\"\\n{% endhint %}\")]),e._v(\" \"),n(\"h4\",{attrs:{id:\"store-the-snyk-token-in-github-secrets\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#store-the-snyk-token-in-github-secrets\"}},[e._v(\"#\")]),e._v(\" Store the Snyk Token in GitHub Secrets\")]),e._v(\" \"),n(\"p\",[e._v(\"Store the Token in the Forked Repo's secrets by navigating to Settings -> Secrets -> New Repository Secret. Name the Secret \"),n(\"code\",[e._v(\"SNYK_TOKEN\")])]),e._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:\"https://partner-workshop-assets.s3.us-east-2.amazonaws.com/gh-secrets.png\",alt:\"\"}})]),e._v(\" \"),n(\"p\",[e._v('{% hint style=\"info\" %}\\nStuck? Check out '),n(\"a\",{attrs:{href:\"https://docs.github.com/en/free-pro-team@latest/actions/reference/encrypted-secrets#creating-encrypted-secrets-for-a-repository\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"Creating Encrypted Secrets for a Repository\"),n(\"OutboundLink\")],1),e._v(\"\\n{% endhint %}\")]),e._v(\" \"),n(\"p\",[e._v(\"With our build and test infrastructure in place, we can start fixing our container vulnerabilities!\")])])}),[],!1,null,null,null);t.default=a.exports}}]);","extractedComments":[]}