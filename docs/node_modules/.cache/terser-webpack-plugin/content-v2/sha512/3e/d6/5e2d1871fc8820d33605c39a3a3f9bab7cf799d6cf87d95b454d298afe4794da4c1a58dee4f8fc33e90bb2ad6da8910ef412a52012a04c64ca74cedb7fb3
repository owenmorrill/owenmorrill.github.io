{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[758],{1154:function(e,t,o){\"use strict\";o.r(t);var a=o(56),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[o(\"h1\",{attrs:{id:\"rce-vulnerability\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#rce-vulnerability\"}},[e._v(\"#\")]),e._v(\" RCE Vulnerability\")]),e._v(\" \"),o(\"p\",[e._v(\"During the workshop, we \"),o(\"a\",{attrs:{href:\"https://raw.githubusercontent.com/snyk/user-docs/main/docs/module-1-scanning-and-monitoring-source-code/review-application-scan-results.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"draw attention \"),o(\"OutboundLink\")],1),e._v(\"to the top-level Docker image vulnerability and explain how the base image can be upgraded.  We reviewed a vulnerability and included a screenshot for the Tomcat version.  In this section, we will be exploiting the version of Tomcat in the repository.\")]),e._v(\" \"),o(\"p\",[e._v(\"The \"),o(\"a\",{attrs:{href:\"https://github.com/snyk-labs/java-goof/blob/master/exploits/tomcat-rce/README.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"README.md\"),o(\"OutboundLink\")],1),e._v(\" contents are fairly comprehensive about what to do.  The unifying story here is how an external user can exploit a vulnerability of your application based on its use of third-party software.  In this case, it is the application server Tomcat.\")]),e._v(\" \"),o(\"p\",[e._v(\"The exploit sets up a webform where you can run commands.  Some of these commands include \"),o(\"code\",[e._v(\"whoami\")]),e._v(\" and \"),o(\"code\",[e._v(\"dpkg -l\")]),e._v(\" but may also include other commands that echo the contents of \"),o(\"code\",[e._v(\"/etc/passwd\")]),e._v(\" or \"),o(\"code\",[e._v(\"touch\")]),e._v(\".  When we run the workshop, we'll showcase a number of interesting commands including:\")]),e._v(\" \"),o(\"ul\",[o(\"li\",[o(\"code\",[e._v(\"cat etc/passwd\")])]),e._v(\" \"),o(\"li\",[o(\"code\",[e._v(\"touch <filename>\")])]),e._v(\" \"),o(\"li\",[o(\"code\",[e._v(\"touch /etc/testfile\")])]),e._v(\" \"),o(\"li\",[o(\"code\",[e._v(\"curl\")])])]),e._v(\" \"),o(\"p\",[e._v(\"These commands are representative of what attackers may use to explore what is available on your vulnerable system.  They don't use ssh to access your system, but instead find a way to run shell commands to exploit your system.  We recommend you try various commands to become acquainted with what is available on this vulnerable system.\")]),e._v(\" \"),o(\"p\",[e._v(\"When you run through the commands to patch the system and re-check, you'll see the vulnerability is no longer there.  While we're running commands at the CLI, it is worth noting the contents of the file \"),o(\"code\",[e._v(\"tomcat-rce.sh\")]),e._v(\" are:\")]),e._v(\" \"),o(\"div\",{staticClass:\"language- extra-class\"},[o(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[o(\"code\",[e._v('#!/usr/bin/env bash\\n\\nHOSTIP=\"$(ifconfig | grep -Eo \\'inet (addr:)?([0-9]*\\\\.){3}[0-9]*\\' | grep -Eo \\'([0-9]*\\\\.){3}[0-9]*\\' | grep -v \\'127.0.0.1\\' | head -1):8080\"\\n\\nLB_HOST=$(kubectl get svc goof -o json | jq -r .status.loadBalancer.ingress[0].hostname)\\nif [[ \"$LB_HOST\" != \"\" ]]; then\\n    HOSTIP=$LB_HOST\\nfi\\n\\necho Detected $HOSTIP as target host\\ndocker build -t tomcat-rce tomcat-rce\\nalias check=\"docker run --rm -it tomcat-rce -u http://${HOSTIP}\"\\nalias pwn=\"docker run --rm -it tomcat-rce -u http://${HOSTIP} -p pwn\"\\nalias bounce=\"kubectl delete pod --selector app=goof\"\\nalias browse=\"open http://${HOSTIP}\"\\n')])])]),o(\"p\",[e._v(\"You may be wondering what the different URL commands are and how they work.  Here we recommend you review the Dockerfile to see we're building a container that is deliberately vulnerable and it is accepting parameters to perform actions on our behalf.  This is because we've uploaded a file to grant us access into the container.  This is because \"),o(\"a\",{attrs:{href:\"https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHETOMCAT-451514\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"CVE-2017-12617\"),o(\"OutboundLink\")],1),e._v(\" is an arbitrary code execution vulnerability, and we're sending in arbitrary code to run!\")]),e._v(\" \"),o(\"p\",[e._v(\"The solution to this vulnerability is to use a newer version of tomcat.  When we patch the Dockerfile to use a newer version, the vulnerability goes away.\")])])}),[],!1,null,null,null);t.default=n.exports}}]);","extractedComments":[]}