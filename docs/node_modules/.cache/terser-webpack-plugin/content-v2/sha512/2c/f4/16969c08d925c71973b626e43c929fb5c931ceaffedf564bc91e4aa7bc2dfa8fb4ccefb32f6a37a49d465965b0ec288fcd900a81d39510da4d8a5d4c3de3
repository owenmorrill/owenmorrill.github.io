{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[191],{596:function(t,e,o){\"use strict\";o.r(e);var r=o(56),a=Object(r.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[o(\"h1\",{attrs:{id:\"gitlab-flow-and-tech\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#gitlab-flow-and-tech\"}},[t._v(\"#\")]),t._v(\" Gitlab - Flow and Tech\")]),t._v(\" \"),o(\"h3\",{attrs:{id:\"flow\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#flow\"}},[t._v(\"#\")]),t._v(\" Flow \"),o(\"a\",{attrs:{href:\"#flow\",id:\"flow\"}})]),t._v(\" \"),o(\"ol\",[o(\"li\",[t._v(\"Fetch the monitored projects from Snyk (if the \"),o(\"code\",[t._v(\"skipSnykMonitoredRepos\")]),t._v(\" flag was \"),o(\"strong\",[t._v(\"not set\")]),t._v(\" and the \"),o(\"code\",[t._v(\"SNYK_TOKEN\")]),t._v(\" was exported).\")]),t._v(\" \"),o(\"li\",[t._v(\"Set Gitlab or Gitlab Server mode (if a host was provided or not through the \"),o(\"code\",[t._v(\"url\")]),t._v(\" flag).\")]),t._v(\" \"),o(\"li\",[t._v(\"Fetch one/some/all the groups that the credentials have access to from the SCM and create a groups list.\")]),t._v(\" \"),o(\"li\",[t._v(\"Fetch one/all projects under the fetched/provided groups.\")]),t._v(\" \"),o(\"li\",[t._v(\"Remove the projects that are not monitored by Snyk (if the \"),o(\"code\",[t._v(\"skipSnykMonitoredRepos\")]),t._v(\" flag was \"),o(\"strong\",[t._v(\"not set\")]),t._v(\" and the \"),o(\"code\",[t._v(\"SNYK_TOKEN\")]),t._v(\" was exported) and create a Projects list.\")]),t._v(\" \"),o(\"li\",[t._v(\"Create an import file for unmonitored repos to use for easily importing repos into Snyk account (if the \"),o(\"code\",[t._v(\"importConfDir\")]),t._v(\" flag was set)\")]),t._v(\" \"),o(\"li\",[t._v(\"Fetch the commits for the fetched/provided project/s and create a Contributors list.\")]),t._v(\" \"),o(\"li\",[t._v(\"Count the commits for the project/s by the contributors.\")]),t._v(\" \"),o(\"li\",[t._v(\"Remove the contributors that were specified in the exclusion file (if \"),o(\"code\",[t._v(\"the exclusionFilePath\")]),t._v(\" flag was set and a valid path to a text file was provided).\")]),t._v(\" \"),o(\"li\",[t._v(\"Print the results.\")])]),t._v(\" \"),o(\"h3\",{attrs:{id:\"gitlab-api-endpoints-used\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#gitlab-api-endpoints-used\"}},[t._v(\"#\")]),t._v(\" Gitlab API endpoints used \"),o(\"a\",{attrs:{href:\"#bitbucket-cloud-api-endpoints-used\",id:\"bitbucket-cloud-api-endpoints-used\"}})]),t._v(\" \"),o(\"ul\",[o(\"li\",[t._v(\"To get the groups paths from Gitlab if a group/s names were provided: \"),o(\"code\",[t._v(\"api/v4/groups?all_available=true&search={groupName}\")])]),t._v(\" \"),o(\"li\",[t._v(\"To get the projects from Gitlab if a host url was \"),o(\"strong\",[t._v(\"not\")]),t._v(\" provided: \"),o(\"code\",[t._v(\"/api/v4/projects?membership=true\")])]),t._v(\" \"),o(\"li\",[t._v(\"To get the projects from Gitlab Server if a host url \"),o(\"strong\",[t._v(\"was\")]),t._v(\" provided: \"),o(\"code\",[t._v(\"/api/v4/projects\")])]),t._v(\" \"),o(\"li\",[t._v(\"To get the commits for the fetched/provided project/s list: \"),o(\"code\",[t._v(\"/api/v4/projects/{ProjectPath}/repository/commits?since=${threeMonthsDate}\")])])])])}),[],!1,null,null,null);e.default=a.exports}}]);","extractedComments":[]}