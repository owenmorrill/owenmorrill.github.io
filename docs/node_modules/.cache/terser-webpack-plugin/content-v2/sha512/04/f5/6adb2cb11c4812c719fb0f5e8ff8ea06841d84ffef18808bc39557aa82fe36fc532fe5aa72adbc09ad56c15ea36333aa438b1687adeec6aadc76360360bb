{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[528],{925:function(e,t,n){\"use strict\";n.r(t);var r=n(56),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[n(\"h1\",{attrs:{id:\"install-the-snyk-controller-with-helm\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#install-the-snyk-controller-with-helm\"}},[e._v(\"#\")]),e._v(\" Install the Snyk controller with Helm\")]),e._v(\" \"),n(\"p\",[e._v(\"To get vulnerability details about your Kubernetes workloads, a Snyk admin must first install the Snyk controller onto your cluster. The Snyk controller is published in \"),n(\"a\",{attrs:{href:\"https://hub.helm.sh/charts/snyk/snyk-monitor\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"Helm Hub\"),n(\"OutboundLink\")],1),e._v(\".\")]),e._v(\" \"),n(\"p\",[e._v(\"This section covers:\")]),e._v(\" \"),n(\"ul\",[n(\"li\",[e._v(\"Snyk integration for most Kubernetes platforms\")]),e._v(\" \"),n(\"li\",[e._v(\"Additional configuration steps for integration when using Amazon Elastic Container Registry (ECR) with your Amazon Elastic Kubernetes Service (EKS) clusters\")])]),e._v(\" \"),n(\"p\",[n(\"strong\",[e._v(\"Prerequisites\")])]),e._v(\" \"),n(\"p\",[e._v('{% hint style=\"info\" %}\\n'),n(\"strong\",[e._v(\"Feature availability\")]),n(\"br\"),e._v(\"\\nThis feature is available with all paid plans. See \"),n(\"a\",{attrs:{href:\"https://snyk.io/plans/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"pricing plans\"),n(\"OutboundLink\")],1),e._v(\" for more details.\\n{% endhint %}\")]),e._v(\" \"),n(\"ul\",[n(\"li\",[e._v(\"An administrator account for your Snyk organization.\")]),e._v(\" \"),n(\"li\",[e._v(\"A minimum of 50 GB of storage must be available in the form of an \"),n(\"a\",{attrs:{href:\"https://kubernetes.io/docs/concepts/storage/volumes/#emptydir\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"emptyDir\"),n(\"OutboundLink\")],1),e._v(\" on the cluster.\")]),e._v(\" \"),n(\"li\",[e._v(\"Your Kubernetes cluster needs to be able to communicate with Snyk outbound over HTTPS.\")]),e._v(\" \"),n(\"li\",[e._v(\"When configuring Snyk to integrate with an Amazon Elastic Kubernetes Services (EKS) cluster, if you wish to scan images hosted on your Amazon Elastic Container Registry (ECR), you need to first follow the prerequisites outlined in the \"),n(\"a\",{attrs:{href:\"https://docs.aws.amazon.com/AmazonECR/latest/userguide/ECR_on_EKS.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"AWS documentation\"),n(\"OutboundLink\")],1),e._v(\".\")])]),e._v(\" \"),n(\"p\",[n(\"strong\",[e._v(\"Steps\")])]),e._v(\" \"),n(\"ol\",[n(\"li\",[n(\"p\",[e._v(\"Access your Kubernetes environment and run the following command in order to add the Snyk Charts repository to Helm:\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"helm repo add snyk-charts https://snyk.github.io/kubernetes-monitor\\n\")])])])]),e._v(\" \"),n(\"li\",[n(\"p\",[e._v(\"Once the repository is added, create a unique namespace for the Snyk controller:\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"kubectl create namespace snyk-monitor\\n\")])])]),n(\"p\",[n(\"strong\",[e._v(\"Tip:\")]),e._v(\" Use a unique namespace to isolate the controller resources more easily. This is generally good practice for Kubernetes applications. Notice our namespace is called snyk-monitor, youâ€™ll need this later when configuring other resources.\")])]),e._v(\" \"),n(\"li\",[n(\"p\",[e._v(\"Now, log in to your Snyk account and navigate to \"),n(\"strong\",[e._v(\"Integrations\")]),e._v(\".\")])]),e._v(\" \"),n(\"li\",[n(\"p\",[e._v(\"Search for and click \"),n(\"strong\",[e._v(\"Kubernetes\")]),e._v(\".\")])]),e._v(\" \"),n(\"li\",[n(\"p\",[e._v(\"Click \"),n(\"strong\",[e._v(\"Connect\")]),e._v(\" from the page that loads, copy the \"),n(\"strong\",[e._v(\"Integration ID.\")]),e._v(\" The Snyk \"),n(\"strong\",[e._v(\"Integration ID\")]),e._v(\" is a UUID, similar to this format: \"),n(\"code\",[e._v(\"abcd1234-abcd-1234-abcd-1234abcd1234\")]),e._v(\". Save it for use from your Kubernetes environment in the next step.\")])]),e._v(\" \"),n(\"li\",[n(\"p\",[e._v(\"Snyk monitor runs by using your Snyk \"),n(\"strong\",[e._v(\"Integration ID\")]),e._v(\", and using a \"),n(\"code\",[e._v(\"dockercfg\")]),e._v(\" file. If you are not using any private registries, create a Kubernetes secret called \"),n(\"code\",[e._v(\"snyk-monitor\")]),e._v(\" containing the Snyk \"),n(\"strong\",[e._v(\"Integration ID\")]),e._v(\" from the previous step by running the following command:\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"kubectl create secret generic snyk-monitor -n snyk-monitor \\\\\\n        --from-literal=dockercfg.json={} \\\\\\n        --from-literal=integrationId=abcd1234-abcd-1234-abcd-1234abcd1234\\n\")])])]),n(\"p\",[n(\"strong\",[e._v(\"Note:\")]),e._v(\" The secret must be called \"),n(\"code\",[e._v(\"snyk-monitor\")]),e._v(\" in order for the integration to work.\")])]),e._v(\" \"),n(\"li\",[n(\"p\",[e._v(\"If any of the images you need to scan are located in private registries, you need to provide credentials to access those registries by creating a secret (which must be called snyk-monitor) using both the Snyk Integration ID as well as a \"),n(\"code\",[e._v(\"dockercfg.json\")]),e._v(\" file. The \"),n(\"code\",[e._v(\"dockercfg.json\")]),e._v(\" file is necessary to allow the monitor to look up images in private registries. Usually, your credentials reside in \"),n(\"code\",[e._v(\"$HOME/.docker/config.json\")]),e._v(\". These credential must also be added to the \"),n(\"code\",[e._v(\"dockerconfig.json\")]),e._v(\" file.\")]),e._v(\" \"),n(\"ol\",[n(\"li\",[n(\"p\",[e._v(\"Create a file named \"),n(\"code\",[e._v(\"dockercfg.json\")]),e._v(\". Store your credentials in there; it should look like this:\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v('{\\n  // If your cluster does not run on GKE or it runs on GKE and pulls images from other private registries, add the following:\\n  \"auths\": {\\n    \"gcr.io\": {\\n      \"auth\": \"BASE64-ENCODED-AUTH-DETAILS\"\\n    }\\n    // Add other registries as necessary\\n  },\\n  \\n  // If your cluster runs on GKE and you are using GCR, add the following:\\n  \"credHelpers\": {\\n    \"us.gcr.io\": \"gcloud\",\\n    \"asia.gcr.io\": \"gcloud\",\\n    \"marketplace.gcr.io\": \"gcloud\",\\n    \"gcr.io\": \"gcloud\",\\n    \"eu.gcr.io\": \"gcloud\",\\n    \"staging-k8s.gcr.io\": \"gcloud\"\\n  }\\n  \\n  // If your cluster runs on EKS and you are using ECR, add the following:\\n  {\\n    \"credsStore\": \"ecr-login\"\\n  }\\n  \\n  With Docker 1.13.0 or greater, you can configure Docker to use different credential helpers for different registries.\\n  To use this credential helper for a specific ECR registry, create a credHelpers section with the URI of your ECR registry:\\n  {\\n    \"credHelpers\": {\\n      \"public.ecr.aws\": \"ecr-login\",\\n\\t\"<aws_account_id>.dkr.ecr.<region>.amazonaws.com\": \"ecr-login\"\\n    }\\n  }\\n}\\n')])])]),n(\"p\",[e._v(\"You can refer to \"),n(\"RouterLink\",{attrs:{to:\"/snyk/products/snyk-container/image-scanning-library/kubernetes-workload-and-image-scanning/install-the-snyk-controller-on-amazon-elastic-kubernetes-service-amazon-eks.html\"}},[e._v(\"Install the Snyk Controller on Amazon Elastic Kubernetes Service\")]),e._v(\" for more installation details.\")],1)])]),e._v(\" \"),n(\"p\",[e._v(\"2. Create a secret with the file added:\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"kubectl create secret generic snyk-monitor \\\\\\n        -n snyk-monitor --from-file=dockercfg.json \\\\\\n        --from-literal=integrationId=abcd1234-abcd-1234-abcd-1234abcd1234\\n\")])])])]),e._v(\" \"),n(\"li\",[n(\"p\",[e._v(\"If your registry is using self-signed or other additional certificates you must make those available to Snyk monitor. First place the \"),n(\"code\",[e._v(\".crt\")]),e._v(\", \"),n(\"code\",[e._v(\".cert\")]),e._v(\", and/or \"),n(\"code\",[e._v(\".key\")]),e._v(\" files in a directory and create a ConfigMap:\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"kubectl create configmap snyk-monitor-certs \\\\\\n        -n snyk-monitor --from-file=<path_to_certs_folder>\\n\")])])])]),e._v(\" \"),n(\"li\",[n(\"p\",[e._v(\"If you are using an insecure registry or your registry is using unqualified images, you can provide a \"),n(\"code\",[e._v(\"registries.conf\")]),e._v(\" file.\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v('[[registry]]\\nlocation = \"internal-registry-for-example.net/bar\"\\ninsecure = true\\n')])])]),n(\"p\",[e._v(\"See the \"),n(\"a\",{attrs:{href:\"https://github.com/containers/image/blob/master/docs/containers-registries.conf.5.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"documentation\"),n(\"OutboundLink\")],1),e._v(\" for information on the format and further examples. Once you've created the file, you can use it to create the following ConfigMap:\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"kubectl create configmap snyk-monitor-registries-conf \\\\\\n        -n snyk-monitor \\\\\\n        --from-file=<path_to_registries_conf_file>\\n\")])])])]),e._v(\" \"),n(\"li\",[n(\"p\",[e._v(\"Install the Snyk Helm chart:\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v('helm upgrade --install snyk-monitor snyk-charts/snyk-monitor \\\\\\n             --namespace snyk-monitor \\\\\\n             --set clusterName=\"Production cluster\"\\n')])])]),n(\"p\",[e._v(\"If you are running your own instance of Snyk you need to specify the API endpoint when installing the controller. Replace below with the full hostname of your Snyk instance.\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v('helm upgrade --install snyk-monitor snyk-charts/snyk-monitor \\\\\\n             --namespace snyk-monitor \\\\\\n             --set clusterName=\"Production cluster\" \\\\\\n             --set integrationApi=https://<server>/kubernetes-upstream\\n')])])]),n(\"p\",[n(\"strong\",[e._v(\"Tip\")]),e._v(\": Replace the name \"),n(\"strong\",[e._v(\"Production cluster\")]),e._v(\" with a name based on the cluster you are monitoring. Youâ€™ll use this label to find workloads in Snyk later. Please note that \"),n(\"code\",[e._v(\"/\")]),e._v(\" in cluster name is disallowed. Any \"),n(\"code\",[e._v(\"/\")]),e._v(\" in cluster names will be removed.\"),n(\"br\"),e._v(\"\\nAlso, to avoid naming the cluster on every update, you can use Helm's existing option for \"),n(\"strong\",[e._v(\"--reuse-values.\")]),e._v(\" This means that when upgrading, it'll reuse the last release's values and merge in any overrides from the command line via \"),n(\"strong\",[e._v(\"--set\")]),e._v(\" and -f. If '\"),n(\"strong\",[e._v(\"--reset-values\")]),e._v(\"' is specified, this is ignored.\")])]),e._v(\" \"),n(\"li\",[n(\"p\",[e._v(\"If you are using a proxy for the outbound connection to Snyk then you need to configure the integration to use that proxy. To configure the proxy set the following values provided in the Helm chart:\")]),e._v(\" \"),n(\"ul\",[n(\"li\",[n(\"code\",[e._v(\"http_proxy\")])]),e._v(\" \"),n(\"li\",[n(\"code\",[e._v(\"https_proxy\")])]),e._v(\" \"),n(\"li\",[n(\"code\",[e._v(\"no_proxy\")])])]),e._v(\" \"),n(\"p\",[e._v(\"For instance:\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v('helm upgrade --install snyk-monitor snyk-charts/snyk-monitor \\\\\\n             --namespace snyk-monitor \\\\\\n             --set clusterName=\"Production cluster\" \\\\\\n             --set https_proxy=http://192.168.99.100:8080\\n')])])]),n(\"p\",[e._v(\"Note that the integration does not support CIDR address ranges or wildcards in the \"),n(\"code\",[e._v(\"no_proxy\")]),e._v(\" value. Only exact matches are supported.\")])]),e._v(\" \"),n(\"li\",[n(\"p\",[e._v(\"If you would like to alter the logging verbosity you can do so as follows. Valid levels are \"),n(\"code\",[e._v(\"INFO\")]),e._v(\", \"),n(\"code\",[e._v(\"WARN\")]),e._v(\" and \"),n(\"code\",[e._v(\"ERROR\")]),e._v(\". We default to \"),n(\"code\",[e._v(\"INFO\")]),e._v(\".\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v('helm upgrade --install snyk-monitor snyk-charts/snyk-monitor \\\\\\n             --namespace snyk-monitor \\\\\\n             --set clusterName=\"Production cluster\" \\\\\\n             --set log_level=\"WARN\"\\n')])])])]),e._v(\" \"),n(\"li\",[n(\"p\",[e._v(\"By default the controller will run without a \"),n(\"a\",{attrs:{href:\"https://kubernetes.io/docs/concepts/policy/pod-security-policy/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"Pod Security Policy\"),n(\"OutboundLink\")],1),e._v(\". However, this can be enabled by passing a setting.\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v('helm upgrade --install snyk-monitor snyk-charts/snyk-monitor \\\\\\n             --namespace snyk-monitor \\\\\\n             --set clusterName=\"Production cluster\" \\\\\\n             --set psp.enabled=true\\n')])])]),n(\"p\",[e._v(\"You can reuse an existing Pod Security Policy by specifying the name. If you don't specify a name then a new policy will be automatically created.\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v('helm upgrade --install snyk-monitor snyk-charts/snyk-monitor \\\\\\n             --namespace snyk-monitor \\\\\\n             --set clusterName=\"Production cluster\" \\\\\\n             --set psp.enabled=true \\\\\\n             --set psp.name=something\\n')])])])]),e._v(\" \"),n(\"li\",[n(\"p\",[e._v(\"You can configure the Snyk controller to use a \"),n(\"strong\",[e._v(\"PersistentVolumeClaim\")]),e._v(\" (PVC) instead of the default emptyDir storage medium for temporarily pulling images. The PVC can either be created by the Helm template provided by the Snyk chart or you can use an already provisioned PVC.\")]),e._v(\" \"),n(\"p\",[e._v(\"Use the following flags to control the PVC:\")]),e._v(\" \"),n(\"ul\",[n(\"li\",[e._v(\"pvc.enabled - instructs the Helm chart to use a PVC instead of an emptyDir\")]),e._v(\" \"),n(\"li\",[e._v(\"pvc.create - whether to create the PVC - this is useful when provisioning for the first time\")]),e._v(\" \"),n(\"li\",[e._v(\"pvc.storageClassName - controls the StorageClass of the PVC\")]),e._v(\" \"),n(\"li\",[e._v(\"pvc.name - the name of the PVC to use in Kubernetes\")])]),e._v(\" \"),n(\"p\",[e._v(\"For example, you can run the following command on installation to provision/create the PVC:\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v('helm upgrade --install snyk-monitor snyk-charts/snyk-monitor \\\\\\n             --namespace snyk-monitor \\\\\\n             --set pvc.enabled=true \\\\\\n             --set pvc.create=true \\\\\\n             --set pvc.name=\"snyk-monitor-pvc\"\\n')])])]),n(\"p\",[e._v('On subsequent upgrades you can drop the \"pvc.create\" flag because the PVC already exists:')]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v('helm upgrade --install snyk-monitor snyk-charts/snyk-monitor \\\\\\n             --namespace snyk-monitor \\\\\\n             --set pvc.enabled=true \\\\\\n             --set pvc.name=\"snyk-monitor-pvc\"\\n')])])])]),e._v(\" \"),n(\"li\",[n(\"p\",[e._v(\"By default, we purposely ignore scanning certain namespaces which we believe are internal to Kubernetes (any namespace starting with \"),n(\"em\",[n(\"strong\",[e._v(\"kube-*,\")])]),e._v(\" full list can be found \"),n(\"a\",{attrs:{href:\"https://github.com/snyk/kubernetes-monitor/blob/master/src/supervisor/watchers/internal-namespaces.ts\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"here\"),n(\"OutboundLink\")],1),e._v(\"). If you wish to change that, we allow configuring the excluded namespaces.\"),n(\"br\"),e._v(\"\\nBy adding your own list of namespaces to exclude using \"),n(\"em\",[e._v(\"excludedNamespaces\")]),e._v(\" setting, we will override our default settings and use the list of namespaces you provide.\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v('helm upgrade --install snyk-monitor snyk-charts/snyk-monitor \\\\\\n             --namespace snyk-monitor \\\\\\n             --set excludedNamespaces=\"{kube-node-lease,local-path-storage,some_namespace}\"\\n')])])])]),e._v(\" \"),n(\"li\",[n(\"p\",[e._v(\"If more resources are required in order to deploy the controller, configure the helm charts default value for requests and limits with the \"),n(\"code\",[e._v(\"--set\")]),e._v(\" flag.\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v('helm upgrade --install snyk-monitor snyk-charts/snyk-monitor \\\\\\n             --namespace snyk-monitor \\\\\\n             --set requests.\"ephemeral-storage\"=\"50Gi\"\\n             --set limits.\"ephemeral-storage\"=\"50Gi\"\\n')])])])])]),e._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:\"https://raw.githubusercontent.com/snyk/user-docs/main/docs/../../.gitbook/assets/uuid-26f9c2cd-2755-07d5-61a0-bdb0261d87ab-en.gif\",alt:\"\"}})])])}),[],!1,null,null,null);t.default=s.exports}}]);","extractedComments":[]}