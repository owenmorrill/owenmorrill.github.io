{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[673],{1072:function(e,t,n){\"use strict\";n.r(t);var s=n(56),i=Object(s.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[n(\"h1\",{attrs:{id:\"understand-snyk-code-cli-results\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#understand-snyk-code-cli-results\"}},[e._v(\"#\")]),e._v(\" Understand Snyk Code CLI results\")]),e._v(\" \"),n(\"h2\",{attrs:{id:\"example-of-code-test\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#example-of-code-test\"}},[e._v(\"#\")]),e._v(\" Example of code test\")]),e._v(\" \"),n(\"p\",[e._v(\"This example runs a code test against a local project, \"),n(\"code\",[e._v(\"goof\")]),e._v(\":\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"snyk code test goof\\n\")])])]),n(\"p\",[e._v(\"The results are shown in the code that follows:\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"Testing goof ...\\n\\n ✗ [Medium] Use of Hard-coded Credentials\\n     Path: typeorm-db.js, line 11\\n     Info: Do not hardcode credentials in code. Found hardcoded credential used in typeorm.createConnection.\\n\\n ✗ [Medium] Use of Hard-coded Credentials\\n     Path: typeorm-db.js, line 12\\n     Info: Do not hardcode passwords in code. Found hardcoded password used in typeorm.createConnection.\\n\\n ✗ [Medium] Cleartext Transmission of Sensitive Information\\n     Path: app.js, line 12\\n     Info: http (used in require) is an insecure protocol and should not be used in new code.\\n\\n ✗ [Medium] Allocation of Resources Without Limits or Throttling\\n     Path: routes/index.js, line 77\\n     Info: This endpoint handler performs a system command execution and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.\\n\\n ✗ [Medium] Allocation of Resources Without Limits or Throttling\\n     Path: routes/index.js, line 166\\n     Info: This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.\\n\\n ✗ [Medium] Allocation of Resources Without Limits or Throttling\\n     Path: routes/index.js, line 223\\n     Info: This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.\\n\\n ✗ [Medium] Information Exposure\\n     Path: app.js, line 27\\n     Info: Disable X-Powered-By header for your Express app (consider using Helmet middleware), because it exposes information about the used framework to potential attackers.\\n\\n ✗ [High] Command Injection\\n     Path: routes/index.js, line 86\\n     Info: Unsanitized input from the HTTP request body flows into child_process.exec, where it is used to build a shell command. This may result in a Command Injection vulnerability.\\n\\n ✗ [High] SQL Injection\\n     Path: routes/index.js, line 39\\n     Info: Unsanitized input from the HTTP request body flows into find, where it is used in an SQL query. This may result in an SQL Injection vulnerability.\\n\\n ✗ [High] Cross-site Scripting (XSS)\\n     Path: routes/index.js, line 109\\n     Info: Unsanitized input from the HTTP request body flows into send, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).\\n\\n ✗ [High] Hardcoded Secret\\n     Path: app.js, line 73\\n     Info: Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.\\n\\n✔ Test completed\\n\\nOrganization:      free-plan-org\\nTest type:         Static code analysis\\nProject path:      goof\\n\\n11 Code issues found\\n4 [High]  7 [Medium]\\n\")])])]),n(\"h2\",{attrs:{id:\"review-of-results\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#review-of-results\"}},[e._v(\"#\")]),e._v(\" Review of results\")]),e._v(\" \"),n(\"p\",[e._v(\"This \"),n(\"code\",[e._v(\"snyk code test\")]),e._v(\" found 11 issues, 4 high and 7 medium.\")]),e._v(\" \"),n(\"p\",[e._v(\"The issues are ordered by severity with the highest severity issues at the end of the list.\")]),e._v(\" \"),n(\"p\",[e._v(\"Each item includes:\")]),e._v(\" \"),n(\"ul\",[n(\"li\",[e._v(\"The severity and vulnerability type of the issue\")]),e._v(\" \"),n(\"li\",[e._v(\"Path: the file and line in the file where the issue was found (Potentially issues occur across files; the location in the path refers to the issue's sink.)\")]),e._v(\" \"),n(\"li\",[e._v(\"Info: A description of the issue's data flow\")])]),e._v(\" \"),n(\"p\",[e._v(\"CLI for Snyk Code uses the exit codes as described in the \"),n(\"a\",{attrs:{href:\"https://raw.githubusercontent.com/snyk/user-docs/main/docs/../snyk-cli/cli-reference/#exit-codes\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"CLI reference\"),n(\"OutboundLink\")],1),e._v(\".\")])])}),[],!1,null,null,null);t.default=i.exports}}]);","extractedComments":[]}