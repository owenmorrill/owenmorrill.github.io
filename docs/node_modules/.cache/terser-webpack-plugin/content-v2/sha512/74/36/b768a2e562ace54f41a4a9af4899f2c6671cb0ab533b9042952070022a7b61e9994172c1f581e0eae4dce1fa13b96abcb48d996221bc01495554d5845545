{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[170],{567:function(e,t,o){\"use strict\";o.r(t);var r=o(56),a=Object(r.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[o(\"h1\",{attrs:{id:\"github-enterprise-examples\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#github-enterprise-examples\"}},[e._v(\"#\")]),e._v(\" Github Enterprise - Examples\")]),e._v(\" \"),o(\"p\",[e._v(\"Available options:\")]),e._v(\" \"),o(\"div\",{staticClass:\"language- extra-class\"},[o(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[o(\"code\",[e._v('  --version                 Show version number                        [boolean]\\n  --help                    Show help                                  [boolean]\\n  --token                   Github Enterprise token                    [required]\\n  --url                     Your Github host custom URL.\\n                            e.g https://ghe.prod.company.org/          [required]\\n  --orgs                    [Optional] A list of Github Enterprise organizations, separeted by comma, \\n                            to fetch and count contributors for their repositories              \\n  --repo                    [Optional] Specific repo to count only for\\n  --fetchAllOrgs            [Optional] When enabled, will fetch all orgs that the token has access to\\n                            rather than fetching only the orgs your authorized to operate in.\\n  --exclusionFilePath       [Optional] Exclusion list filepath\\n  --json                    [Optional] JSON output, requiered when using the \"consolidateResults\" command\\n  --skipSnykMonitoredRepos  [Optional] Skip Snyk monitored repos and count contributors for all repos\\n  --importConfDir           [Optional] Generate an import file with the unmonitored repos: A path to a valid folder for the generated import files\\n  --importFileRepoType      [Optional] To be used with the importConfDir flag: Specify the type of repos to be added to the import file. Options: all/private/public. Default: all\\n')])])]),o(\"h2\",{attrs:{id:\"before-running-the-command\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#before-running-the-command\"}},[e._v(\"#\")]),e._v(\" Before running the command:\")]),e._v(\" \"),o(\"ol\",[o(\"li\",[o(\"p\",[e._v(\"Export SNYK_TOKEN (if you want to get the contributors ONLY for repos that are already monitored by Snyk):\")]),e._v(\" \"),o(\"ul\",[o(\"li\",[o(\"p\",[e._v(\"Make sure that your token has Group level access or use a service account's token that has Group level acces, to learn more on how to create a service account, refer to this \"),o(\"a\",{attrs:{href:\"https://docs.snyk.io/features/integrations/managing-integrations/service-accounts#how-to-set-up-a-service-account\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"guide\"),o(\"OutboundLink\")],1)])]),e._v(\" \"),o(\"li\",[o(\"p\",[e._v(\"Copy the token value\")])]),e._v(\" \"),o(\"li\",[o(\"p\",[e._v(\"Export the token in your environment:\")]),e._v(\" \"),o(\"div\",{staticClass:\"language- extra-class\"},[o(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[o(\"code\",[e._v(\"export SNYK_TOKEN=<YOUR-SNYK-TOKEN>\\n\")])])])])])]),e._v(\" \"),o(\"li\",[o(\"p\",[e._v(\"Get your Github Enterprise token or create a new one with this \"),o(\"a\",{attrs:{href:\"https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"guide\"),o(\"OutboundLink\")],1),e._v(\" =>\")]),e._v(\" \"),o(\"p\",[e._v(\"**Note: **make sure your token has read access to the repos.\")])])]),e._v(\" \"),o(\"h3\",{attrs:{id:\"running-the-command\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#running-the-command\"}},[e._v(\"#\")]),e._v(\" Running the command\")]),e._v(\" \"),o(\"p\",[e._v(\"Consider the following levels of usage and options:\")]),e._v(\" \"),o(\"h4\",{attrs:{id:\"usage-levels\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#usage-levels\"}},[e._v(\"#\")]),e._v(\" Usage levels:\")]),e._v(\" \"),o(\"ul\",[o(\"li\",[o(\"p\",[e._v(\"To get commits for all repos in all my orgs in Github Enterprise: provide the Github Enterprise token:\")]),e._v(\" \"),o(\"div\",{staticClass:\"language- extra-class\"},[o(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[o(\"code\",[e._v(\"snyk-scm-contributors-count github-enterprise --token TOKEN --url HOST_URL\\n\")])])])]),e._v(\" \"),o(\"li\",[o(\"p\",[e._v(\"To get commits for some orgs and their repos in Github Enterprise: provide the Github Enterprise token and the org names, separated by a comma:\")]),e._v(\" \"),o(\"div\",{staticClass:\"language- extra-class\"},[o(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[o(\"code\",[e._v(\"snyk-scm-contributors-count github-enterprise --token TOKEN --url HOST_URL --orgs ORG_ONE,ORG_TWO,ORG_THREE\\n\")])])])]),e._v(\" \"),o(\"li\",[o(\"p\",[e._v(\"To get commits for only one repo in Github Enterprise: provide the Github Enterprise token, one org name and one repo name:\")]),e._v(\" \"),o(\"div\",{staticClass:\"language- extra-class\"},[o(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[o(\"code\",[e._v(\"snyk-scm-contributors-count github-enterprise --token TOKEN --url HOST_URL --orgs ORG --repo REPO\\n\")])])])])]),e._v(\" \"),o(\"h3\",{attrs:{id:\"options\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#options\"}},[e._v(\"#\")]),e._v(\" Options:\")]),e._v(\" \"),o(\"ul\",[o(\"li\",[o(\"p\",[e._v(\"To get all the commits from Github Enterprise regardless of the repos that are already monitored by Snyk (You might have repos in Github Enterprise that are not monitored in Snyk, using this flag will skip checking for Snyk monitored repos and will go directly to Github Enterprise to fetch the commits): add the \"),o(\"code\",[e._v(\"--skipSnykMonitoredRepos\")]),e._v(\" flag:\")]),e._v(\" \"),o(\"div\",{staticClass:\"language- extra-class\"},[o(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[o(\"code\",[e._v(\"snyk-scm-contributors-count github-enterprise --token TOKEN --url HOST_URL --skipSnykMonitoredRepos\\n\")])])])]),e._v(\" \"),o(\"li\",[o(\"p\",[e._v(\"To map all the orgs in Github Enterprise and not only the ones I have operate rights to => add the \"),o(\"code\",[e._v(\"--fetchAllOrgs\")]),e._v(\" flag:\")]),e._v(\" \"),o(\"div\",{staticClass:\"language- extra-class\"},[o(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[o(\"code\",[e._v(\"snyk-scm-contributors-count github-enterprise --token TOKEN --url HOST_URL --fetchAllOrgs\\n\")])])])]),e._v(\" \"),o(\"li\",[o(\"p\",[e._v(\"To exclude some contributors from being counted in the commits => add an exclusion file with the emails to ignore(separated by commas) and apply the \"),o(\"code\",[e._v(\"--exclusionFilePath\")]),e._v(\" with the path to that file:\")]),e._v(\" \"),o(\"div\",{staticClass:\"language- extra-class\"},[o(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[o(\"code\",[e._v(\"snyk-scm-contributors-count github-enterprise --token TOKEN --url HOST_URL --orgs ORG_ONE,ORG_TWO --exclusionFilePath PATH_TO_FILE\\n\")])])])]),e._v(\" \"),o(\"li\",[o(\"p\",[e._v(\"To set the output to json format: add the \"),o(\"code\",[e._v(\"--json\")]),e._v(\" flag:\")]),e._v(\" \"),o(\"div\",{staticClass:\"language- extra-class\"},[o(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[o(\"code\",[e._v(\"snyk-scm-contributors-count github-enterprise --token TOKEN --url HOST_URL --json\\n\")])])])]),e._v(\" \"),o(\"li\",[o(\"p\",[e._v(\"To create an import file for me with my unmonitored repos: add the \"),o(\"code\",[e._v(\"--importConfDir\")]),e._v(\" flag with a valid (writable) path to a folder in which the import files will be stored and add the \"),o(\"code\",[e._v(\"--importFileRepoType\")]),e._v(\" flag (optional) with the repo types to add to the file (all/private/public, defaults to all). (\"),o(\"strong\",[e._v(\"Note that these flags can not be set with the \"),o(\"code\",[e._v(\"--repo\")]),e._v(\" flag\")]),e._v(\"):\")]),e._v(\" \"),o(\"div\",{staticClass:\"language- extra-class\"},[o(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[o(\"code\",[e._v(\"snyk-scm-contributors-count github-enterprise --token TOKEN --url HOST_URL --importConfDir ValidPathToWritableFolder --importFileRepoType private/public/all\\n\")])])]),o(\"p\",[e._v(\"For more details about these flag, refer to this \"),o(\"a\",{attrs:{href:\"https://raw.githubusercontent.com/snyk/user-docs/main/docs/creating-and-using-the-import-files.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"page\"),o(\"OutboundLink\")],1)])]),e._v(\" \"),o(\"li\",[o(\"p\",[e._v(\"To run in debug mode for verbose output: prefix with \"),o(\"code\",[e._v(\"DEBUG=snyk*\")]),e._v(\" :\")]),e._v(\" \"),o(\"div\",{staticClass:\"language- extra-class\"},[o(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[o(\"code\",[e._v(\"DEBUG=snyk* snyk-scm-contributors-count github-enterprise --token TOKEN --url HOST_URL --orgs ORG --repo REPO --exclusionFilePath PATH_TO_FILE --json\\n\")])])])])])])}),[],!1,null,null,null);t.default=a.exports}}]);","extractedComments":[]}