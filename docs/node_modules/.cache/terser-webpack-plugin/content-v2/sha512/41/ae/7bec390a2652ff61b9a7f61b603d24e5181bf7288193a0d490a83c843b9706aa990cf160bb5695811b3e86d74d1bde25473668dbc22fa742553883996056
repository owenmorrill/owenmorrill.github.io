{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[564],{961:function(e,t,s){\"use strict\";s.r(t);var n=s(56),a=Object(n.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[s(\"h1\",{attrs:{id:\"examples-of-custom-rules\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#examples-of-custom-rules\"}},[e._v(\"#\")]),e._v(\" Examples of custom rules\")]),e._v(\" \"),s(\"h3\",{attrs:{id:\"example-of-a-simple-boolean-rule\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#example-of-a-simple-boolean-rule\"}},[e._v(\"#\")]),e._v(\" Example of a simple boolean rule\")]),e._v(\" \"),s(\"p\",[e._v('{% hint style=\"info\" %}\\nYou can find a full example of this guide in '),s(\"a\",{attrs:{href:\"https://play.openpolicyagent.org/p/SCYndBjWxh\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"this OPA Playground\"),s(\"OutboundLink\")],1),e._v(\" and the \"),s(\"a\",{attrs:{href:\"https://github.com/snyk/custom-rules-example\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"snyk/custom-rules-example\"),s(\"OutboundLink\")],1),e._v(\" repository.\\n{% endhint %}\")]),e._v(\" \"),s(\"p\",[e._v(\"Let’s assume we have generated a new rule \"),s(\"code\",[e._v(\"CUSTOM-RULE-1\")]),e._v(\" using the SDK (i.e. \"),s(\"code\",[e._v(\"snyk-iac-rules template --rule CUSTOM-RULE-1\")]),e._v(\") and have a very simple fixture file containing a Terraform resource:\")]),e._v(\" \"),s(\"p\",[e._v('{% code title=\"rules/CUSTOM-RULE-1/fixtures/denied.tf\" %}')]),e._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[e._v('resource \"aws_redshift_cluster\" \"denied\" {\\n  cluster_identifier = \"tf-redshift-cluster\"\\n  node_type          = \"dc1.large\"\\n  tags = {\\n  }\\n}\\n')])])]),s(\"p\",[e._v(\"{% endcode %}\")]),e._v(\" \"),s(\"p\",[e._v(\"Now, we want to modify the generated Rego to enforce resources tagged with an owner:\")]),e._v(\" \"),s(\"ol\",[s(\"li\",[e._v(\"Create a variable \"),s(\"code\",[e._v(\"[name]\")]),e._v(\" to to enumerate across all of the \"),s(\"code\",[e._v(\"aws_redshift_cluster\")]),e._v(\" resources. This variable can be named anything you like (e.g. \"),s(\"code\",[e._v(\"i\")]),e._v(\", \"),s(\"code\",[e._v(\"j\")]),e._v(\", \"),s(\"code\",[e._v(\"name\")]),e._v(\", etc.).\")]),e._v(\" \"),s(\"li\",[e._v(\"Store this into the resource variable by assigning the value to it with a walrus operator \"),s(\"code\",[e._v(\":=\")]),e._v(\"; e.g. \"),s(\"code\",[e._v(\"resource := input.resource.aws_redshift_cluster[name]\")])]),e._v(\" \"),s(\"li\",[e._v(\"Check if the owner tag exists for each resource; to do that, check if the path \"),s(\"code\",[e._v(\"resource.tags.owner\")]),e._v(\"is defined. If it is undefined, it will evaluate to undefined. So, use the \"),s(\"code\",[e._v(\"NOT\")]),e._v(\" keyword in front of it, which will evaluate to \"),s(\"code\",[e._v(\"TRUE\")]),e._v(\"; e.g.\"),s(\"code\",[e._v(\"not resource.tags.owner\")])])]),e._v(\" \"),s(\"p\",[e._v(\"The modified Rego is:\")]),e._v(\" \"),s(\"p\",[e._v('{% code title=\"rules/CUSTOM-RULE-1/main.rego\" %}')]),e._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[e._v('package rules\\n\\ndeny[msg] {\\n    resource := input.resource.aws_redshift_cluster[name]\\n    not resource.tags.owner\\n\\n    msg := {\\n        \"publicId\": \"CUSTOM-RULE-1\",\\n        \"title\": \"Missing an owner from tag\",\\n        \"severity\": \"medium\",\\n        \"msg\": sprintf(\"input.resource.aws_redshift_cluster[%s].tags\", [name]),\\n        \"issue\": \"\",\\n        \"impact\": \"\",\\n        \"remediation\": \"\",\\n        \"references\": [],\\n    }\\n}\\n')])])]),s(\"p\",[e._v(\"{% endcode %}\")]),e._v(\" \"),s(\"p\",[e._v('{% hint style=\"info\" %}\\nTo understand how the Rego code evaluates the Terraform file provided earlier, have a look at how the SDK is able to '),s(\"RouterLink\",{attrs:{to:\"/snyk/products/snyk-infrastructure-as-code/custom-rules/getting-started-with-the-sdk/parsing-an-input-file.html\"}},[e._v(\"parse a fixture file\")]),e._v(\" into JSON.\\n{% endhint %}\")],1),e._v(\" \"),s(\"p\",[e._v('{% hint style=\"warning\" %}\\nWe recommend always validating that your rule is correct by '),s(\"RouterLink\",{attrs:{to:\"/snyk/products/snyk-infrastructure-as-code/custom-rules/getting-started-with-the-sdk/testing-a-rule.html\"}},[e._v(\"updating and running the unit tests\")]),e._v(\".\\n{% endhint %}\")],1),e._v(\" \"),s(\"p\",[e._v(\"The test for this rule verifies that the Rego rule is able to identify that the fixture at the beginning of this guide is invalid:\")]),e._v(\" \"),s(\"p\",[e._v('{% code title=\"rules/CUSTOM-RULE-1/main_test.rego\" %}')]),e._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[e._v('package rules\\n\\nimport data.lib\\nimport data.lib.testing\\n\\ntest_CUSTOM_RULE_1 {\\n\\t# array containing test cases where the rule is allowed\\n\\tallowed_test_cases := [{\\n\\t\\t\"want_msgs\": [],\\n\\t\\t\"fixture\": \"allowed.tf\",\\n\\t}]\\n\\n\\t# array containing cases where the rule is denied\\n\\tdenied_test_cases := [{\\n\\t\\t\"want_msgs\": [\"input.resource.aws_redshift_cluster[denied].tags\"],\\n\\t\\t\"fixture\": \"denied.tf\",\\n\\t}]\\n\\n\\ttest_cases := array.concat(allowed_test_cases, denied_test_cases)\\n\\ttesting.evaluate_test_cases(\"CUSTOM-RULE-1\", \"./rules/CUSTOM-RULE-1/fixtures\", test_cases)\\n}\\n')])])]),s(\"p\",[e._v(\"{% endcode %}\")]),e._v(\" \"),s(\"h3\",{attrs:{id:\"example-with-logical-and\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#example-with-logical-and\"}},[e._v(\"#\")]),e._v(\" Example with logical AND\")]),e._v(\" \"),s(\"p\",[e._v(\"Let’s try and extend the example above and update the rule to allow all cases that suffice two conditions:\")]),e._v(\" \"),s(\"ol\",[s(\"li\",[e._v(\"A resource has an “owner” tag\"),s(\"br\"),e._v(\" \"),s(\"strong\",[e._v(\"AND\")])]),e._v(\" \"),s(\"li\",[e._v(\"A resource has a “description” tag\")])]),e._v(\" \"),s(\"p\",[e._v(\"To test this new condition, we generate a new rule \"),s(\"code\",[e._v(\"CUSTOM-RULE-2\")]),e._v(\" using the \"),s(\"code\",[e._v(\"template\")]),e._v(\" command and write the following fixture file:\")]),e._v(\" \"),s(\"p\",[e._v('{% code title=\"rules/CUSTOM-RULE-2/fixtures/denied.tf\" %}')]),e._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[e._v('resource \"aws_redshift_cluster\" \"denied\" {\\n  cluster_identifier = \"tf-redshift-cluster\"\\n  node_type          = \"dc1.large\"\\n  tags = {\\n    owner = \"team-123\"\\n  }\\n}\\n')])])]),s(\"p\",[e._v(\"{% endcode %}\")]),e._v(\" \"),s(\"p\",[e._v(\"Joining multiple expressions together expresses logical \"),s(\"code\",[e._v(\"AND\")]),e._v(\". \")]),e._v(\" \"),s(\"ul\",[s(\"li\",[e._v(\"You can do this with the \"),s(\"code\",[e._v(\";\")]),e._v(\" operator.\")]),e._v(\" \"),s(\"li\",[e._v(\"Or, you can omit the \"),s(\"code\",[e._v(\";\")]),e._v(\" (\"),s(\"code\",[e._v(\"AND\")]),e._v(\") operator by splitting expressions across multiple lines.\")])]),e._v(\" \"),s(\"p\",[e._v('{% hint style=\"info\" %}\\nThe logical AND is covered also in the '),s(\"a\",{attrs:{href:\"https://www.openpolicyagent.org/docs/latest/#expressions-logical-and\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"OPA documentation\"),s(\"OutboundLink\")],1),e._v(\".\\n{% endhint %}\")]),e._v(\" \"),s(\"p\",[e._v('{% code title=\"rules/CUSTOM-RULE-2/main.rego\" %}')]),e._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[e._v('package rules\\n\\naws_redshift_cluster_tags_present(resource) {\\n    resource.tags.owner\\n    resource.tags.description\\n}\\n\\ndeny[msg] {\\n    resource := input.resource.aws_redshift_cluster[name]\\n    not aws_redshift_cluster_tags_present(resource)\\n    msg := {\\n        \"publicId\": \"CUSTOM-RULE-2\",\\n        \"title\": \"Missing a description and an owner from the tag\",\\n        \"severity\": \"medium\",\\n        \"msg\": sprintf(\"input.resource.aws_redshift_cluster[%s].tags\", [name]),\\n        \"issue\": \"\",\\n        \"impact\": \"\",\\n        \"remediation\": \"\",\\n        \"references\": [],\\n    }\\n}\\n')])])]),s(\"p\",[e._v(\"{% endcode %}\")]),e._v(\" \"),s(\"p\",[e._v('{% hint style=\"warning\" %}\\nWe recommend always validating that your rule is correct by '),s(\"RouterLink\",{attrs:{to:\"/snyk/products/snyk-infrastructure-as-code/custom-rules/getting-started-with-the-sdk/testing-a-rule.html\"}},[e._v(\"updating and running the unit tests\")]),e._v(\".\\n{% endhint %}\")],1),e._v(\" \"),s(\"p\",[e._v(\"The test for this rule will look the same as the one for \"),s(\"code\",[e._v(\"CUSTOM-RULE-1\")]),e._v(\", but the name of the test and the first two arguments passed to the \"),s(\"code\",[e._v(\"testing.evaluate_test_cases\")]),e._v(\" function will differ:\")]),e._v(\" \"),s(\"p\",[e._v('{% code title=\"rules/CUSTOM-RULE-2/main_test.rego\" %}')]),e._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[e._v('package rules\\n\\nimport data.lib\\nimport data.lib.testing\\n\\ntest_CUSTOM_RULE_2 {\\n\\t# array containing test cases where the rule is allowed\\n\\tallowed_test_cases := [{\\n\\t\\t\"want_msgs\": [],\\n\\t\\t\"fixture\": \"allowed.tf\",\\n\\t}]\\n\\t# array containing cases where the rule is denied\\n\\tdenied_test_cases := [{\\n\\t\\t\"want_msgs\": [\"input.resource.aws_redshift_cluster[denied].tags\"],\\n\\t\\t\"fixture\": \"denied.tf\",\\n\\t}]\\n\\ttest_cases := array.concat(allowed_test_cases, denied_test_cases)\\n\\ttesting.evaluate_test_cases(\"CUSTOM-RULE-2\", \"./rules/CUSTOM-RULE-2/fixtures\", test_cases)\\n}\\n')])])]),s(\"p\",[e._v(\"{% endcode %}\")]),e._v(\" \"),s(\"h3\",{attrs:{id:\"example-with-logical-or\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#example-with-logical-or\"}},[e._v(\"#\")]),e._v(\" Example with logical OR\")]),e._v(\" \"),s(\"p\",[e._v(\"We can also rewrite the rule above by combining the \"),s(\"code\",[e._v(\"NOT\")]),e._v(\" operator with the OR functionality.\")]),e._v(\" \"),s(\"p\",[e._v(\"Let’s update the example in a new rule \"),s(\"code\",[e._v(\"CUSTOM-RULE-3\")]),e._v(\", to deny all cases that fail \"),s(\"strong\",[e._v(\"either\")]),e._v(\" of the two conditions; we want to deny all \"),s(\"code\",[e._v(\"aws_redshift_cluster\")]),e._v(\" resources that are missing either:\")]),e._v(\" \"),s(\"ol\",[s(\"li\",[e._v(\"an “owner” tag , OR\")]),e._v(\" \"),s(\"li\",[e._v(\"A “description” tag\")])]),e._v(\" \"),s(\"p\",[e._v(\"For this, we will use two new fixture files, one for each case:\")]),e._v(\" \"),s(\"p\",[e._v('{% code title=\"rules/CUSTOM-RULE-3/fixtures/denied1.tf\" %}')]),e._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[e._v('resource \"aws_redshift_cluster\" \"denied1\" {\\n  cluster_identifier = \"tf-redshift-cluster\"\\n  node_type          = \"dc1.large\"\\n  tags = {\\n    owner = \"team-123@corp-domain.com\"\\n  }\\n}\\n')])])]),s(\"p\",[e._v(\"{% endcode %}\")]),e._v(\" \"),s(\"p\",[e._v('{% code title=\"rules/CUSTOM-RULE-3/fixtures/denied2.tg\" %}')]),e._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[e._v('resource \"aws_redshift_cluster\" \"denied2\" {\\n  cluster_identifier = \"tf-redshift-cluster\"\\n  node_type          = \"dc1.large\"\\n  tags = {\\n    description = \"description\",\\n  }\\n}\\n')])])]),s(\"p\",[e._v(\"{% endcode %}\")]),e._v(\" \"),s(\"p\",[e._v(\"To express logical OR in Rego, we can define multiple rules or functions with the same name. This is also described in the OPA documentation for\"),s(\"a\",{attrs:{href:\"https://www.openpolicyagent.org/docs/latest/#logical-or\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\" Logical OR\"),s(\"OutboundLink\")],1),e._v(\".\")]),e._v(\" \"),s(\"p\",[e._v(\"First, we will add a function that will implement the \"),s(\"code\",[e._v(\"NOT\")]),e._v(\" for each tag. Then, we will call this function with the resource:\")]),e._v(\" \"),s(\"p\",[e._v('{% code title=\"rules/CUSTOM-RULE-3/main.rego\" %}')]),e._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[e._v('package rules\\n\\naws_redshift_cluster_tags_missing(resource) {\\n    not resource.tags.owner\\n}\\n\\naws_redshift_cluster_tags_missing(resource) {\\n    not resource.tags.description\\n}\\n\\ndeny[msg] {\\n    resource := input.resource.aws_redshift_cluster[name]\\n    aws_redshift_cluster_tags_missing(resource)\\n    msg := {\\n        \"publicId\": \"CUSTOM-RULE-3\",\\n        \"title\": \"Missing a description or an owner from the tag\",\\n        \"severity\": \"medium\",\\n        \"msg\": sprintf(\"input.resource.aws_redshift_cluster[%s].tags\", [name]),\\n        \"issue\": \"\",\\n        \"impact\": \"\",\\n        \"remediation\": \"\",\\n        \"references\": [],\\n    }\\n}\\n')])])]),s(\"p\",[e._v(\"{% endcode %}\")]),e._v(\" \"),s(\"p\",[e._v(\"This will successfully return all the rules that deny.\")]),e._v(\" \"),s(\"p\",[e._v('{% hint style=\"warning\" %}\\nWe recommend always validating that your rule is correct by '),s(\"RouterLink\",{attrs:{to:\"/snyk/products/snyk-infrastructure-as-code/custom-rules/getting-started-with-the-sdk/#test-a-custom-rule\"}},[e._v(\"updating and running the unit tests\")]),e._v(\".\\n{% endhint %}\")],1),e._v(\" \"),s(\"p\",[e._v(\"The test for this rule will now contain multiple test cases, to show that the logical OR works as expected:\")]),e._v(\" \"),s(\"p\",[e._v('{% code title=\"rules/CUSTOM-RULE-3/main_test.rego\" %}')]),e._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[e._v('package rules\\n\\nimport data.lib\\nimport data.lib.testing\\n\\ntest_CUSTOM_RULE_3 {\\n\\t# array containing test cases where the rule is allowed\\n\\tallowed_test_cases := [{\\n\\t\\t\"want_msgs\": [],\\n\\t\\t\"fixture\": \"allowed.tf\",\\n\\t}]\\n\\t# array containing cases where the rule is denied\\n\\tdenied_test_cases := [{\\n\\t\\t\"want_msgs\": [\"input.resource.aws_redshift_cluster[denied1].tags\"],\\n\\t\\t\"fixture\": \"denied1.tf\",\\n\\t},{\\n\\t\\t\"want_msgs\": [\"input.resource.aws_redshift_cluster[denied2].tags\"],\\n\\t\\t\"fixture\": \"denied2.tf\",\\n\\t}]\\n\\ttest_cases := array.concat(allowed_test_cases, denied_test_cases)\\n\\ttesting.evaluate_test_cases(\"CUSTOM-RULE-3\", \"./rules/CUSTOM-RULE-3/fixtures\", test_cases)\\n}\\n')])])]),s(\"p\",[e._v(\"{% endcode %}\")]),e._v(\" \"),s(\"h3\",{attrs:{id:\"example-with-strings\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#example-with-strings\"}},[e._v(\"#\")]),e._v(\" Example with strings\")]),e._v(\" \"),s(\"p\",[e._v(\"Let’s extend this further and add a third condition. Deny all resources that are missing either:\")]),e._v(\" \"),s(\"ol\",[s(\"li\",[e._v(\"An “owner” tag , OR\")]),e._v(\" \"),s(\"li\",[e._v(\"A “description” tag, OR\")]),e._v(\" \"),s(\"li\",[e._v(\"The email of the owner does not belong to the “@corp-domain.com” domain\")])]),e._v(\" \"),s(\"p\",[e._v('{% code title=\"rules/CUSTOM-RULE-4/main.rego\" %}')]),e._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[e._v('package rules\\n\\naws_redshift_cluster_tags_missing(resource) {\\n    not resource.tags.owner\\n}\\n\\naws_redshift_cluster_tags_missing(resource) {\\n    not resource.tags.description\\n}\\n\\naws_redshift_cluster_tags_missing(resource) {\\n    not endswith(resource.tags.owner, \"@corp-domain.com\")\\n}\\n\\ndeny[msg] {\\n    resource := input.resource.aws_redshift_cluster[name]\\n    aws_redshift_cluster_tags_missing(resource)\\n    msg := {\\n        \"publicId\": \"CUSTOM-RULE-4\",\\n        \"title\": \"Missing a description and an owner from tag, or owner tag does not comply with email requirements\",\\n        \"severity\": \"medium\",\\n        \"msg\": sprintf(\"input.resource.aws_redshift_cluster[%s].tags\", [name]),\\n        \"issue\": \"\",\\n        \"impact\": \"\",\\n        \"remediation\": \"\",\\n        \"references\": [],\\n    }\\n}\\n')])])]),s(\"p\",[e._v(\"{% endcode %}\")]),e._v(\" \"),s(\"p\",[e._v('{% hint style=\"warning\" %}\\nWe recommend always validating that your rule is correct by '),s(\"RouterLink\",{attrs:{to:\"/snyk/products/snyk-infrastructure-as-code/custom-rules/getting-started-with-the-sdk/testing-a-rule.html\"}},[e._v(\"updating and running the unit tests\")]),e._v(\".\\n{% endhint %}\")],1),e._v(\" \"),s(\"p\",[e._v(\"The test for this rule will look very similar to the ones from previous example and will also require its own fixture file.\")]),e._v(\" \"),s(\"h3\",{attrs:{id:\"example-with-xor\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#example-with-xor\"}},[e._v(\"#\")]),e._v(\" Example with XOR\")]),e._v(\" \"),s(\"p\",[e._v(\"Now let’s say that we want to add more complexity and check the following:\")]),e._v(\" \"),s(\"ul\",[s(\"li\",[e._v(\"If the tag type is a “user”, then we want the tag “email” to exist as well.\")]),e._v(\" \"),s(\"li\",[e._v(\"If not (assume the other type is a “service”), we want it to have a serviceDescription.\")]),e._v(\" \"),s(\"li\",[e._v(\"These two will be mutually exclusive; if the first condition applies, the second one shouldn’t, and vice versa.\")])]),e._v(\" \"),s(\"table\",[s(\"thead\",[s(\"tr\",[s(\"th\",[e._v(\"Type\")]),e._v(\" \"),s(\"th\",[e._v(\"Email\")]),e._v(\" \"),s(\"th\",[e._v(\"ServiceDescription\")])])]),e._v(\" \"),s(\"tbody\",[s(\"tr\",[s(\"td\",[e._v(\"User\")]),e._v(\" \"),s(\"td\",[e._v(\"YES\")]),e._v(\" \"),s(\"td\",[e._v(\"NO\")])]),e._v(\" \"),s(\"tr\",[s(\"td\",[e._v(\"Service\")]),e._v(\" \"),s(\"td\",[e._v(\"NO\")]),e._v(\" \"),s(\"td\",[e._v(\"YES\")])])])]),e._v(\" \"),s(\"p\",[e._v(\"To do this, we are going to refactor our code to use a checkTags helper function. This can check if there are any tags, but also check for the two conditions above with an OR.\")]),e._v(\" \"),s(\"p\",[e._v('{% code title=\"rules/CUSTOM-RULE-5/main.rego\" %}')]),e._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[e._v('package rules\\n\\ncheckTags(resource){\\n    resource.tags.type == \"user\"\\n    not resource.tags.email\\n}\\n\\ncheckTags(resource){\\n    resource.tags.type == \"service\"\\n    not resource.tags.serviceDescription\\n}\\n\\ncheckTags(resource){\\n    count(resource.tags) == 0\\n}\\n\\ndeny[msg] {\\n    resource := input.resource.aws_redshift_cluster[name]\\n    checkTags(resource)   \\n\\n    msg := {\\n        \"publicId\": \"CUSTOM-RULE-5\",\\n        \"title\": \"Complex rule\",\\n        \"severity\": \"medium\",\\n        \"msg\": sprintf(\"input.resource.aws_redshift_cluster[%v].tags\", [name]),\\n        \"issue\": \"\",\\n        \"impact\": \"\",\\n        \"remediation\": \"\",\\n        \"references\": [],\\n    }\\n}\\n')])])]),s(\"p\",[e._v(\"{% endcode %}\")]),e._v(\" \"),s(\"p\",[e._v(\"To convert this to an XOR we can use an \"),s(\"code\",[e._v(\"else\")]),e._v(\" rule:\")]),e._v(\" \"),s(\"p\",[e._v('{% code title=\"rules/CUSTOM-RULE-5/main.rego\" %}')]),e._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[e._v('package rules\\n\\ncheckUserTag(resource){\\n    not resource.tags.email\\n}\\n\\ncheckUserTag(resource){\\n    resource.tags.serviceDescription\\n}\\n\\ncheckServiceTag(resource){\\n    not resource.tags.serviceDescription\\n}\\n\\ncheckServiceTag(resource){\\n    resource.tags.email\\n}\\n\\ncheckTags(resource){\\n\\tcount(resource.tags) == 0\\n}\\n\\ncheckTags(resource) {\\n    resource.tags.type == \"user\"\\n    checkUserTag(resource)\\n} else {\\n    resource.tags.type == \"service\"\\n    checkServiceTag(resource)\\n}\\n\\ndeny[msg] {\\n    resource := input.resource.aws_redshift_cluster[name]\\n\\tcheckTags(resource)\\n    msg := {\\n        \"publicId\": \"CUSTOM-RULE-5\",\\n        \"title\": \"Missing the right tags from for a resource of type user or service\",\\n        \"severity\": \"medium\",\\n        \"msg\": sprintf(\"input.resource.aws_redshift_cluster[%v].tags\", [name]),\\n        \"issue\": \"\",\\n        \"impact\": \"\",\\n        \"remediation\": \"\",\\n        \"references\": [],\\n    }\\n}\\n')])])]),s(\"p\",[e._v(\"{% endcode %}\")]),e._v(\" \"),s(\"p\",[e._v(\"If you want to try it out yourselves, we have provided the same example in an \"),s(\"a\",{attrs:{href:\"https://play.openpolicyagent.org/p/1xcdj9kJRw\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"OPA Playground\"),s(\"OutboundLink\")],1),e._v(\".\")]),e._v(\" \"),s(\"p\",[e._v('{% hint style=\"warning\" %}\\nWe recommend always validating that your rule is correct by'),s(\"RouterLink\",{attrs:{to:\"/snyk/products/snyk-infrastructure-as-code/custom-rules/getting-started-with-the-sdk/testing-a-rule.html\"}},[e._v(\" updating and running the unit tests\")]),e._v(\".\\n{% endhint %}\")],1),e._v(\" \"),s(\"p\",[e._v(\"The test for this rule will look very similar to the ones from previous example and will also require its own fixture file.\")]),e._v(\" \"),s(\"h3\",{attrs:{id:\"examples-with-grouped-resources\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#examples-with-grouped-resources\"}},[e._v(\"#\")]),e._v(\" Examples with grouped resources\")]),e._v(\" \"),s(\"p\",[e._v(\"We can also iterate over many resources by adding them to an array of resources.\")]),e._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[e._v('\"resources\": [\\n            \"aws_iam_policy\",\\n            \"aws_iam_group_policy\",\\n            \"aws_iam_user_policy\",\\n            \"aws_iam_role_policy\",\\n            \"data.aws_iam_policy_document\",\\n]\\n')])])]),s(\"p\",[e._v(\"One way to leverage this is to implement denylist rules. \")]),e._v(\" \"),s(\"p\",[e._v(\"For example, we may want to ensure that if someone defines a Kubernetes ConfigMap, then they cannot use it to store sensitive information such as passwords, secret keys, and access tokens.\")]),e._v(\" \"),s(\"p\",[e._v('We can do that and expand what we define as \"sensitive information\" over time by defining a group of sensitive tokens inside a denylist:')]),e._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[e._v('package rules\\n\\nsensitive_denylist := [\\n\\t\"pass\",\\n\\t\"secret\",\\n\\t\"key\",\\n\\t\"token\",\\n]\\n\\ncheck_sensitive(keys, denylist) {\\n\\t_ = keys[key]\\n\\tcontains(key, denylist[_])\\n}\\n\\ndeny[msg] {\\n\\tinput.kind == \"ConfigMap\"\\n\\tinput.data = keys\\n\\tcheck_sensitive(keys, sensitive_denylist)\\n\\tmsg := {\\n\\t\\t\"publicId\": \"CUSTOM-RULE-7\",\\n\\t\\t\"title\": \"ConfigMap exposes sensitive data\",\\n\\t\\t\"severity\": \"high\",\\n\\t\\t\"msg\": \"input.data\",\\n\\t\\t\"issue\": \"\",\\n\\t\\t\"impact\": \"\",\\n\\t\\t\"remediation\": \"\",\\n\\t\\t\"references\": [],\\n\\t}\\n}\\n\\n')])])]),s(\"p\",[e._v('Any key containing the substrings \"pass\", \"secret\", \"key\", and \"token\" can be considered sensitive and so should not be included in the ConfigMap.')]),e._v(\" \"),s(\"h2\",{attrs:{id:\"\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#\"}},[e._v(\"#\")])])])}),[],!1,null,null,null);t.default=a.exports}}]);","extractedComments":[]}