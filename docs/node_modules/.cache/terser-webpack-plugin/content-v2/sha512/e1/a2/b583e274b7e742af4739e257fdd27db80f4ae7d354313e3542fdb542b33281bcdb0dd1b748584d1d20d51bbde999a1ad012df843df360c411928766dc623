{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{491:function(e,t,n){\"use strict\";n.r(t);var s=n(56),a=Object(s.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[n(\"h1\",{attrs:{id:\"dependencies\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#dependencies\"}},[e._v(\"#\")]),e._v(\" Dependencies\")]),e._v(\" \"),n(\"p\",[e._v(\"Developers specify a list of dependencies they want included in their application inside a manifest file. Those dependencies explicitly specified are called \"),n(\"code\",[e._v(\"top level dependencies\")]),e._v(\". However each one of those dependencies uses other dependencies and are typically referred to as \"),n(\"code\",[e._v(\"nested dependencies\")]),e._v(\" or \"),n(\"code\",[e._v(\"transitive dependencies\")]),e._v(\". All the package managers install the nested dependencies without the developer having to explicitly ask for it.\")]),e._v(\" \"),n(\"p\",[e._v(\"Snyk CLI automatically scans the nested dependencies as well and those scan results are included in the returned json.\")]),e._v(\" \"),n(\"p\",[e._v(\"The output json file includes a \"),n(\"code\",[e._v(\"from\")]),e._v(\" field which shows the chain of dependencies leading the vulnerability displayed. The way to interpret the information below is that my application \"),n(\"em\",[e._v(\"goof\")]),e._v(\" has a top level dependency \"),n(\"em\",[e._v(\"tap\")]),e._v(\" (version 5.8.0) that has a nested dependency \"),n(\"em\",[e._v(\"nyc\")]),e._v(\" that further depends on \"),n(\"em\",[e._v(\"istanbul\")]),e._v(\" that ultimately depends on \"),n(\"em\",[e._v(\"handlebars\")]),e._v(\" (version 4.0.5) which if the nested dependency that is carrying the vulnerability in this case.\")]),e._v(\" \"),n(\"div\",{staticClass:\"language-yaml extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-yaml\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[e._v('\"from\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[e._v(\":\")]),e._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[e._v(\"[\")]),e._v(\"\\n  \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[e._v('\"goof@0.0.3\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[e._v(\",\")]),e._v(\"\\n  \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[e._v('\"tap@5.8.0\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[e._v(\",\")]),e._v(\"\\n  \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[e._v('\"nyc@6.6.1\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[e._v(\",\")]),e._v(\"\\n  \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[e._v('\"istanbul@0.4.3\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[e._v(\",\")]),e._v(\"\\n  \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[e._v('\"handlebars@4.0.5\"')]),e._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[e._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[e._v(\",\")]),e._v(\"\\n\")])])]),n(\"p\",[e._v(\"If you want to associate this vulnerability back to a line in the manifest file, it needs to be mapped to the line that includes the top level dependency \"),n(\"em\",[e._v(\"tap.\")])])])}),[],!1,null,null,null);t.default=a.exports}}]);","extractedComments":[]}