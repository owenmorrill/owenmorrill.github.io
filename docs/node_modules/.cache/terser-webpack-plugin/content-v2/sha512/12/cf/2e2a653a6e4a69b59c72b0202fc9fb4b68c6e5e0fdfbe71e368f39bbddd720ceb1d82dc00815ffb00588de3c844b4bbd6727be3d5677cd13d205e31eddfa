{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[818],{1215:function(e,t,s){\"use strict\";s.r(t);var a=s(56),o=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[s(\"h1\",{attrs:{id:\"test-deployment\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#test-deployment\"}},[e._v(\"#\")]),e._v(\" Test deployment\")]),e._v(\" \"),s(\"p\",[e._v(\"Now that our job ran successfully, let's validate our application is running. To do this, we will run \"),s(\"code\",[e._v(\"kubectl get svc\")]),e._v(\" once more.\")]),e._v(\" \"),s(\"p\",[s(\"img\",{attrs:{src:\"https://partner-workshop-assets.s3.us-east-2.amazonaws.com/kubectl_get_svc_external-ip.gif\",alt:\"\"}})]),e._v(\" \"),s(\"p\",[e._v(\"This time, we should see \"),s(\"em\",[s(\"strong\",[e._v(\"two\")])]),e._v(\" \"),s(\"strong\",[e._v(\"**additional services:\")]),e._v(\" goof \"),s(\"strong\",[e._v(\"and\")]),e._v(\" goof-mongo** which correspond to the deployment and services configurations from our Kubernetes manifest. Recall that in our \"),s(\"code\",[e._v(\"./deployment/goof-service.yaml\")]),e._v(\" we defined this as our \"),s(\"code\",[e._v(\"frontend\")]),e._v(\" app with type \"),s(\"code\",[e._v(\"LoadBalancer\")]),e._v(\" listening on the standard \"),s(\"code\",[e._v(\"http\")]),e._v(\" port \"),s(\"code\",[e._v(\"80\")]),e._v(\".\")]),e._v(\" \"),s(\"h2\",{attrs:{id:\"install-jq\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#install-jq\"}},[e._v(\"#\")]),e._v(\" Install jq\")]),e._v(\" \"),s(\"p\",[e._v(\"You can just as well copy and paste results into your clipboard, but we will take a different approach and use some command-line magic to achieve better results. Let's start by installing a command-line JSON processor \"),s(\"a\",{attrs:{href:\"https://formulae.brew.sh/formula/jq\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s(\"code\",[e._v(\"jq\")]),s(\"OutboundLink\")],1),e._v(\" using Homebrew.\")]),e._v(\" \"),s(\"div\",{staticClass:\"language-bash extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[s(\"code\",[e._v(\"brew update \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"&&\")]),e._v(\" brew \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[e._v(\"install\")]),e._v(\" jq\\n\")])])]),s(\"p\",[e._v(\"Next let's create an environment variable \"),s(\"code\",[e._v(\"GOOF_HOST\")]),e._v(\" and pass the value of \"),s(\"code\",[e._v(\"EXTERNAL-IP\")]),e._v(\" for our \"),s(\"strong\",[e._v(\"goof\")]),e._v(\" service in one command.\")]),e._v(\" \"),s(\"div\",{staticClass:\"language-bash extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token assign-left variable\"}},[e._v(\"GOOF_HOST\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"=\")]),s(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[s(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[e._v(\"$(\")]),e._v(\"kubectl get svc goof -o json \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"|\")]),e._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[e._v(\"\\\\\")]),e._v(\"\\njq -r \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[e._v(\"'.status.loadBalancer.ingress[].hostname'\")]),s(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[e._v(\")\")])]),e._v(\"\\n\")])])]),s(\"p\",[e._v(\"Let's make sure it worked and type \"),s(\"code\",[e._v(\"echo $GOOF_HOST\")]),e._v(\" on the terminal command-line and see the results. We should see the a return value that matches our \"),s(\"code\",[e._v(\"EXTERNAL-IP\")]),e._v(\". Next, we are going to perform a simple test to see if our application is serving requests. For this, we will run a simple \"),s(\"code\",[e._v(\"curl\")]),e._v(\" command and browse \"),s(\"code\",[e._v(\"./public/about.html\")]),e._v(\". Your results should look similar to the following:\")]),e._v(\" \"),s(\"p\",[s(\"img\",{attrs:{src:\"https://partner-workshop-assets.s3.us-east-2.amazonaws.com/goof_curl_about.gif\",alt:\"\"}})]),e._v(\" \"),s(\"p\",[e._v(\"If you prefer, you can also launch your favorite web browser and navigate to the \"),s(\"code\",[e._v(\"EXTERNAL-IP\")]),e._v(\" of our \"),s(\"code\",[e._v(\"LoadBalancer\")]),e._v(\" as shown below:\")]),e._v(\" \"),s(\"p\",[s(\"img\",{attrs:{src:\"https://partner-workshop-assets.s3.us-east-2.amazonaws.com/circleci_goof.png\",alt:\"\"}})])])}),[],!1,null,null,null);t.default=o.exports}}]);","extractedComments":[]}