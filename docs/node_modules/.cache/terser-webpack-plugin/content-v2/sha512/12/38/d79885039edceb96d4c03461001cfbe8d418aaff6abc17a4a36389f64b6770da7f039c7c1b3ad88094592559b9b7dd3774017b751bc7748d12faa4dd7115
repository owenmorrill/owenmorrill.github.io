{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[565],{969:function(e,t,a){\"use strict\";a.r(t);var n=a(56),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"parsing-an-input-file\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#parsing-an-input-file\"}},[e._v(\"#\")]),e._v(\" Parsing an input file\")]),e._v(\" \"),a(\"p\",[e._v(\"It can be difficult to understand the internal representation of your input files as you write your Rego code. As we will see when we learn \"),a(\"RouterLink\",{attrs:{to:\"/snyk/products/snyk-infrastructure-as-code/custom-rules/getting-started-with-the-sdk/writing-a-rule.html\"}},[e._v(\"how to write a rule\")]),e._v(\",  the input value is a JSON-like object but the input files could also be YAML, Terraform, or \"),a(\"a\",{attrs:{href:\"https://www.terraform.io/docs/internals/json-format.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"Terraform Plan JSON Output\"),a(\"OutboundLink\")],1),e._v(\". To help understand how these are translated into JSON we have provided a \"),a(\"code\",[e._v(\"parse\")]),e._v(\" command.\")],1),e._v(\" \"),a(\"p\",[e._v(\"You will need an IaC file to use as an input file. This input file can also be used when \"),a(\"RouterLink\",{attrs:{to:\"/snyk/products/snyk-infrastructure-as-code/custom-rules/getting-started-with-the-sdk/testing-a-rule.html\"}},[e._v(\"testing the rules\")]),e._v(\", where we parse your files into JSON by default.\")],1),e._v(\" \"),a(\"h3\",{attrs:{id:\"parsing-terraform-files\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#parsing-terraform-files\"}},[e._v(\"#\")]),e._v(\" Parsing Terraform files\")]),e._v(\" \"),a(\"p\",[e._v(\"Take, for example, the following Terraform file:\")]),e._v(\" \"),a(\"p\",[e._v('{% code title=\"example.tf\" %}')]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v('resource \"aws_redshift_cluster\" \"example\" {\\n  cluster_identifier = \"tf-redshift-cluster\"\\n  database_name      = \"mydb\"\\n  master_username    = \"foo\"\\n  master_password    = \"Mustbe8characters\"\\n  node_type          = \"dc1.large\"\\n  cluster_type       = \"single-node\"\\n}\\n')])])]),a(\"p\",[e._v(\"{% endcode %}\")]),e._v(\" \"),a(\"p\",[e._v(\"To get the equivalent JSON format, run the parse command:\")]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v(\"snyk-iac-rules parse example.tf --format hcl2\\n\")])])]),a(\"p\",[e._v(\"This prints out the JSON, which you can use as guidance for writing your rules:\")]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v('{\\n\\t\"resource\": {\\n\\t\\t\"aws_redshift_cluster\": {\\n\\t\\t\\t\"example\": {\\n\\t\\t\\t\\t\"cluster_identifier\": \"tf-redshift-cluster\",\\n\\t\\t\\t\\t\"cluster_type\": \"single-node\",\\n\\t\\t\\t\\t\"database_name\": \"mydb\",\\n\\t\\t\\t\\t\"master_password\": \"Mustbe8characters\",\\n\\t\\t\\t\\t\"master_username\": \"foo\",\\n\\t\\t\\t\\t\"node_type\": \"dc1.large\"\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n')])])]),a(\"p\",[e._v(\"In Rego, accessing the \"),a(\"code\",[e._v(\"node_type\")]),e._v(\" field would look like: \")]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v(\"input.resource.aws_redshift_cluster.example.node_type\\n\")])])]),a(\"h3\",{attrs:{id:\"parsing-yaml-files\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#parsing-yaml-files\"}},[e._v(\"#\")]),e._v(\" Parsing YAML files\")]),e._v(\" \"),a(\"p\",[e._v(\"Another example is the following YAML file, defining a Kubernetes resource:\")]),e._v(\" \"),a(\"p\",[e._v('{% code title=\"example.yaml\" %}')]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v(\"apiVersion: v1\\nkind: Pod\\nmetadata:\\n  name: example\\nspec:\\n  containers:\\n    - name: example\\n      image: example:latest\\n      securityContext:\\n        privileged: true \\n\")])])]),a(\"p\",[e._v(\"{% endcode %}\")]),e._v(\" \"),a(\"p\",[e._v(\"To get the equivalent JSON format, run the parse command:\")]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v(\"snyk-iac-rules parse example.yaml --format=yaml\\n\")])])]),a(\"p\",[e._v(\"This prints out the JSON, which you can use as guidance for writing your rules:\")]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v('{\\n\\t\"apiVersion\": \"v1\",\\n\\t\"kind\": \"Pod\",\\n\\t\"metadata\": {\\n\\t\\t\"name\": \"example\"\\n\\t},\\n\\t\"spec\": {\\n\\t\\t\"containers\": [\\n\\t\\t\\t{\\n\\t\\t\\t\\t\"image\": \"example:latest\",\\n\\t\\t\\t\\t\"name\": \"example\",\\n\\t\\t\\t\\t\"securityContext\": {\\n\\t\\t\\t\\t\\t\"privileged\": true\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t]\\n\\t}\\n}\\n')])])]),a(\"p\",[e._v(\"In Rego, accessing the \"),a(\"code\",[e._v(\"privileged\")]),e._v(\" field would look like: \")]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v(\"input.spec.containers[0].securityContext.privileged\\n\")])])]),a(\"h3\",{attrs:{id:\"parsing-terraform-plan-json-output-files\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#parsing-terraform-plan-json-output-files\"}},[e._v(\"#\")]),e._v(\" Parsing Terraform Plan JSON Output files\")]),e._v(\" \"),a(\"p\",[e._v(\"Another example is the following Terraform Plan JSON Output file, returned by the \"),a(\"code\",[e._v(\"terraform show -json ./plan/example.json.tfplan\")]),e._v(\" command:\")]),e._v(\" \"),a(\"p\",[e._v('{% code title=\"example.json.tfplan\" %}')]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v('{\\n  \"format_version\": \"0.2\",\\n  \"terraform_version\": \"1.0.11\",\\n  \"planned_values\": {\\n    \"root_module\": {\\n      \"resources\": [\\n        {\\n          \"address\": \"aws_vpc.example\",\\n          \"mode\": \"managed\",\\n          \"type\": \"aws_vpc\",\\n          \"name\": \"example\",\\n          \"provider_name\": \"registry.terraform.io/hashicorp/aws\",\\n          \"schema_version\": 1,\\n          \"values\": {\\n            \"assign_generated_ipv6_cidr_block\": false,\\n            \"cidr_block\": \"10.0.0.0/16\",\\n            \"enable_dns_support\": true,\\n            \"instance_tenancy\": \"default\",\\n            \"tags\": null\\n          },\\n          \"sensitive_values\": {\\n            \"tags_all\": {}\\n          }\\n        }\\n      ]\\n    }\\n  },\\n  \"resource_changes\": [\\n    {\\n      \"address\": \"aws_vpc.example\",\\n      \"mode\": \"managed\",\\n      \"type\": \"aws_vpc\",\\n      \"name\": \"example\",\\n      \"provider_name\": \"registry.terraform.io/hashicorp/aws\",\\n      \"change\": {\\n        \"actions\": [\\n          \"create\"\\n        ],\\n        \"before\": null,\\n        \"after\": {\\n          \"assign_generated_ipv6_cidr_block\": false,\\n          \"cidr_block\": \"10.0.0.0/16\",\\n          \"enable_dns_support\": true,\\n          \"instance_tenancy\": \"default\",\\n          \"tags\": null\\n        },\\n        \"after_unknown\": {\\n          \"arn\": true,\\n          \"default_network_acl_id\": true,\\n          \"default_route_table_id\": true,\\n          \"default_security_group_id\": true,\\n          \"dhcp_options_id\": true,\\n          \"enable_classiclink\": true,\\n          \"enable_classiclink_dns_support\": true,\\n          \"enable_dns_hostnames\": true,\\n          \"id\": true,\\n          \"ipv6_association_id\": true,\\n          \"ipv6_cidr_block\": true,\\n          \"main_route_table_id\": true,\\n          \"owner_id\": true,\\n          \"tags_all\": true\\n        },\\n        \"before_sensitive\": false,\\n        \"after_sensitive\": {\\n          \"tags_all\": {}\\n        }\\n      }\\n    }\\n  ],\\n  \"configuration\": {\\n    \"provider_config\": {\\n      \"aws\": {\\n        \"name\": \"aws\",\\n        \"expressions\": {\\n          \"region\": {\\n            \"constant_value\": \"us-east-1\"\\n          }\\n        }\\n      }\\n    },\\n    \"root_module\": {\\n      \"resources\": [\\n        {\\n          \"address\": \"aws_vpc.example\",\\n          \"mode\": \"managed\",\\n          \"type\": \"aws_vpc\",\\n          \"name\": \"example\",\\n          \"provider_config_key\": \"aws\",\\n          \"expressions\": {\\n            \"cidr_block\": {\\n              \"constant_value\": \"10.0.0.0/16\"\\n            }\\n          },\\n          \"schema_version\": 1\\n        }\\n      ]\\n    }\\n  }\\n}\\n\\n')])])]),a(\"p\",[e._v(\"{% endcode %}\")]),e._v(\" \"),a(\"p\",[e._v(\"To get the equivalent JSON format, run the parse command:\")]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v(\"snyk-iac-rules parse example.json.tfplan --format=tf-plan\\n\")])])]),a(\"p\",[e._v(\"This prints out the JSON, which you can use as guidance for writing your rules:\")]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v('{\\n\\t\"data\": {},\\n\\t\"resource\": {\\n\\t\\t\"aws_vpc\": {\\n\\t\\t\\t\"example\": {\\n\\t\\t\\t\\t\"assign_generated_ipv6_cidr_block\": false,\\n\\t\\t\\t\\t\"cidr_block\": \"10.0.0.0/16\",\\n\\t\\t\\t\\t\"enable_dns_support\": true,\\n\\t\\t\\t\\t\"instance_tenancy\": \"default\",\\n\\t\\t\\t\\t\"tags\": null\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n')])])]),a(\"p\",[e._v(\"In Rego, accessing the \"),a(\"code\",[e._v(\"tags\")]),e._v(\" field would look like: \")]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v(\"input.resource.aws_vpc.example.tags\\n\")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);","extractedComments":[]}