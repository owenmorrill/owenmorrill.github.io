{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[525],{923:function(e,t,a){\"use strict\";a.r(t);var o=a(56),n=Object(o.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"advanced-use-of-automatic-import-deletion\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#advanced-use-of-automatic-import-deletion\"}},[e._v(\"#\")]),e._v(\" Advanced use of automatic import/deletion\")]),e._v(\" \"),a(\"p\",[e._v(\"If you have an advanced use case for automatic import/deletion of Kubernetes workload projects, you can write your own rules. The controller evaluates policy decisions using a policy file written in \"),a(\"a\",{attrs:{href:\"https://www.openpolicyagent.org/docs/latest/policy-language/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"Rego policy language\"),a(\"OutboundLink\")],1),e._v(\". Ensure the file is named \"),a(\"strong\",[e._v(\"workload-events.rego\")]),e._v(\".\")]),e._v(\" \"),a(\"h2\",{attrs:{id:\"policy-syntax\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#policy-syntax\"}},[e._v(\"#\")]),e._v(\" Policy syntax\")]),e._v(\" \"),a(\"p\",[e._v(\"Provide the policy file to the Snyk controller in a ConfigMap. The policy syntax looks like this:\")]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v('package snyk\\norgs := [\"<org-id>\"]\\ndefault workload_events = false\\n')])])]),a(\"p\",[e._v(\"If you flip the value to true, it will automatically import or delete \"),a(\"strong\",[e._v(\"everything\")]),e._v(\" in the cluster.\")]),e._v(\" \"),a(\"p\",[e._v('{% hint style=\"warning\" %}\\nSetting the workload_events key to true is '),a(\"strong\",[e._v(\"not recommended\")]),e._v(\" as some workload types like Jobs and Pods can be noisy and generate lots of workload imports in your Snyk organization\\n{% endhint %}\")]),e._v(\" \"),a(\"p\",[e._v(\"Both \"),a(\"strong\",[e._v(\"package snyk\")]),e._v(\" and the key \"),a(\"strong\",[e._v(\"workload_events\")]),e._v(\" are mandatory by Snyk Controller.\")]),e._v(\" \"),a(\"h2\",{attrs:{id:\"using-more-than-one-org\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#using-more-than-one-org\"}},[e._v(\"#\")]),e._v(\" Using more than one org\")]),e._v(\" \"),a(\"p\",[e._v(\"Orgs is a list of organization public IDs. You can add more than one organization to use the auto-import and auto-delete capabilities. You can locate this public ID in the settings page for the organization.\")]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v('package snyk\\norgs := [\"<org-id-1>\",\"<org-id-2>\"]\\ndefault workload_events = false\\n')])])]),a(\"h2\",{attrs:{id:\"defining-rules\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#defining-rules\"}},[e._v(\"#\")]),e._v(\" Defining rules\")]),e._v(\" \"),a(\"p\",[e._v(\"To define your own rules, set a condition on the \"),a(\"strong\",[e._v(\"workload_events\")]),e._v(\" key and by providing your organization public ID. For example, to import workloads from the \"),a(\"strong\",[e._v(\"default\")]),e._v(\" namespace and automatically delete them on Snyk side once they are deleted from the cluster, the policy would look like this:\")]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v('package snyk\\norgs := [\"19982df2-0ed5-4a16-b355-e6535cfc41ef\"]\\ndefault workload_events = false\\nworkload_events {\\n    input.metadata.namespace == \"default\"\\n}\\n')])])]),a(\"p\",[e._v(\"Here, \"),a(\"strong\",[e._v(\"input\")]),e._v(\" refers to the Kubernetes metadata of the workload scanned by the Snyk controller.\")]),e._v(\" \"),a(\"p\",[e._v(\"You can also create a policy for workload events (creation/deletion) with a specific annotation:\")]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v('package snyk\\norgs := [\"19982df2-0ed5-4a16-b355-e6535cfc41ef\"]\\ndefault workload_events = false\\nworkload_events {\\n    input.metadata.annotations.team == \"apollo\"\\n}\\n')])])]),a(\"h2\",{attrs:{id:\"excluding-workload-types\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#excluding-workload-types\"}},[e._v(\"#\")]),e._v(\" Excluding workload types\")]),e._v(\" \"),a(\"p\",[e._v(\"As best practice, we recommend excluding specific workload types such as Pods and Jobs from workload events (creation/deletion), as they can be really noisy and can generate lots of workload imports in your Snyk organization. You can do this with the following example policy:\")]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v('package snyk\\norgs := [\"19982df2-0ed5-4a16-b355-e6535cfc41ef\"]\\ndefault workload_events = false\\nworkload_events {\\n    input.kind != \"Job\"\\n    input.kind != \"Pod\"\\n}\\n')])])]),a(\"h2\",{attrs:{id:\"configure-snyk-controller-to-use-the-policy\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#configure-snyk-controller-to-use-the-policy\"}},[e._v(\"#\")]),e._v(\" Configure Snyk controller to use the policy\")]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v('kubectl create configmap snyk-monitor-custom-policies \\\\\\n    -n snyk-monitor \\\\\\n    --from-file=workload-events.rego # This name is hardcoded\\nhelm upgrade --install snyk-monitor snyk-charts/snyk-monitor \\\\\\n    --namespace snyk-monitor \\\\\\n    --set clusterName=\"Production cluster\" \\\\\\n    --set workloadPoliciesMap=snyk-monitor-custom-policies\\n')])])]),a(\"p\",[e._v(\"Now you can deploy the Snyk controller, or restart it if it is already running in order to pick up the policy. You will now see new workloads in Snyk.\")])])}),[],!1,null,null,null);t.default=n.exports}}]);","extractedComments":[]}