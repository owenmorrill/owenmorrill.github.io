{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[773],{1168:function(t,e,a){\"use strict\";a.r(e);var n=a(56),s=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"container-scanning\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#container-scanning\"}},[t._v(\"#\")]),t._v(\" Container Scanning\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"background\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#background\"}},[t._v(\"#\")]),t._v(\" Background\")]),t._v(\" \"),a(\"p\",[t._v(\"(IMAGE REMOVED!) - (https://partner-workshop-assets.s3.us-east-2.amazonaws.com/snyk-container-01.png)\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"testing-for-vulnerabilities-at-different-stages-of-the-sdlc\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#testing-for-vulnerabilities-at-different-stages-of-the-sdlc\"}},[t._v(\"#\")]),t._v(\" Testing for vulnerabilities at different stages of the SDLC*\")]),t._v(\" \"),a(\"p\",[t._v(\"There are a few strategies for implementing testing. The following chart provides a helpful summary of these. The examples in this workshop will focus on two of those presented below.\")]),t._v(\" \"),a(\"table\",[a(\"thead\",[a(\"tr\",[a(\"th\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"Stage\")]),t._v(\" \"),a(\"th\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"Description\")]),t._v(\" \"),a(\"th\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"Cost\")]),t._v(\" \"),a(\"th\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"Feedback\")]),t._v(\" \"),a(\"th\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"Completeness\")])])]),t._v(\" \"),a(\"tbody\",[a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"Local\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"Great for debugging and building up knowledge among developers but requires individual developer action, and no way to enforce\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"Medium\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"Fast\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"Low\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"CI/CD**\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"Great as a gate, fast feedback for developers, requires per-pipeline implementation which will depend on how standardized pipeline management is in your organization. Possibly counter productive for low severity issues breaking the build, so need other feedback cycles as well.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"Medium\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"Fast\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"Variable\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"Registry***\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"Often a single owner, so easy to integrate and covers all first-party images, no matter how they were built. Potentially noisy because images may be unused.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"Low\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"Medium\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"Medium\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"Production\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"An accurate picture of what youâ€™re running, including third-party content, but potentially slow feedback cycles to development teams and the risk vulnerabilities can be exploited in running applications.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"High\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"Slow\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"High\")])])])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"container-image-scanning-in-your-pipeline\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#container-image-scanning-in-your-pipeline\"}},[t._v(\"#\")]),t._v(\" Container image scanning in your pipeline\")]),t._v(\" \"),a(\"p\",[t._v(\"Similar to the previous module on \"),a(\"strong\",[t._v(\"Application Scanning\")]),t._v(\", in this module we are configuring our \"),a(\"a\",{attrs:{href:\"https://bitbucket.org/snyk/patterns-library-atlassian-aws/src/192a4d2412a4330b9f634e9d45a546ec1add61fb/bitbucket-pipelines.yml#lines-32:56\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"bitbucket-pipelines.yml\"),a(\"OutboundLink\")],1),t._v(\" file to build the Docker image for our application, scan the image, then push that image to our registry. Let's take a closer look at the container image scanning step:\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-yaml extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-yaml\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"scan-push-image\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token important\"}},[t._v(\"&scan-push-image\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"-\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"step\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"name\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Scan and push container image\"')]),t._v(\"\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"services\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"-\")]),t._v(\" docker\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"script\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"-\")]),t._v(\" docker build \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"-\")]),t._v(\"t $IMAGE ./app/goof/\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"-\")]),t._v(\" docker tag $IMAGE $IMAGE\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"$\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"BITBUCKET_COMMIT\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"-\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"pipe\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" snyk/snyk\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"-\")]),t._v(\"scan\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"0.4.3\\n          \"),a(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"variables\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"SNYK_TOKEN\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" $SNYK_TOKEN\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"LANGUAGE\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"docker\"')]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"IMAGE_NAME\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" $IMAGE\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"PROJECT_FOLDER\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"app/goof\"')]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"TARGET_FILE\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Dockerfile\"')]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"CODE_INSIGHTS_RESULTS\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"true\"')]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"SEVERITY_THRESHOLD\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"high\"')]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"DONT_BREAK_BUILD\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"true\"')]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"MONITOR\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"false\"')]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"-\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"pipe\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" atlassian/aws\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"-\")]),t._v(\"ecr\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"-\")]),t._v(\"push\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"-\")]),t._v(\"image\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"1.1.3\\n          \"),a(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"variables\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"AWS_ACCESS_KEY_ID\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'$AWS_ACCESS_KEY_ID'\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"AWS_SECRET_ACCESS_KEY\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'$AWS_SECRET_ACCESS_KEY'\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"AWS_DEFAULT_REGION\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'$AWS_DEFAULT_REGION'\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"IMAGE_NAME\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" $IMAGE\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"TAGS\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'${BITBUCKET_COMMIT}'\")]),t._v(\"\\n\")])])]),a(\"p\",[t._v(\"Here, we are building our container image and tagging it, then leveraging the \"),a(\"a\",{attrs:{href:\"https://bitbucket.org/product/features/pipelines/integrations?p=snyk/snyk-scan\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"Snyk Scan\"),a(\"OutboundLink\")],1),t._v(\" pipe in our pipeline to perform a scan of the container image. We will keep the same values for \"),a(\"code\",[t._v(\"CODE_INSIGHTS_RESULTS\")]),t._v(\", \"),a(\"code\",[t._v(\"SEVERITY_THRESHOLD\")]),t._v(\", and \"),a(\"code\",[t._v(\"DONT_BREAK_BUILD\")]),t._v(\". We are also passing a few additional \"),a(\"a\",{attrs:{href:\"https://bitbucket.org/snyk/snyk-scan\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"supported variables\"),a(\"OutboundLink\")],1),t._v(\" relevant for our Snyk Pipe to understand we are requesting a container image scan instead of an application scan. These are namely setting \"),a(\"code\",[t._v(\"LANGUAGE\")]),t._v(\" to \"),a(\"code\",[t._v(\"docker\")]),t._v(\", declaring the \"),a(\"code\",[t._v(\"IMAGE_NAME\")]),t._v(\" and passing the appropriate \"),a(\"strong\",[t._v(\"repository variable\")]),t._v(\" as well as setting the \"),a(\"code\",[t._v(\"TARGET_FILE\")]),t._v(\" to \"),a(\"code\",[t._v(\"Dockerfile\")]),t._v(\". Once the image has been scanned by Snyk and results available in Code Insights, we will call the Amazon ECR \"),a(\"a\",{attrs:{href:\"https://bitbucket.org/atlassian/aws-ecr-push-image\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"push image pipe\"),a(\"OutboundLink\")],1),t._v(\" to push to our repository.\")]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"Footnotes:\")])]),t._v(\" \"),a(\"ol\",[a(\"li\",[a(\"strong\",[t._v(\"*Snyk Blog -\")]),t._v(\" \"),a(\"a\",{attrs:{href:\"https://snyk.io/blog/container-security-throughout-the-sdlc/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"Testing for vulnerabilities at different stages of the SDLC\"),a(\"OutboundLink\")],1)]),t._v(\" \"),a(\"li\",[t._v(\"******We will focus on this stage in our Bitbucket pipeline example.\")]),t._v(\" \"),a(\"li\",[t._v(\"*******We will focus on this stage in our Snyk integration for Amazon ECR example.\")])])])}),[],!1,null,null,null);e.default=s.exports}}]);","extractedComments":[]}