{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[837],{1237:function(t,e,s){\"use strict\";s.r(e);var a=s(56),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[s(\"h1\",{attrs:{id:\"deploy-snyk\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#deploy-snyk\"}},[t._v(\"#\")]),t._v(\" Deploy Snyk\")]),t._v(\" \"),s(\"p\",[t._v(\"You can scan Kubernetes workloads by deploying the \"),s(\"code\",[t._v(\"snyk-monitor\")]),t._v(\" into your cluster. This is published as an official \"),s(\"a\",{attrs:{href:\"https://artifacthub.io/packages/helm/snyk/snyk-monitor\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"helm chart\"),s(\"OutboundLink\")],1),t._v(\" and we will be basing these steps on that deployment option. To learn more about Snyk's Kubernetes integration, visit our \"),s(\"a\",{attrs:{href:\"https://docs.snyk.io/products/snyk-container/image-scanning-library/kubernetes-workload-and-image-scanning/kubernetes-integration-overview\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"documentation pages\"),s(\"OutboundLink\")],1),t._v(\". For convenience, we will cover the steps at a high level here. \")]),t._v(\" \"),s(\"h4\",{attrs:{id:\"step-1\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#step-1\"}},[t._v(\"#\")]),t._v(\" Step 1\")]),t._v(\" \"),s(\"p\",[t._v(\"Create the namespace:\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-bash extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[s(\"code\",[t._v(\"kubectl create namespace snyk-monitor\\n\")])])]),s(\"h4\",{attrs:{id:\"step-2\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#step-2\"}},[t._v(\"#\")]),t._v(\" Step 2\")]),t._v(\" \"),s(\"p\",[t._v(\"Create the secret:\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-bash extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[s(\"code\",[t._v(\"kubectl create secret generic snyk-monitor -n snyk-monitor --from-literal\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\"dockercfg.json\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\" --from-literal\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\"integrationId\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\"abcd1234-abcd-1234-abcd-1234abcd1234\\n\")])])]),s(\"p\",[t._v('{% hint style=\"info\" %}\\nLocate your '),s(\"strong\",[t._v(\"Integration\")]),t._v(\" ID from the \"),s(\"a\",{attrs:{href:\"https://app.snyk.io/org/YOUR-ORGANIZATION-NAME/manage/integrations/kubernetes\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"Snyk Integrations page \"),s(\"OutboundLink\")],1),t._v(\"and copy it.\\n{% endhint %}\")]),t._v(\" \"),s(\"h4\",{attrs:{id:\"step-3\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#step-3\"}},[t._v(\"#\")]),t._v(\" Step 3\")]),t._v(\" \"),s(\"p\",[t._v(\"Add the Helm repo:\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-bash extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[s(\"code\",[t._v(\"helm repo \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"add\")]),t._v(\" snyk-charts https://snyk.github.io/kubernetes-monitor/ --force-update\\n\")])])]),s(\"h4\",{attrs:{id:\"step-4\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#step-4\"}},[t._v(\"#\")]),t._v(\" Step 4\")]),t._v(\" \"),s(\"p\",[t._v('{% hint style=\"info\" %}\\nReplace '),s(\"strong\",[t._v('\"my-cluster\"')]),t._v(\" with the name of your cluster. Also note that we are passing a few settings for compatibility with GKE Autopilot.\\n{% endhint %}\")]),t._v(\" \"),s(\"p\",[t._v(\"Install the chart:\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-bash extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[s(\"code\",[t._v(\"helm upgrade --install snyk-monitor snyk-charts/snyk-monitor \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"\\\\\")]),t._v(\"\\n  --namespace snyk-monitor \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"\\\\\")]),t._v(\"\\n  --set pvc.enabled\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\"true \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"\\\\\")]),t._v(\"\\n  --set pvc.create\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\"true \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"\\\\\")]),t._v(\"\\n  --set pvc.name\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"snyk-monitor-pvc\"')]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"\\\\\")]),t._v(\"\\n  --set \"),s(\"span\",{pre:!0,attrs:{class:\"token assign-left variable\"}},[t._v(\"clusterName\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"my-cluster\"')]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"\\\\\")]),t._v(\"\\n  --set nodeAffinity.disableBetaArchNodeSelector\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\"true \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"\\\\\")]),t._v(\"\\n  --set requests.memory\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"512Mi\"')]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"\\\\\")]),t._v(\"\\n  --set requests.\"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"ephemeral-storage\"')]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"50Gi\"')]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"\\\\\")]),t._v(\"\\n  --set limits.\"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"ephemeral-storage\"')]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"50Gi\"')]),t._v(\"\\n\")])])]),s(\"p\",[t._v(\"Now, we wait for the app to be ready and can check the status by running the following command:\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-bash extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[s(\"code\",[t._v(\"kubectl get pods -n snyk-monitor\\n\")])])]),s(\"p\",[t._v(\"Like the previous example, we want a ready status to be displayed.\")])])}),[],!1,null,null,null);e.default=n.exports}}]);","extractedComments":[]}