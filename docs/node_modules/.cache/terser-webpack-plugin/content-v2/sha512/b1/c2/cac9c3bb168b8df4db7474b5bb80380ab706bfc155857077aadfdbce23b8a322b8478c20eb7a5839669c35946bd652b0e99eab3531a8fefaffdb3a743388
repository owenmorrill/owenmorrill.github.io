{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[806],{1205:function(t,a,s){\"use strict\";s.r(a);var e=s(56),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[s(\"h1\",{attrs:{id:\"push-image-to-registry\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#push-image-to-registry\"}},[t._v(\"#\")]),t._v(\" Push image to registry\")]),t._v(\" \"),s(\"p\",[t._v(\"Next, we call the \"),s(\"code\",[t._v(\"circleci/aws-ecr\")]),t._v(\" orb once more, but this time we are invoking the \"),s(\"a\",{attrs:{href:\"https://circleci.com/orbs/registry/orb/circleci/aws-ecr#commands-build-and-push-image\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s(\"code\",[t._v(\"build-and-push-image\")]),s(\"OutboundLink\")],1),t._v(\" command to authenticate to our AWS account and push our image.\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-yaml extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-yaml\"}},[s(\"code\",[t._v(\"  \"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"build_and_push_image\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"<<\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token important\"}},[t._v(\"*defaults\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"steps\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"\\n      \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"-\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"attach_workspace\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"\\n          \"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"at\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" ~/repo\\n      \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"-\")]),t._v(\" setup_remote_docker\\n      \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"-\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"aws-ecr/build-and-push-image\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"\\n          \"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"account-url\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" AWS_ECR_ACCOUNT_URL_ENV_VAR_NAME\\n          \"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"aws-access-key-id\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" ACCESS_KEY_ID_ENV_VAR_NAME\\n          \"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"aws-secret-access-key\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" SECRET_ACCESS_KEY_ENV_VAR_NAME\\n          \"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"region\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" AWS_REGION_ENV_VAR_NAME\\n          \"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"repo\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" $\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"CIRCLE_PROJECT_REPONAME\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n          \"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"create-repo\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token boolean important\"}},[t._v(\"true\")]),t._v(\"\\n          \"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"checkout\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token boolean important\"}},[t._v(\"true\")]),t._v(\"\\n          \"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"dockerfile\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" Dockerfile\\n          \"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"path\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" ./submodules/goof/\\n          \"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"tag\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" $\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"CIRCLE_SHA1\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),s(\"p\",[t._v('{% hint style=\"info\" %}\\nBy setting '),s(\"code\",[t._v(\"create-repo\")]),t._v(\" to \"),s(\"code\",[t._v(\"true\")]),t._v(\" the orb will create the repo if it does not exist, but subsequent runs of the job will simply update the image to the existing repo.\\n{% endhint %}\")])])}),[],!1,null,null,null);a.default=n.exports}}]);","extractedComments":[]}