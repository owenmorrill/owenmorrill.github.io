{"remainingRequest":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/owenmorrill/Sites/vue-docs/docs/src/guide/partner-workshops/atlassian/devsecops-bitbucket-cloud/module-4/fix-pull-requests.md?vue&type=template&id=68f8c7ee&","dependencies":[{"path":"/Users/owenmorrill/Sites/vue-docs/docs/src/guide/partner-workshops/atlassian/devsecops-bitbucket-cloud/module-4/fix-pull-requests.md","mtime":1644439893006},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js","mtime":1647884535821},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1647884535666},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js","mtime":1647884535821},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/index.js","mtime":1647884534539},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/@vuepress/markdown-loader/index.js","mtime":1647884535441}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHsKICB2YXIgX3ZtID0gdGhpcwogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogIHJldHVybiBfYygKICAgICJDb250ZW50U2xvdHNEaXN0cmlidXRvciIsCiAgICB7IGF0dHJzOiB7ICJzbG90LWtleSI6IF92bS4kcGFyZW50LnNsb3RLZXkgfSB9LAogICAgWwogICAgICBfYygiaDEiLCB7IGF0dHJzOiB7IGlkOiAiZml4LXB1bGwtcmVxdWVzdHMiIH0gfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgewogICAgICAgICAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgICAgICAgICBhdHRyczogeyBocmVmOiAiI2ZpeC1wdWxsLXJlcXVlc3RzIiB9LAogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIEZpeCBQdWxsIFJlcXVlc3RzIiksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KCJGcm9tIHRoZSBTbnlrIGFwcCwgd2Ugd2lsbCBnbyB0byB0aGUgIiksCiAgICAgICAgX2MoInN0cm9uZyIsIFtfdm0uX3YoIlByb2plY3RzIildKSwKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiIG1lbnUgd2hlcmUgd2UgY2FuIGV4cGFuZCBlYWNoIGludGVncmF0aW9uIGFuZCBoYXZlIGEgaG9saXN0aWMgdmlldyBvZiBvdXIgcHJvamVjdC4gSGVyZSB3ZSB3aWxsIHNlbGVjdCB0aGUgIgogICAgICAgICksCiAgICAgICAgX2MoImNvZGUiLCBbX3ZtLl92KCJwYWNrYWdlLmpzb24iKV0pLAogICAgICAgIF92bS5fdigiIHVuZGVyIG91ciBCaXRidWNrZXQgcmVwby4iKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgc3JjOiAiaHR0cHM6Ly9wYXJ0bmVyLXdvcmtzaG9wLWFzc2V0cy5zMy51cy1lYXN0LTIuYW1hem9uYXdzLmNvbS9zbnlrLXByb2plY3RzLTAxLnBuZyIsCiAgICAgICAgICAgIGFsdDogIiIsCiAgICAgICAgICB9LAogICAgICAgIH0pLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJXZSBhcmUgYWJsZSB0byB2aWV3IGFkZGl0aW9uYWwgY29udGV4dCBmb3IgZWFjaCBpZGVudGlmaWVkIHZ1bG5lcmFiaWxpdHkgaW4gdGhlIHJlcG9ydC4gV2UgYWxzbyBoYXZlIHRoZSBvcHRpb24gdG8gIgogICAgICAgICksCiAgICAgICAgX2MoInN0cm9uZyIsIFtfdm0uX3YoIk9wZW4gYSBmaXggUFIiKV0pLAogICAgICAgIF92bS5fdigiIGJ5IGNsaWNraW5nIG9uIHRoZSBidXR0b24uIExldCdzIGRvIHRoYXQhIiksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgIHNyYzogImh0dHBzOi8vcGFydG5lci13b3Jrc2hvcC1hc3NldHMuczMudXMtZWFzdC0yLmFtYXpvbmF3cy5jb20vc255ay1wci1maXgtMDEucG5nIiwKICAgICAgICAgICAgYWx0OiAiIiwKICAgICAgICAgIH0sCiAgICAgICAgfSksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIkEgc3VtbWFyeSBwYWdlIHdpbGwgYXBwZWFyIGxpc3RpbmcgZWFjaCBmaXggdGhhdCB3aWxsIGJlIGluY2x1ZGVkIGluIHlvdXIgcHVsbCByZXF1ZXN0LiIKICAgICAgICApLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICBhdHRyczogewogICAgICAgICAgICBzcmM6ICJodHRwczovL3BhcnRuZXItd29ya3Nob3AtYXNzZXRzLnMzLnVzLWVhc3QtMi5hbWF6b25hd3MuY29tL3NueWstcHItZml4LTAyLnBuZyIsCiAgICAgICAgICAgIGFsdDogIiIsCiAgICAgICAgICB9LAogICAgICAgIH0pLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJTY3JvbGwgZG93biB0byB0aGUgYm90dG9tIG9mIHRoZSBwYWdlIGFuZCBjb25maXJtIHRoZSBzZWxlY3Rpb24gYnkgY2xpY2tpbmcgdGhlICIKICAgICAgICApLAogICAgICAgIF9jKCJzdHJvbmciLCBbX3ZtLl92KCJPcGVuIGEgRml4IFBSIildKSwKICAgICAgICBfdm0uX3YoIiBidXR0b24gb25jZSBhZ2Fpbi4iKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgc3JjOiAiaHR0cHM6Ly9wYXJ0bmVyLXdvcmtzaG9wLWFzc2V0cy5zMy51cy1lYXN0LTIuYW1hem9uYXdzLmNvbS9zbnlrLXByLWZpeC0wMy5wbmciLAogICAgICAgICAgICBhbHQ6ICIiLAogICAgICAgICAgfSwKICAgICAgICB9KSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiU2l0IGJhY2sgYW5kIHJlbGF4Li4uIFNueWsgaXMgZml4aW5nIHlvdXIgb3BlbiBzb3VyY2UgZGVwZW5kZW5jeSB2dWxuZXJhYmlsaXRpZXMgYW5kIG1ha2luZyB5b3UgZmVlbCBtb3JlICIKICAgICAgICApLAogICAgICAgIF9jKCJlbSIsIFtfdm0uX3YoInNlY3VyZSIpXSksCiAgICAgICAgX3ZtLl92KCIuICIpLAogICAgICAgIF9jKCJzdHJvbmciLCBbX3ZtLl92KCLwn5iJIildKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgc3JjOiAiaHR0cHM6Ly9wYXJ0bmVyLXdvcmtzaG9wLWFzc2V0cy5zMy51cy1lYXN0LTIuYW1hem9uYXdzLmNvbS9zbnlrLXByLWZpeC0wNC5wbmciLAogICAgICAgICAgICBhbHQ6ICIiLAogICAgICAgICAgfSwKICAgICAgICB9KSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiT25jZSBjb21wbGV0ZSwgeW91IHdpbGwgYmUgcmVkaXJlY3RlZCB0byB5b3VyIEJpdGJ1Y2tldCByZXBvIHdoZXJlIHlvdSBjYW4gIgogICAgICAgICksCiAgICAgICAgX2MoInN0cm9uZyIsIFtfdm0uX3YoIkFwcHJvdmUiKV0pLAogICAgICAgIF92bS5fdigiIGFuZCAiKSwKICAgICAgICBfYygic3Ryb25nIiwgW192bS5fdigiTWVyZ2UiKV0pLAogICAgICAgIF92bS5fdigiIHlvdXIgIiksCiAgICAgICAgX2MoInN0cm9uZyIsIFtfdm0uX3YoInB1bGwgcmVxdWVzdCIpXSksCiAgICAgICAgX3ZtLl92KCIuIiksCiAgICAgIF0pLAogICAgXQogICkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gW10KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}