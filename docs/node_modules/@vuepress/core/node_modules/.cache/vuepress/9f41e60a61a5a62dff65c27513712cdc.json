{"remainingRequest":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/owenmorrill/Sites/vue-docs/docs/src/guide/features/integrations/ide-tools/snyk-ide-plugins/overview.md?vue&type=template&id=26509d03&","dependencies":[{"path":"/Users/owenmorrill/Sites/vue-docs/docs/src/guide/features/integrations/ide-tools/snyk-ide-plugins/overview.md","mtime":1646940842976},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js","mtime":1647884535821},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1647884535666},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js","mtime":1647884535821},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/index.js","mtime":1647884534539},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/@vuepress/markdown-loader/index.js","mtime":1647884535441}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHsKICB2YXIgX3ZtID0gdGhpcwogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogIHJldHVybiBfYygKICAgICJDb250ZW50U2xvdHNEaXN0cmlidXRvciIsCiAgICB7IGF0dHJzOiB7ICJzbG90LWtleSI6IF92bS4kcGFyZW50LnNsb3RLZXkgfSB9LAogICAgWwogICAgICBfYygiaDEiLCB7IGF0dHJzOiB7IGlkOiAib3ZlcnZpZXciIH0gfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgeyBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLCBhdHRyczogeyBocmVmOiAiI292ZXJ2aWV3IiB9IH0sCiAgICAgICAgICBbX3ZtLl92KCIjIildCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIiBPdmVydmlldyIpLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJGb3IgdGhlIHB1cnBvc2Ugb2YgZXh0cmFjdGluZyBTbnlrIHNjYW4gcmVzdWx0cyBhbmQgbWFraW5nIHRoZW0gYXZhaWxhYmxlIGluIHlvdXIgSURFIHBsdWdpbiwgd2Ugd2lsbCBtYWtlIHVzZSBvZiB0aGUgU255ayBDTEkgd2hpY2ggdGhlIElERSBwbHVnaW4gc2hvdWxkIGRvd25sb2FkIGluIHRoZSBiYWNrZ3JvdW5kIGFuZCBwZXJpb2RpY2FsbHkgY2hlY2sgZm9yIG5ld2VyIHZlcnNpb25zIGFuZCBkb3dubG9hZCB0aG9zZSB3aGVuIGF2YWlsYWJsZS4iCiAgICAgICAgKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiU255aydzIFNESyBtYWtlcyBpdCBlYXNpZXIgdG8gaW1wbGVtZW50IGFuZCBkb3dubG9hZCBwZXJpb2RpYyB1cGRhdGVzLiBXaGlsZSB0aGlzIGludGVncmF0aW9uIGlzIHVuZGVyIGRldmVsb3BtZW50LCBvdXIgIgogICAgICAgICksCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7CiAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgaHJlZjogImh0dHBzOi8vZ2l0aHViLmNvbS9qZW5raW5zY2kvc255ay1zZWN1cml0eS1zY2FubmVyLXBsdWdpbi9ibG9iL21hc3Rlci9zcmMvbWFpbi9qYXZhL2lvL3NueWsvamVua2lucy90b29scy9pbnRlcm5hbC9Eb3dubG9hZFNlcnZpY2UuamF2YSIsCiAgICAgICAgICAgICAgdGFyZ2V0OiAiX2JsYW5rIiwKICAgICAgICAgICAgICByZWw6ICJub29wZW5lciBub3JlZmVycmVyIiwKICAgICAgICAgICAgfSwKICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl92KCJKYXZhIGltcGxlbWVudGF0aW9uIiksIF9jKCJPdXRib3VuZExpbmsiKV0sCiAgICAgICAgICAxCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIiBpcyBhdmFpbGFibGUuIiksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgJ3slIGhpbnQgc3R5bGU9ImluZm8iICV9XG5Zb3Ugc2hvdWxkIGRvd25sb2FkIHRoZSBTbnlrIENMSSBmb3IgdGhlIElERSB1c2FnZSBpcnJlc3BlY3RpdmUgb2Ygd2hldGhlciB0aGUgZGV2ZWxvcGVyIGhhcyBzbnlrIENMSSBpbnN0YWxsZWQgb24gdGhlaXIgbWFjaGluZSBhcyB3ZWxsLlxueyUgZW5kaGludCAlfScKICAgICAgICApLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJOZXh0LCB3ZSBuZWVkIHRvIG1ha2Ugc3VyZSB0aGUgdXNlciBpcyBhdXRoZW50aWNhdGVkIGludG8gdGhlaXIgc255ayBhY2NvdW50LCBhbmQgaWYgbm90IHJ1biAiCiAgICAgICAgKSwKICAgICAgICBfYygiY29kZSIsIFtfdm0uX3YoInNueWsgYXV0aCIpXSksCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIiB3aGljaCB3aWxsIHRha2UgdGhlIHVzZXIgdGhyb3VnaCBhIHNpZ251cC9sb2dpbiBleHBlcmllbmNlIGFuZCB3aWxsIHN0b3JlIHRoZWlyIFNueWsgdG9rZW4gbG9jYWxseSBvbiB0aGUgbWFjaGluZS4iCiAgICAgICAgKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoIkZvciB0aGUgcHVycG9zZSBvZiBzY2FubmluZywgd2UgbGV2ZXJhZ2UgdGhlIFNueWsgQ0xJJ3MgIiksCiAgICAgICAgX2MoImNvZGUiLCBbX3ZtLl92KCJ0ZXN0IildKSwKICAgICAgICBfdm0uX3YoIiBjb21tYW5kIHdpdGggaXRzICIpLAogICAgICAgIF9jKCJjb2RlIiwgW192bS5fdigiLS1qc29uIildKSwKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiIGZsYWcgdG8gY29udmVydCB0aGUgb3V0cHV0IGludG8gbWFjaGluZS1yZWFkYWJsZSBmb3JtYXQuIEluIHNob3J0LCBmb3IgZXZlcnkgc3VwcG9ydGVkIGRlcGVuZGVuY3kgbWFuaWZlc3QgZmlsZSBpbiBhIHByb2plY3QgeW91IG5lZWQgdG8gcnVuICIKICAgICAgICApLAogICAgICAgIF9jKCJjb2RlIiwgW192bS5fdigic255ayB0ZXN0IC0tZmlsZT08bWFuaWZlc3QgZmlsZSBuYW1lPiAtLWpzb24iKV0pLAogICAgICAgIF92bS5fdigKICAgICAgICAgICIgLCBwYXJzZSB0aGUgcmVzdWx0cyBhbmQgZGlzcGxheSB0aGVtIGluIHRoZSBpbnRlbmRlZCBwbGFjZXMgaW5zaWRlIHRoZSBJREUgdXNlciBpbnRlcmZhY2UuIgogICAgICAgICksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIlJlcnVuIHRoZSBzbnlrIHNjYW4gcGVyaW9kaWNhbGx5IG9yIHdoZW4gYSB0cmlnZ2VyaW5nIGV2ZW50IGhhcHBlbnMgKHNlZSAiCiAgICAgICAgKSwKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICBocmVmOiAiaHR0cHM6Ly93d3cubm90aW9uLnNvL3NueWsvSG93LXRvLUJ1aWxkLWFuLUlERS1wbHVnaW4tdGhhdC1pbmNvcnBvcmF0ZXMtU255ay1zY2FubmluZy02YWEyYzBhOTI5MWU0MDViYjhiMjY0MzEwMzlmYzIxYyM2MDdiMmNkODJmYjU0OWVlODQ3MzMxOWE0MmI4YzQyMSIsCiAgICAgICAgICAgICAgdGFyZ2V0OiAiX2JsYW5rIiwKICAgICAgICAgICAgICByZWw6ICJub29wZW5lciBub3JlZmVycmVyIiwKICAgICAgICAgICAgfSwKICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl92KCJXaGVuIHRvIHJlcnVuIiksIF9jKCJPdXRib3VuZExpbmsiKV0sCiAgICAgICAgICAxCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIiBhIHNueWsgc2NhbiBiZWxvdykuIiksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbX3ZtLl92KCJXZSBjYW4gc3VtbWFyaXplIHRoZSBzdGVwcyBhcyBmb2xsb3dzOiIpXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygib2wiLCBbCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAiQ2hlY2sgZm9yIHRoZSBleGlzdGVuY2Ugb2YgdGhlIFNueWsgQ0xJLCBvciBwcm9tcHQgdGhlIHVzZXIgdG8gaW5zdGFsbCBpdCAob25lIHRpbWUpLiIKICAgICAgICAgICksCiAgICAgICAgXSksCiAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX3ZtLl92KCJDaGVjayBpZiB0aGUgdXNlciBpcyBhdXRoZW50aWNhdGVkIHRvIHRoZSBDTEkgYW5kIHJ1biAiKSwKICAgICAgICAgIF9jKCJjb2RlIiwgW192bS5fdigic255ayBhdXRoIildKSwKICAgICAgICAgIF92bS5fdigiIGlmIG5vdCAob25lIHRpbWUpLiIpLAogICAgICAgIF0pLAogICAgICAgIF92bS5fdigiICIpLAogICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgIF92bS5fdigiU2NhbiBldmVyeSBtYW5pZmVzdCBmaWxlIHVzaW5nICIpLAogICAgICAgICAgX2MoImNvZGUiLCBbX3ZtLl92KCJzbnlrIHRlc3QgLS1maWxlPTxtYW5pZmVzdCBmaWxlIG5hbWU+IC0tanNvbiIpXSksCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICIgcGFyc2luZyB0aGUgb3V0cHV0IGFuZCBpbmNvcnBvcmF0ZWQgaXQgaW50byB0aGUgSURFIHVzZXIgaW50ZXJmYWNlLiIKICAgICAgICAgICksCiAgICAgICAgXSksCiAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAiUmVydW4gYSBzY2FuIHBlcmlvZGljYWxseSBvciB3aGVuIGEgdHJpZ2dlcmluZyBldmVudCBoYXBwZW5zLiIKICAgICAgICAgICksCiAgICAgICAgXSksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgyIiwgeyBhdHRyczogeyBpZDogImF1dGhlbnRpY2F0aW5nLXRoZS11c2VyLXRvLXNueWsiIH0gfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgewogICAgICAgICAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgICAgICAgICBhdHRyczogeyBocmVmOiAiI2F1dGhlbnRpY2F0aW5nLXRoZS11c2VyLXRvLXNueWsiIH0sCiAgICAgICAgICB9LAogICAgICAgICAgW192bS5fdigiIyIpXQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCIgQXV0aGVudGljYXRpbmcgdGhlIHVzZXIgdG8gU255ayAiKSwKICAgICAgICBfYygiYSIsIHsKICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgIGhyZWY6ICIjNjY4OWM5MzktMGJmZi00ZDMwLTk0ODAtYjYyMTc5ODg5ZTM3IiwKICAgICAgICAgICAgaWQ6ICI2Njg5YzkzOS0wYmZmLTRkMzAtOTQ4MC1iNjIxNzk4ODllMzciLAogICAgICAgICAgfSwKICAgICAgICB9KSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiSW4gb3JkZXIgdG8gcnVuIHRoZSBzZWN1cml0eSBzY2FucyB1c2luZyB0aGUgU255ayBDTEksIHRoZSB1c2VyIHdpbGwgbmVlZCB0byBhdXRoZW50aWNhdGUgdG8gU255ayBmaXJzdC4gVG8gY2hlY2sgd2hldGhlciB0aGUgdXNlciBpcyBwcmV2aW91c2x5IGF1dGhlbnRpY2F0ZWQgb24gdGhpcyBtYWNoaW5lLCB5b3UgY2FuIHJ1biAiCiAgICAgICAgKSwKICAgICAgICBfYygiY29kZSIsIFtfdm0uX3YoInNueWsgY29uZmlnIGdldCBhcGkiKV0pLAogICAgICAgIF92bS5fdigiIGFuZCBjaGVjayBmb3IgYSByZXR1cm4gb2YgYSBVVUlELiIpLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigiSWYgdGhlIHVzZXIgaXMgbm90IGF1dGhlbnRpY2F0ZWQgcnVuIHRoZSAiKSwKICAgICAgICBfYygiY29kZSIsIFtfdm0uX3YoInNueWsgYXV0aCIpXSksCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIiBjb21tYW5kIHdoaWNoIHdpbGwgdGFrZSB0aGUgdXNlciB0aHJvdWdoIGEgc2lnbnVwL2xvZ2luIGV4cGVyaWVuY2UgYW5kIHdpbGwgc3RvcmUgdGhlaXIgU255ayB0b2tlbiBsb2NhbGx5IG9uIHRoZSBtYWNoaW5lLiIKICAgICAgICApLAogICAgICBdKSwKICAgIF0KICApCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}