{"remainingRequest":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/owenmorrill/Sites/vue-docs/docs/src/snyk/features/integrations/ci-cd-integrations/README.md?vue&type=template&id=2c474db4&","dependencies":[{"path":"/Users/owenmorrill/Sites/vue-docs/docs/src/snyk/features/integrations/ci-cd-integrations/README.md","mtime":1647961059208},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js","mtime":1647884535821},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1647884535666},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js","mtime":1647884535821},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/index.js","mtime":1647884534539},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/@vuepress/markdown-loader/index.js","mtime":1647884535441}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ0NvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yJyx7YXR0cnM6eyJzbG90LWtleSI6X3ZtLiRwYXJlbnQuc2xvdEtleX19LFtfYygnaDEnLHthdHRyczp7ImlkIjoic255ay1jaS1jZC1pbnRlZ3JhdGlvbiJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI3NueWstY2ktY2QtaW50ZWdyYXRpb24ifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgU255ayBDSS9DRCBJbnRlZ3JhdGlvbiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoInslIGhpbnQgc3R5bGU9XCJpbmZvXCIgJX1cbkFsbCB0aGVzZSBtZXRob2RzIHByb3ZpZGUgdGhlIHNhbWUgcmVzdWx0cywgYXMgdGhleSBhbGwgcmVseSBvbiB0aGUgc2FtZSBTbnlrIGVuZ2luZS4gVGh1cyB0aGUgc2FtZSBhcmd1bWVudHMgb3Igb3B0aW9ucyBhcHBseSByZWdhcmRsZXNzIG9mIHRoZSBkZXBsb3ltZW50IG1ldGhvZCB5b3Ugc2VsZWN0LlxueyUgZW5kaGludCAlfSIpXSksX3ZtLl92KCIgIiksX2MoJ2gzJyx7YXR0cnM6eyJpZCI6ImNpLWNkLWRlcGxveW1lbnQtbWV0aG9kcyJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI2NpLWNkLWRlcGxveW1lbnQtbWV0aG9kcyJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiBDSS9DRCBkZXBsb3ltZW50IG1ldGhvZHMiKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJUaGVyZSBhcmUgdmFyaW91cyB3YXlzIHRvIGNvbmZpZ3VyZSBTbnlrIHdpdGhpbiB5b3VyIHBpcGVsaW5lLiBDaG9vc2UgYSBtZXRob2QgZGVwZW5kaW5nIG9uIHlvdXIgZW52aXJvbm1lbnQgYW5kIHByZWZlcmVuY2UuIFlvdSBjYW4gZXhwZWN0IGFsbCBtZXRob2RzIHRvIGxlYWQgdG8gYSBzdWNjZXNzZnVsIHJ1bi4iKV0pLF92bS5fdigiICIpLF9jKCdoNCcse2F0dHJzOnsiaWQiOiJ1c2Utc255ay1uYXRpdmUtcGx1Z2lucyJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI3VzZS1zbnlrLW5hdGl2ZS1wbHVnaW5zIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiICIpLF9jKCdzdHJvbmcnLFtfdm0uX3YoIlVzZSBTbnlrIG5hdGl2ZSBwbHVnaW5zIildKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJTbnlrIG5hdGl2ZSBwbHVnaW5zIGFyZSBhdmFpbGFibGUgZm9yIG1vc3QgY29tbW9uIENJL0NEIHRvb2xzLiBVc2luZyB0aGVzZSBwbHVnaW5zIGlzIHRoZSBlYXNpZXN0IHdheSB0byBzZXQgdXAgYW5kIGdldCBzdGFydGVkLiBUaGUgcGx1Z2lucyBpbmNsdWRlIHRoZSBtb3N0IGNvbW1vbiBwYXJhbWV0ZXJzIGFuZCBvcHRpb25zIGluIHRoZSB1c2VyIGludGVyZmFjZSAoVUkpLiIpXSksX3ZtLl92KCIgIiksX2MoJ2g0Jyx7YXR0cnM6eyJpZCI6ImRlcGxveS1zbnlrLWNsaS11c2luZy10aGUtbnBtLW1ldGhvZCJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI2RlcGxveS1zbnlrLWNsaS11c2luZy10aGUtbnBtLW1ldGhvZCJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiAiKSxfYygnc3Ryb25nJyxbX3ZtLl92KCJEZXBsb3kgU255ayBDTEkgdXNpbmcgdGhlIG5wbSBtZXRob2QiKV0pXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkZvbGxvdyBzaW1pbGFyIHN0ZXBzIGFzIHRob3NlIGZvciBpbnN0YWxsaW5nIHRoZSBDTEkgbG9jYWxseS4gWW91IG11c3QgYmUgYWJsZSB0byBydW4gYW4gbnBtIGNvbW1hbmQgaW4gdGhlIHBpcGVsaW5lIHNjcmlwdC4gVGhpcyBtZXRob2QgaGFzIHRoZSBhZHZhbnRhZ2Ugb2YgY29tcGxldGVseSBhbGlnbmluZyB3aXRoIHRoZSBDTEkgZXhwZXJpZW5jZSBzbyB5b3UgY2FuIGVhc2lseSB0cm91Ymxlc2hvb3QgYW5kIGNvbmZpZ3VyZS4iKV0pLF92bS5fdigiICIpLF9jKCdoNCcse2F0dHJzOnsiaWQiOiJkZXBsb3ktc255ay1jbGktYmluYXJ5LXZlcnNpb24ifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNkZXBsb3ktc255ay1jbGktYmluYXJ5LXZlcnNpb24ifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgIiksX2MoJ3N0cm9uZycsW192bS5fdigiRGVwbG95IFNueWsgQ0xJIGJpbmFyeSB2ZXJzaW9uIildKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJUaGUgYWR2YW50YWdlIG9mIHRoZSBiaW5hcnkgc2V0dXAgaXMgdGhhdCBpdCBoYXMgbm8gZGVwZW5kZW5jeSB3aXRoIHRoZSBsb2NhbCBlbnZpcm9ubWVudC4gRm9yIGV4YW1wbGUsIGl0IGlzIHVzZWZ1bCBpZiB5b3UgY2Fubm90IHJ1biBhbiBucG0gY29tbWFuZCBpbiB5b3VyIHBpcGVsaW5lLiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkNMSSBiaW5hcmllcyBhcmUgYXZhaWxhYmxlIGhlcmU6ICIpLF9jKCdhJyx7YXR0cnM6eyJocmVmIjoiaHR0cHM6Ly9naXRodWIuY29tL3NueWsvc255ay90YWdzIiwidGFyZ2V0IjoiX2JsYW5rIiwicmVsIjoibm9vcGVuZXIgbm9yZWZlcnJlciJ9fSxbX3ZtLl92KCJodHRwczovL2dpdGh1Yi5jb20vc255ay9zbnlrL3RhZ3MiKSxfYygnT3V0Ym91bmRMaW5rJyldLDEpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIlNueWsgaGFzIExpbnV4LCBXaW5kb3dzIGFuZCBvdGhlciB2ZXJzaW9ucy4iKV0pLF92bS5fdigiICIpLF9jKCdoNCcse2F0dHJzOnsiaWQiOiJkZXBsb3ktYS1zbnlrLWNvbnRhaW5lciJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI2RlcGxveS1hLXNueWstY29udGFpbmVyIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiICIpLF9jKCdzdHJvbmcnLFtfdm0uX3YoIkRlcGxveSBhIFNueWsgY29udGFpbmVyIildKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJZb3UgbWF5IGFsc28gZGVwbG95IFNueWsgaW4geW91ciBwaXBlbGluZSB1c2luZyBvbmUgb2YgdGhlIFNueWsgaW1hZ2VzIGluIERvY2tlcmh1YjogIiksX2MoJ2EnLHthdHRyczp7ImhyZWYiOiJodHRwczovL2h1Yi5kb2NrZXIuY29tL3Ivc255ay9zbnlrIiwidGFyZ2V0IjoiX2JsYW5rIiwicmVsIjoibm9vcGVuZXIgbm9yZWZlcnJlciJ9fSxbX3ZtLl92KCJodHRwczovL2h1Yi5kb2NrZXIuY29tL3Ivc255ay9zbnlrIiksX2MoJ091dGJvdW5kTGluaycpXSwxKV0pLF92bS5fdigiICIpLF9jKCdoNCcse2F0dHJzOnsiaWQiOiJleGFtcGxlcyJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI2V4YW1wbGVzIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIEV4YW1wbGVzIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiVGhpcyByZXBvIHNob3dzIHNvbWUgZXhhbXBsZXMgb2YgYmluYXJ5IGFuZCBucG0gaW50ZWdyYXRpb25zIGZvciB2YXJpb3VzIENJL0NEIHRvb2xzOiAiKSxfYygnYScse2F0dHJzOnsiaHJlZiI6Imh0dHBzOi8vZ2l0aHViLmNvbS9zbnlrLWxhYnMvc255ay1jaWNkLWludGVncmF0aW9uLWV4YW1wbGVzIiwidGFyZ2V0IjoiX2JsYW5rIiwicmVsIjoibm9vcGVuZXIgbm9yZWZlcnJlciJ9fSxbX3ZtLl92KCJDSS9DRCBleGFtcGxlcyIpLF9jKCdPdXRib3VuZExpbmsnKV0sMSldKSxfdm0uX3YoIiAiKSxfYygnaDMnLHthdHRyczp7ImlkIjoidHlwaWNhbC1zdGFnZXMtb2YtYWRvcHRpb24ifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiN0eXBpY2FsLXN0YWdlcy1vZi1hZG9wdGlvbiJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiBUeXBpY2FsIHN0YWdlcyBvZiBhZG9wdGlvbiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkRldmVsb3BlciB0ZWFtcyB0eXBpY2FsbHkgYWRvcHQgU255ayBpbiB0aGUgZm9sbG93aW5nIHN0YWdlczoiKV0pLF92bS5fdigiICIpLF9jKCdvbCcsW19jKCdsaScsW19jKCdSb3V0ZXJMaW5rJyx7YXR0cnM6eyJ0byI6Ii9zbnlrL2ZlYXR1cmVzL2ludGVncmF0aW9ucy9jaS1jZC1pbnRlZ3JhdGlvbnMvI3N0YWdlLTEtZXhwb3NlLXZ1bG5lcmFiaWxpdGllcy1zbnlrLW1vbml0b3IifX0sW192bS5fdigiRXhwb3NlIHZ1bG5lcmFiaWxpdGllcyIpXSksX3ZtLl92KCIgKCIpLF9jKCdjb2RlJyxbX3ZtLl92KCJzbnlrIG1vbml0b3IiKV0pLF92bS5fdigiKSIpXSwxKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfYygnUm91dGVyTGluaycse2F0dHJzOnsidG8iOiIvc255ay9mZWF0dXJlcy9pbnRlZ3JhdGlvbnMvY2ktY2QtaW50ZWdyYXRpb25zLyNzdGFnZS0yLXVzZS1zbnlrLWFzLWEtZ2F0ZWtlZXBlci1zbnlrLXRlc3QifX0sW192bS5fdigiVXNlIFNueWsgYXMgYSBnYXRla2VlcGVyIildKSxfdm0uX3YoIiAoIiksX2MoJ2NvZGUnLFtfdm0uX3YoInNueWsgdGVzdCIpXSksX3ZtLl92KCIpIildLDEpLF92bS5fdigiICIpLF9jKCdsaScsW19jKCdSb3V0ZXJMaW5rJyx7YXR0cnM6eyJ0byI6Ii9zbnlrL2ZlYXR1cmVzL2ludGVncmF0aW9ucy9jaS1jZC1pbnRlZ3JhdGlvbnMvI3N0YWdlLTMtY29udGludW91cy1tb25pdG9yaW5nLXNueWstdGVzdC1hbmQtc255ay1tb25pdG9yIn19LFtfdm0uX3YoIkNvbnRpbnVvdXMgbW9uaXRvcmluZyIpXSksX3ZtLl92KCIgKCIpLF9jKCdjb2RlJyxbX3ZtLl92KCJzbnlrIHRlc3QiKV0pLF92bS5fdigiIGFuZCAiKSxfYygnY29kZScsW192bS5fdigic255ayBtb25pdG9yIildKSxfdm0uX3YoIikiKV0sMSldKSxfdm0uX3YoIiAiKSxfYygnaDQnLHthdHRyczp7ImlkIjoic3RhZ2UtMS1leHBvc2UtdnVsbmVyYWJpbGl0aWVzLXNueWstbW9uaXRvciJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI3N0YWdlLTEtZXhwb3NlLXZ1bG5lcmFiaWxpdGllcy1zbnlrLW1vbml0b3IifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgIiksX2MoJ3N0cm9uZycsW192bS5fdigiU3RhZ2UgMTogRXhwb3NlIHZ1bG5lcmFiaWxpdGllcyAoc255ayBtb25pdG9yKSIpXSldKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiVGhpcyBpcyBhIHR5cGljYWwgaW5pdGlhbCBhcHByb2FjaCwgdXNpbmcgU255ayByZXN1bHRzIHRvIGV4cG9zZSB2dWxuZXJhYmlsaXRpZXMgZHVyaW5nIHRoZSBkZXZlbG9wbWVudCBwcm9jZXNzLCB3aGljaCBpbmNyZWFzZXMgdmlzaWJpbGl0eSBvZiB0aGVzZSB2dWxuZXJhYmlsaXRpZXMgYW1vbmcgbWVtYmVycyBvZiB5b3VyIHRlYW0uIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiV2hlbiB5b3UgZmlyc3QgaW1wbGVtZW50IFNueWsgaW4geW91ciBwaXBlbGluZSwgdXNpbmcgb25seSB0aGUgIiksX2MoJ2NvZGUnLFtfdm0uX3YoInNueWsgbW9uaXRvciIpXSksX3ZtLl92KCIgY29tbWFuZCBpcyByZWNvbW1lbmRlZC4gSWYgeW91IHVzZSBvbmUgb2YgdGhlIFNueWsgQ0kgcGx1Z2lucywgaXQgaXMgcmVjb21tZW5kZWQgdGhhdCB5b3UgY29uZmlndXJlIHRoZSBwbHVnaW4gdG8gIiksX2MoJ2VtJyxbX3ZtLl92KCJub3QiKV0pLF92bS5fdigiIGZhaWwgdGhlIGJ1aWxkLiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIlRoaXMgaXMgYmVjYXVzZSBhbGwgcHJvamVjdHMgYXJlIHZ1bG5lcmFibGUsIGFuZCBhZnRlciB5b3Ugc2V0IFNueWsgdG8gZmFpbCB0aGUgYnVpbGQsIGV2ZXJ5IGJ1aWxkIGZhaWxzIGJlY2F1c2Ugb2YgU255ay4gVGhpcyBtYXkgY2F1c2UgcHJvYmxlbXMgd2l0aCB5b3VyIHRlYW0gYmVpbmcgcXVpY2tseSBvdmVyd2hlbG1lZCB3aXRoIGZhaWx1cmUgbWVzc2FnZXMuIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiVXNpbmcgIiksX2MoJ2NvZGUnLFtfdm0uX3YoInNueWsgbW9uaXRvciIpXSksX3ZtLl92KCIgdG8gZXhwb3NlIHJlc3VsdHMgcHJvdmlkZXMgaW5mb3JtYXRpb24gd2l0aG91dCBkaXNydXB0aW5nIHByb2Nlc3Nlcy4iKV0pLF92bS5fdigiICIpLF9jKCdoNCcse2F0dHJzOnsiaWQiOiJzdGFnZS0yLXVzZS1zbnlrLWFzLWEtZ2F0ZWtlZXBlci1zbnlrLXRlc3QifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNzdGFnZS0yLXVzZS1zbnlrLWFzLWEtZ2F0ZWtlZXBlci1zbnlrLXRlc3QifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgIiksX2MoJ3N0cm9uZycsW192bS5fdigiU3RhZ2UgMjogVXNlIFNueWsgYXMgYSBnYXRla2VlcGVyIChzbnlrIHRlc3QpIildKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJVc2luZyBTbnlrIGFzIGEgZ2F0ZWtlZXBlciBwcmV2ZW50cyB0aGUgaW50cm9kdWN0aW9uIG9mIG5ldyB2dWxuZXJhYmlsaXRpZXMgKHNvbWV0aW1lcyBrbm93biBhcyBcInN0b3BwaW5nIHRoZSBibGVlZGluZ1wiKS4iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJBZnRlciB5b3VyIHRlYW1zIHVuZGVyc3RhbmQgdGhlIHZ1bG5lcmFiaWxpdGllcyBpbiB0aGVpciBhcHBsaWNhdGlvbnMsIGFuZCBkZXZlbG9wIGEgcHJvY2VzcyBmb3IgZml4aW5nIHRoZW0gZWFybHkgaW4gdGhlIGRldmVsb3BtZW50IGN5Y2xlLCB5b3UgY2FuIGNvbmZpZ3VyZSBTbnlrIHRvIGZhaWwgeW91ciBidWlsZHMsIHRvIHByZXZlbnQgaW50cm9kdWNpbmcgdnVsbmVyYWJpbGl0aWVzIGludG8geW91ciBhcHBsaWNhdGlvbnMuLiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkFkZCAiKSxfYygnY29kZScsW192bS5fdigic255ayB0ZXN0IildKSxfdm0uX3YoIiB0byB5b3VyIGJ1aWxkIG9yIGVuYWJsZSB0aGUgZmFpbCBmdW5jdGlvbmFsaXR5IHRvIG1ha2UgU255ayBmYWlsIHlvdXIgYnVpbGRzLCBwcm92aWRpbmcgdGhlIHJlc3VsdHMgb3V0cHV0IHRvIHRoZSBjb25zb2xlLiBZb3VyIERldnMgb3IgRGV2T3BzIHRlYW1zIGNhbiB1c2UgdGhlIHJlc3VsdHMgdG8gZGVjaWRlIHdoZXRoZXIgdG8gc3RvcCBvciBjb250aW51ZSB0aGUgYnVpbGQuIildKSxfdm0uX3YoIiAiKSxfYygnaDQnLHthdHRyczp7ImlkIjoic3RhZ2UtMy1jb250aW51b3VzLW1vbml0b3Jpbmctc255ay10ZXN0LWFuZC1zbnlrLW1vbml0b3IifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNzdGFnZS0zLWNvbnRpbnVvdXMtbW9uaXRvcmluZy1zbnlrLXRlc3QtYW5kLXNueWstbW9uaXRvciJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiAiKSxfYygnc3Ryb25nJyxbX3ZtLl92KCJTdGFnZSAzOiBDb250aW51b3VzIG1vbml0b3JpbmcgKHNueWsgdGVzdCIpXSksX3ZtLl92KCIgYW5kICIpLF9jKCdzdHJvbmcnLFtfdm0uX3YoIlNueWsgbW9uaXRvcikiKV0pXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkFmdGVyIHlvdSBjb25maWd1cmUgU255ayB0byBmYWlsIHRoZSBidWlsZCB3aGVuIHZ1bG5lcmFiaWxpdGllcyBhcmUgZGV0ZWN0ZWQsIHlvdSBjYW4gY29uZmlndXJlIFNueWsgdG8gc2VuZCBhIHNuYXBzaG90IG9mIHlvdXIgcHJvamVjdCdzIHN1Y2Nlc3NmdWwgYnVpbGRzIHRvIFNueWsgZm9yIG9uZ29pbmcgbW9uaXRvcmluZy4iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJUbyBkbyB0aGlzLCBjb25maWd1cmUgeW91ciBwaXBlbGluZSB0byBydW4gIiksX2MoJ2NvZGUnLFtfdm0uX3YoInNueWsgbW9uaXRvciIpXSksX3ZtLl92KCIgaWYgeW91ciAiKSxfYygnY29kZScsW192bS5fdigic255ayB0ZXN0IildKSxfdm0uX3YoIiByZXR1cm5zIGEgc3VjY2Vzc2Z1bCBleGl0IGNvZGUuIildKSxfdm0uX3YoIiAiKSxfYygnaDMnLHthdHRyczp7ImlkIjoidGVjaG5pY2FsLWltcGxlbWVudGF0aW9uIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjdGVjaG5pY2FsLWltcGxlbWVudGF0aW9uIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiICIpLF9jKCdzdHJvbmcnLFtfdm0uX3YoIlRlY2huaWNhbCBpbXBsZW1lbnRhdGlvbiIpXSldKSxfdm0uX3YoIiAiKSxfYygnaDQnLHthdHRyczp7ImlkIjoicHJlcmVxdWlzaXRlcyJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI3ByZXJlcXVpc2l0ZXMifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgUHJlcmVxdWlzaXRlcyIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIlRvIGNvbmZpZ3VyZSBTbnlrIHRvIHJ1biBpbiBhIHBpcGVsaW5lLCByZXRyaWV2ZSBrZXkgY29uZmlndXJhdGlvbiBpbnB1dHMgZnJvbSB5b3VyIFNueWsgYWNjb3VudC4iKV0pLF92bS5fdigiICIpLF9jKCdoNCcse2F0dHJzOnsiaWQiOiJkZWZpbmUtdGFyZ2V0LW9yZ2FuaXphdGlvbiJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI2RlZmluZS10YXJnZXQtb3JnYW5pemF0aW9uIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIERlZmluZSB0YXJnZXQgb3JnYW5pemF0aW9uIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiV2hlbiB5b3UgcnVuIFNueWsgaW4geW91ciBDSS9DRCBwbGF0Zm9ybSwgeW91IHR5cGljYWxseSB3YW50IHRvIHBvc3QgdGhlIHRlc3QgcmVzdWx0cyB0byBTbnlrIGZvciByZXZpZXcgYW5kIG9uZ29pbmcgbW9uaXRvcmluZy4iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJZb3UgY2FuIGRlZmluZSB0aGUgdGFyZ2V0IG9yZ2FuaXphdGlvbiBpbiB0aGUgU255ayBDTEksIGJ5IGVpdGhlciBVUkwgc2x1ZyBvciBvcmdhbml6YXRpb24gSUQsIHVzaW5nIHRoZSAiKSxfYygnY29kZScsW192bS5fdigiLS1vcmciKV0pLF92bS5fdigiIENMSSBvcHRpb246IildKSxfdm0uX3YoIiAiKSxfYygndWwnLFtfYygnbGknLFtfdm0uX3YoIllvdSBjYW4gZGVmaW5lIHRoZSB0YXJnZXQgb3JnYW5pemF0aW9uIHVzaW5nIGl0cyBVUkwgc2x1ZywgYXMgZGlzcGxheWVkIGluIHRoZSBhZGRyZXNzIGJhciBvZiB0aGUgYnJvd3NlciBpbiB0aGUgU255ayBVSS4iKV0pLF92bS5fdigiICIpLF9jKCdsaScsW192bS5fdigiQWx0ZXJuYXRpdmVseSB5b3UgY2FuIGRlZmluZSB0aGUgdGFyZ2V0IG9yZ2FuaXphdGlvbiB1c2luZyBpdHMgIiksX2MoJ2NvZGUnLFtfdm0uX3YoIm9yZyBpZCIpXSksX3ZtLl92KCIgaW4gdGhlIG9yZ2FuaXphdGlvbidzIHNldHRpbmdzIHBhZ2UuIildKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX2MoJ2ltZycse2F0dHJzOnsic3JjIjoiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3NueWsvdXNlci1kb2NzL21haW4vZG9jcy8uZ2l0Ym9vay9hc3NldHMvaW1hZ2UxLnBuZyIsImFsdCI6IiJ9fSldKSxfdm0uX3YoIiAiKSxfYygnaDQnLHthdHRyczp7ImlkIjoiZGVmYXVsdC1vcmdhbml6YXRpb24ifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNkZWZhdWx0LW9yZ2FuaXphdGlvbiJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiAiKSxfYygnc3Ryb25nJyxbX3ZtLl92KCJEZWZhdWx0IG9yZ2FuaXphdGlvbiIpXSldKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiSWYgeW91IGRvIG5vdCBkZWZpbmUgYSB0YXJnZXQgb3JnYW5pemF0aW9uLCBTbnlrIHVzZXMgdGhlIGRlZmF1bHQgb3JnYW5pemF0aW9uIGZvciB0aGUgYXV0aGVudGljYXRpb24gdG9rZW4geW91IHVzZToiKV0pLF92bS5fdigiICIpLF9jKCd1bCcsW19jKCdsaScsW192bS5fdigiRm9yIHVzZXIgYWNjb3VudHMsIHRoaXMgaXMgdGhlIHVzZXIncyBwcmVmZXJyZWQgb3JnYW5pemF0aW9uIChjb25maWd1cmFibGUgaW4gdGhlIHVzZXIncyBzZXR0aW5ncykuIildKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfdm0uX3YoIkZvciBvcmdhbml6YXRpb24gc2VydmljZSBhY2NvdW50cywgdGhpcyBpcyB0aGUgb3JnYW5pemF0aW9uIGluIHdoaWNoIHRoZSBhY2NvdW50IHdhcyBjcmVhdGVkLiIpXSldKSxfdm0uX3YoIiAiKSxfYygnaDMnLHthdHRyczp7ImlkIjoic255ay1hdXRoZW50aWNhdGlvbi10b2tlbiJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI3NueWstYXV0aGVudGljYXRpb24tdG9rZW4ifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgU255ayBhdXRoZW50aWNhdGlvbiB0b2tlbiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIlRvIHJ1biAiKSxfYygnY29kZScsW192bS5fdigic255ayB0ZXN0IildKSxfdm0uX3YoIiwgeW91IG5lZWQgYW4gYXV0aGVudGljYXRpb24gdG9rZW4gd2l0aCBhY2Nlc3MgdG8gdGhlIHRhcmdldCBvcmdhbml6YXRpb24gLiBXaGlsZSB5b3UgY2FuIHVzZSBhbnkgdmFsaWQgYXV0aGVudGljYXRpb24gdG9rZW4sIHVzaW5nIGEgc2VydmljZSBhY2NvdW50IGlzIHJlY29tbWVuZGVkLiBGb3IgbW9yZSBkZXRhaWxzLCBzZWUgIiksX2MoJ2EnLHthdHRyczp7ImhyZWYiOiJodHRwczovL2RvY3Muc255ay5pby9pbnRlZ3JhdGlvbnMvbWFuYWdpbmctaW50ZWdyYXRpb25zL3NlcnZpY2UtYWNjb3VudHMiLCJ0YXJnZXQiOiJfYmxhbmsiLCJyZWwiOiJub29wZW5lciBub3JlZmVycmVyIn19LFtfdm0uX3YoIlNlcnZpY2UgYWNjb3VudHMiKSxfYygnT3V0Ym91bmRMaW5rJyldLDEpLF92bS5fdigiLiIpXSksX3ZtLl92KCIgIiksX2MoJ2gzJyx7YXR0cnM6eyJpZCI6InNldHRpbmctdXAifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNzZXR0aW5nLXVwIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIFNldHRpbmcgdXAiKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJTbnlrIHN1cHBvcnRzIHRoZSBmb2xsb3dpbmcgYXBwcm9hY2hlcyB0byBhZGQgdGVzdHMgdG8gYSBidWlsZCBwaXBlbGluZToiKV0pLF92bS5fdigiICIpLF9jKCd1bCcsW19jKCdsaScsW19jKCdzdHJvbmcnLFtfdm0uX3YoIlNueWsgaW50ZWdyYXRpb24gcGx1Z2lucyIpXSksX3ZtLl92KCI6IFNueWsgcHJvdmlkZXMgcHJlLWJ1aWx0IHBsdWdpbnMgZm9yIHNldmVyYWwgQ0kgc2VydmVycywgaW5jbHVkaW5nICIpLF9jKCdhJyx7YXR0cnM6eyJocmVmIjoiaHR0cHM6Ly9kb2NzLnNueWsuaW8vaW50ZWdyYXRpb25zL2NpLWNkLWludGVncmF0aW9ucy9qZW5raW5zLWludGVncmF0aW9uLW92ZXJ2aWV3IiwidGFyZ2V0IjoiX2JsYW5rIiwicmVsIjoibm9vcGVuZXIgbm9yZWZlcnJlciJ9fSxbX3ZtLl92KCJKZW5raW5zIiksX2MoJ091dGJvdW5kTGluaycpXSwxKSxfdm0uX3YoIiwgIiksX2MoJ2EnLHthdHRyczp7ImhyZWYiOiJodHRwczovL2RvY3Muc255ay5pby9pbnRlZ3JhdGlvbnMvY2ktY2QtaW50ZWdyYXRpb25zL3RlYW1jaXR5LWludGVncmF0aW9uLW92ZXJ2aWV3IiwidGFyZ2V0IjoiX2JsYW5rIiwicmVsIjoibm9vcGVuZXIgbm9yZWZlcnJlciJ9fSxbX3ZtLl92KCJUZWFtIENpdHkiKSxfYygnT3V0Ym91bmRMaW5rJyldLDEpLF9jKCdhJyx7YXR0cnM6eyJocmVmIjoiaHR0cHM6Ly9kb2NzLnNueWsuaW8vaW50ZWdyYXRpb25zL2NpLWNkLWludGVncmF0aW9ucy9iaXRidWNrZXQtcGlwZWxpbmVzLWludGVncmF0aW9uLW92ZXJ2aWV3IiwidGFyZ2V0IjoiX2JsYW5rIiwicmVsIjoibm9vcGVuZXIgbm9yZWZlcnJlciJ9fSxbX3ZtLl92KCIsIEJpdGJ1Y2tldCBQaXBlbGluZXMiKSxfYygnT3V0Ym91bmRMaW5rJyldLDEpLF92bS5fdigiIGFuZCAiKSxfYygnYScse2F0dHJzOnsiaHJlZiI6Imh0dHBzOi8vZG9jcy5zbnlrLmlvL2ludGVncmF0aW9ucy9jaS1jZC1pbnRlZ3JhdGlvbnMvYXp1cmUtcGlwZWxpbmVzLWludGVncmF0aW9uIiwidGFyZ2V0IjoiX2JsYW5rIiwicmVsIjoibm9vcGVuZXIgbm9yZWZlcnJlciJ9fSxbX3ZtLl92KCJBenVyZSBQaXBlbGluZXMuICIpLF9jKCdPdXRib3VuZExpbmsnKV0sMSksX3ZtLl92KCJTZWUgdGhlICIpLF9jKCdhJyx7YXR0cnM6eyJocmVmIjoiaHR0cHM6Ly9kb2NzLnNueWsuaW8vaW50ZWdyYXRpb25zL2NpLWNkLWludGVncmF0aW9ucyIsInRhcmdldCI6Il9ibGFuayIsInJlbCI6Im5vb3BlbmVyIG5vcmVmZXJyZXIifX0sW192bS5fdigiQ29udGludW91cyBJbnRlZ3JhdGlvbiIpLF9jKCdPdXRib3VuZExpbmsnKV0sMSksX3ZtLl92KCIgZG9jdW1lbnRhdGlvbiBmb3IgbW9yZSBkZXRhaWxzIildKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfYygnc3Ryb25nJyxbX3ZtLl92KCJTbnlrIENMSToiKV0pLF92bS5fdigiIFRlYW1zIHdpdGggbW9yZSBjb21wbGV4IHdvcmtmbG93cywgb3IgdXNpbmcgYSBidWlsZCBzeXN0ZW0gd2l0aG91dCBhIFNueWsgcHJlLWJ1aWx0IHBsdWdpbiwgY2FuIHVzZSB0aGUgU255ayBDTEkgdG9vbCBkdXJpbmcgQ0kvQ0Qgc2V0dXBzLiBTZWUgIiksX2MoJ1JvdXRlckxpbmsnLHthdHRyczp7InRvIjoiL3NueWsvZmVhdHVyZXMvaW50ZWdyYXRpb25zL2NpLWNkLWludGVncmF0aW9ucy8jc2V0dGluZy11cC11c2luZy1zbnlrLWNsaSJ9fSxbX3ZtLl92KCJTZXR0aW5nIHVwIHVzaW5nIFNueWsgQ0xJIildKSxfdm0uX3YoIiBmb3IgZGV0YWlscy4iKV0sMSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX2MoJ3N0cm9uZycsW192bS5fdigiU255ayBBUEkiKV0pLF92bS5fdigiOiBGb3IgdGVhbXMgd2l0aCBjb21wbGV4IHJlcXVpcmVtZW50cyBTbnlrIHByb3ZpZGVzIGEgUkVTVCBBUEksIHdoaWNoIHlvdSBjYW4gdXNlIGZvciBmdW5jdGlvbnMgaW5jbHVkaW5nIGluaXRpYXRpbmcgc2NhbnMsIG9uYm9hcmRpbmcgbmV3IHByb2plY3RzLCBhbmQgdGVzdGluZyBhcmJpdHJhcnkgbGlicmFyaWVzLiBTZWUgdGhlICIpLF9jKCdhJyx7YXR0cnM6eyJocmVmIjoiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3NueWsvdXNlci1kb2NzL21haW4vZG9jcy9zbnlrLWFwaS1pbmZvLyIsInRhcmdldCI6Il9ibGFuayIsInJlbCI6Im5vb3BlbmVyIG5vcmVmZXJyZXIifX0sW192bS5fdigiU255ayBBUEkgZG9jdW1lbnRhdGlvbiIpLF9jKCdPdXRib3VuZExpbmsnKV0sMSksX3ZtLl92KCIgZm9yIG1vcmUgZGV0YWlscy4iKV0pXSksX3ZtLl92KCIgIiksX2MoJ2gzJyx7YXR0cnM6eyJpZCI6InNldHRpbmctdXAtdXNpbmctc255ay1jbGkifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNzZXR0aW5nLXVwLXVzaW5nLXNueWstY2xpIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIFNldHRpbmcgdXAgdXNpbmcgU255ayBDTEkiKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJTbnlrIENMSSBpcyBhIE5vZGVKUyBhcHBsaWNhdGlvbiB0aGF0IGNhbiBiZSBzY3JpcHRlZCBkaXJlY3RseSBieSBkZXZlbG9wZXJzIGZvciBlYXN5IGludGVncmF0aW9uIGludG8gbW9zdCBDSS9DRCBlbnZpcm9ubWVudHMsIGFuZCBpcyBhdmFpbGFibGUgYXMgYW4gbnBtIGFwcGxpY2F0aW9uLCBwcmUtcGFja2FnZWQgYmluYXJ5LCBvciBjb250YWluZXIgaW1hZ2UuIFNlZSAiKSxfYygnYScse2F0dHJzOnsiaHJlZiI6Imh0dHBzOi8vZG9jcy5zbnlrLmlvL3NueWstY2xpL2luc3RhbGwtdGhlLXNueWstY2xpIiwidGFyZ2V0IjoiX2JsYW5rIiwicmVsIjoibm9vcGVuZXIgbm9yZWZlcnJlciJ9fSxbX3ZtLl92KCJJbnN0YWxsIHRoZSBTbnlrIENMSSIpLF9jKCdPdXRib3VuZExpbmsnKV0sMSksX3ZtLl92KCIgZm9yIG1vcmUgZGV0YWlscyIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIlNueWsgQ0xJIGNhbiBiZSBjb25maWd1cmVkIHRvOiIpXSksX3ZtLl92KCIgIiksX2MoJ3VsJyxbX2MoJ2xpJyxbX3ZtLl92KCJSZXR1cm4gbm9uLXplcm8gZXJyb3IgY29kZXMgb25seSB3aGVuIGNlcnRhaW4gY3JpdGVyaWEgYXJlIG1ldCwgZm9yIGV4YW1wbGUsIGV4aXQgd2l0aCBhbiBlcnJvciBjb2RlIG9ubHkgaWYgdnVsbmVyYWJpbGl0aWVzIG9mIGhpZ2ggc2V2ZXJpdHkgYXJlIHByZXNlbnQuIildKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfdm0uX3YoIk91dHB1dCBhbGwgb2YgaXRzIGRhdGEgaW50byBKU09OIGZvciBtb3JlIGZsZXhpYmlsaXR5LiIpXSldKSxfdm0uX3YoIiAiKSxfYygnaDQnLHthdHRyczp7ImlkIjoiZXhpdC1jb2RlcyJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI2V4aXQtY29kZXMifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgIiksX2MoJ3N0cm9uZycsW192bS5fdigiRXhpdCBDb2RlcyIpXSldKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiVGhlICIpLF9jKCdjb2RlJyxbX3ZtLl92KCJzbnlrIHRlc3QiKV0pLF92bS5fdigiIGNvbW1hbmQgaXMgc3luY2hyb25vdXM7IGl0IGVuZHMgd2l0aCBhbiBleGl0IGNvZGUuIFlvdXIgYnVpbGQgc3lzdGVtIGNhbiB1c2UgZXhpdCBjb2RlcyB0byBlaXRoZXIgcGFzcyBvciBmYWlsIHRoZSBidWlsZCBiYXNlZCBvbiB0aGUgdGVzdCByZXN1bHRzLiBTZWUgdGhlICIpLF9jKCdhJyx7YXR0cnM6eyJocmVmIjoiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3NueWsvdXNlci1kb2NzL21haW4vZG9jcy8uLi9zbnlrLWNsaS9jbGktcmVmZXJlbmNlLyIsInRhcmdldCI6Il9ibGFuayIsInJlbCI6Im5vb3BlbmVyIG5vcmVmZXJyZXIifX0sW192bS5fdigiQ0xJIHJlZmVyZW5jZSIpLF9jKCdPdXRib3VuZExpbmsnKV0sMSksX3ZtLl92KCIgZm9yIHRoZSBtZWFuaW5nIG9mIHRoZSBleGl0IGNvZGVzLiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIlRoZSAiKSxfYygnY29kZScsW192bS5fdigic255ayBtb25pdG9yIildKSxfdm0uX3YoIiBjb21tYW5kIHBvc3RzIFRoZSBzbnlrIG1vbml0b3IgY29tbWFuZCBwb3N0cyB0aGUgZGVwZW5kZW5jeSB0cmVlIHRvIG9mIGEgcHJvamVjdCB0byB5b3VyIFNueWsgYWNjb3VudCBhbmQgbW9uaXRvcnMgaXQgZm9yIHZ1bG5lcmFiaWxpdGllcyB0aGVyZS4uIEl0IGlzIGFuIGFzeW5jaHJvbm91cyBjb21tYW5kLCB0aGF0IGRvZXMgbm90IGVuZCB3aXRoIGFuIGV4aXQgY29kZSBiYXNlZCBvbiB0aGUgdnVsbmVyYWJpbGl0eSBzdGF0dXMuIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiVG8gc2lsZW5jZSBTbnlrIENMSSBleGl0IGNvZGVzIGZvciB0aGUgIiksX2MoJ2NvZGUnLFtfdm0uX3YoInNueWsgdGVzdCIpXSksX3ZtLl92KCIgY29tbWFuZCB0byBhdm9pZCBmYWlsaW5nIHRoZSBidWlsZCBzdGVwLCB1c2UgIiksX2MoJ2NvZGUnLFtfdm0uX3YoInx8IHRydWUiKV0pLF92bS5fdigiIGF0IHRoZSBlbmQgb2YgdGhlIGNvbW1hbmQuICIpLF9jKCdjb2RlJyxbX3ZtLl92KCJ8fCB0cnVlIildKSxfdm0uX3YoIiBzZXRzIHRoZSBleGl0IGNvZGUgb2YgdGhlIHNjYW4gdG8gMC4gVGhpcyBjYW4gYmUgdXNlZCB0byBjb250aW51ZSB3aXRoIGEgQ0kvQ0QgcGlwZWxpbmUgZXZlbiB3aGVuIHRoZXJlIGFyZSB2dWxuZXJhYmlsaXRpZXMuIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiRGVwZW5kaW5nIG9uIHlvdXIgYXBwcm9hY2ggYW5kIGdvYWxzLCB5b3UgbWF5IG5lZWQgdG8gdXNlIGJvdGggY29tbWFuZHMgaW4geW91ciBwaXBlbGluZS4iKV0pLF92bS5fdigiICIpLF9jKCdoNCcse2F0dHJzOnsiaWQiOiJjbGktZXhhbXBsZXMtaW4tYS1idWlsZC1waXBlbGluZSJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI2NsaS1leGFtcGxlcy1pbi1hLWJ1aWxkLXBpcGVsaW5lIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiICIpLF9jKCdzdHJvbmcnLFtfdm0uX3YoIkNMSSBleGFtcGxlcyBpbiBhIGJ1aWxkIHBpcGVsaW5lIildKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJVc2UgIiksX2MoJ2NvZGUnLFtfdm0uX3YoInNueWsgbW9uaXRvciIpXSksX3ZtLl92KCIgdG8gc3VyZmFjZSB2dWxuZXJhYmlsaXRpZXMgYW5kIHBvc3QgdG8gdGhlIFNueWsgVUkgZm9yIG9uZ29pbmcgbW9uaXRvcmluZzoiKV0pLF92bS5fdigiICIpLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoibGFuZ3VhZ2UtIGV4dHJhLWNsYXNzIn0sW19jKCdwcmUnLHtwcmU6dHJ1ZSxhdHRyczp7ImNsYXNzIjoibGFuZ3VhZ2UtdGV4dCJ9fSxbX2MoJ2NvZGUnLFtfdm0uX3YoInNueWsgbW9uaXRvciAtLWFsbC1wcm9qZWN0cyAtLW9yZz1zbnlrLWFwcHNcbiIpXSldKV0pLF9jKCdwJyxbX3ZtLl92KCJVc2UgIiksX2MoJ2NvZGUnLFtfdm0uX3YoInNueWsgdGVzdCIpXSksX3ZtLl92KCIgdG8gZmFpbCB0aGUgYnVpbGQgb24gaGlnaCBzZXZlcml0eSBpc3N1ZXM6IildKSxfdm0uX3YoIiAiKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6Imxhbmd1YWdlLSBleHRyYS1jbGFzcyJ9LFtfYygncHJlJyx7cHJlOnRydWUsYXR0cnM6eyJjbGFzcyI6Imxhbmd1YWdlLXRleHQifX0sW19jKCdjb2RlJyxbX3ZtLl92KCJzbnlrIHRlc3QgLS1hbGwtcHJvamVjdHMgLS1vcmc9c255ay1hcHBzIC0tc2V2ZXJpdHktdGhyZXNob2xkPWhpZ2hcbiIpXSldKV0pLF9jKCdwJyxbX3ZtLl92KCJUbyBzZWUgdGhlIGZ1bGwgbGlzdCBvZiBvcHRpb25zIGluIHRoZSBDTEksIHJ1biB0aGUgc255ayB0ZXN0IC0taGVscCwgc255ayBtb25pdG9yIC0taGVscCwgYW5kIHNueWsgY29udGFpbmVyIC0taGVscCBjb21tYW5kcyBvciBzZWUgdGhlICIpLF9jKCdhJyx7YXR0cnM6eyJocmVmIjoiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3NueWsvdXNlci1kb2NzL21haW4vZG9jcy8uLi9zbnlrLWNsaS9jb21tYW5kcy8iLCJ0YXJnZXQiOiJfYmxhbmsiLCJyZWwiOiJub29wZW5lciBub3JlZmVycmVyIn19LFtfdm0uX3YoImhlbHAgZG9jcyIpLF9jKCdPdXRib3VuZExpbmsnKV0sMSksX3ZtLl92KCIuIildKSxfdm0uX3YoIiAiKSxfYygnaDMnLHthdHRyczp7ImlkIjoiY29uZmlndXJpbmctb3B0aW9ucy1mb3ItZmFpbGluZy1idWlsZHMifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNjb25maWd1cmluZy1vcHRpb25zLWZvci1mYWlsaW5nLWJ1aWxkcyJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiBDb25maWd1cmluZyBvcHRpb25zIGZvciBmYWlsaW5nIGJ1aWxkcyIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIllvdSBjYW4gYWRkIG9wdGlvbnMgdG8gdGhlICIpLF9jKCdjb2RlJyxbX3ZtLl92KCJzbnlrIHRlc3QiKV0pLF92bS5fdigiIGNvbW1hbmQgdG8gcmVmaW5lIHBhcmFtZXRlcnMgdGhhdCBjYW4gcmVzdWx0IGluIGEgZmFpbGVkIGJ1aWxkOiIpXSksX3ZtLl92KCIgIiksX2MoJ3VsJyxbX2MoJ2xpJyxbX2MoJ2NvZGUnLFtfdm0uX3YoIi0tc2V2ZXJpdHktdGhyZXNob2xkPWhpZ2giKV0pLF92bS5fdigiOiBGYWlsIHRoZSBidWlsZCBvbmx5IGZvciBoaWdoIHNldmVyaXR5IGlzc3VlcywiKV0pLF92bS5fdigiICIpLF9jKCdsaScsW19jKCdjb2RlJyxbX3ZtLl92KCItLWZhaWwtb249dXBncmFkYWJsZSIpXSksX3ZtLl92KCI6IGZhaWwgdGhlIGJ1aWxkIG9ubHkgZm9yIGlzc3VlcyB0aGF0IGFyZSB1cGdyYWRhYmxlIChjYW4gYmUgZml4ZWQgd2l0aCBTbnlrIGZpeCBhZHZpY2UpIildKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJZb3UgY2FuIGFsc28gZmFpbCB0aGUgYnVpbGQgZm9yIGFueSBvdGhlciBwYXJhbWV0ZXIgaW4gdGhlIFNueWsgSlNPTiBvdXRwdXQgKHN1Y2ggYXMgQ1ZTUyBzY29yZSksIHVzaW5nIGEgd3JhcHBlciBsaWtlICIpLF9jKCdhJyx7YXR0cnM6eyJocmVmIjoiaHR0cHM6Ly9naXRodWIuY29tL3NueWstdGVjaC1zZXJ2aWNlcy9zbnlrLWZpbHRlciIsInRhcmdldCI6Il9ibGFuayIsInJlbCI6Im5vb3BlbmVyIG5vcmVmZXJyZXIifX0sW192bS5fdigic255ay1maWx0ZXIiKSxfYygnT3V0Ym91bmRMaW5rJyldLDEpLF92bS5fdigiLCBvciB1c2luZyBhZGRpdGlvbmFsIHRvb2xpbmcgbGlrZSAiKSxfYygnYScse2F0dHJzOnsiaHJlZiI6Imh0dHBzOi8vZ2l0aHViLmNvbS9zbnlrLXRlY2gtc2VydmljZXMvc255ay1kZWx0YSIsInRhcmdldCI6Il9ibGFuayIsInJlbCI6Im5vb3BlbmVyIG5vcmVmZXJyZXIifX0sW192bS5fdigic255ay1kZWx0YSIpLF9jKCdPdXRib3VuZExpbmsnKV0sMSksX3ZtLl92KCIgdG8gZmFpbCB0aGUgYnVpbGQgb25seSBmb3IgaXNzdWVzIGZvdW5kIHNpbmNlIHRoZSBsYXN0IGJ1aWxkLiBGb3IgaW5mb3JtYXRpb24gb24gdXNpbmcgc255ay1kZWx0YSBzZWUgIiksX2MoJ2EnLHthdHRyczp7ImhyZWYiOiJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vc255ay91c2VyLWRvY3MvbWFpbi9kb2NzLy4uL3NueWstY2xpL3Rlc3QtZm9yLXZ1bG5lcmFiaWxpdGllcy9hZHZhbmNlZC1mYWlsaW5nLW9mLWJ1aWxkcy1pbi1zbnlrLWNsaS5tZCIsInRhcmdldCI6Il9ibGFuayIsInJlbCI6Im5vb3BlbmVyIG5vcmVmZXJyZXIifX0sW192bS5fdigiQWR2YW5jZWQgZmFpbGluZyBvZiBidWlsZHMgaW4gdGhlIFNueWsgQ0xJIiksX2MoJ091dGJvdW5kTGluaycpXSwxKSxfdm0uX3YoIi4iKV0pLF92bS5fdigiICIpLF9jKCdoMycse2F0dHJzOnsiaWQiOiJjcmVhdGluZy1jdXN0b20tYnVpbGQtYXJ0aWZhY3RzIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjY3JlYXRpbmctY3VzdG9tLWJ1aWxkLWFydGlmYWN0cyJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiBDcmVhdGluZyBjdXN0b20gYnVpbGQgYXJ0aWZhY3RzIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiWW91IGNhbiB1c2UgU255aydzIEpTT04gb3V0cHV0IHRvIGNyZWF0ZSBjdXN0b20gdGVzdCByZXBvcnRzIGFzIGJ1aWxkIGFydGlmYWN0cywgdXNpbmcgdGhlICIpLF9jKCdhJyx7YXR0cnM6eyJocmVmIjoiaHR0cHM6Ly9naXRodWIuY29tL3NueWsvc255ay10by1odG1sIiwidGFyZ2V0IjoiX2JsYW5rIiwicmVsIjoibm9vcGVuZXIgbm9yZWZlcnJlciJ9fSxbX3ZtLl92KCJzbnlrLXRvLWh0bWwiKSxfYygnT3V0Ym91bmRMaW5rJyldLDEpLF92bS5fdigiIHV0aWxpdHksIG9yIG90aGVyIGN1c3RvbSBwcm9jZXNzaW5nIHlvdSBkZXZlbG9wLiIpXSksX3ZtLl92KCIgIiksX2MoJ2gzJyx7YXR0cnM6eyJpZCI6ImNyZWF0aW5nLXdvcmstaXRlbXMtZm9yLW5ldy12dWxuZXJhYmlsaXRpZXMifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNjcmVhdGluZy13b3JrLWl0ZW1zLWZvci1uZXctdnVsbmVyYWJpbGl0aWVzIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIENyZWF0aW5nIHdvcmsgaXRlbXMgZm9yIG5ldyB2dWxuZXJhYmlsaXRpZXMiKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJTbnlrIGFsbG93cyB5b3UgdG8gYXV0b21hdGljYWxseSBjcmVhdGUgbmV3IHdvcmsgaXRlbXMgaW4gSklSQSAoc2VlICIpLF9jKCdhJyx7YXR0cnM6eyJocmVmIjoiaHR0cHM6Ly9kb2NzLnNueWsuaW8vaW50ZWdyYXRpb25zL3VudGl0bGVkLTMvamlyYSIsInRhcmdldCI6Il9ibGFuayIsInJlbCI6Im5vb3BlbmVyIG5vcmVmZXJyZXIifX0sW192bS5fdigiSmlyYSBpbnRlZ3JhdGlvbiIpLF9jKCdPdXRib3VuZExpbmsnKV0sMSksX3ZtLl92KCIgZG9jdW1lbnRhdGlvbikuIFlvdSBjYW4gY3VzdG9taXplIHRoaXMgY29kZSBmb3IgeW91ciBzcGVjaWZpYyByZXF1aXJlbWVudHMsIG9yIGFkYXB0IGl0IHRvIHdvcmsgd2l0aCBvdGhlciB3b3JrIG1hbmFnZW1lbnQgc3lzdGVtcy4iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJTZWUgIiksX2MoJ2EnLHthdHRyczp7ImhyZWYiOiJodHRwczovL2dpdGh1Yi5jb20vc255ay10ZWNoLXNlcnZpY2VzL2ppcmEtdGlja2V0cy1mb3ItbmV3LXZ1bG5zIiwidGFyZ2V0IjoiX2JsYW5rIiwicmVsIjoibm9vcGVuZXIgbm9yZWZlcnJlciJ9fSxbX3ZtLl92KCJKaXJhIHRpY2tldHMgZm9yIG5ldyB2dWxucyIpLF9jKCdPdXRib3VuZExpbmsnKV0sMSksX3ZtLl92KCIgdG8gZ2V0IHN0YXJ0ZWQsIG9yIHJldmlldyB0aGUgIiksX2MoJ2EnLHthdHRyczp7ImhyZWYiOiJodHRwczovL3NueWsuZG9jcy5hcGlhcnkuaW8vI3JlZmVyZW5jZS9wcm9qZWN0cy9wcm9qZWN0LWppcmEtaXNzdWVzIiwidGFyZ2V0IjoiX2JsYW5rIiwicmVsIjoibm9vcGVuZXIgbm9yZWZlcnJlciJ9fSxbX3ZtLl92KCJBUEkgdG8gY3JlYXRlIEppcmEgdGlja2V0cyIpLF9jKCdPdXRib3VuZExpbmsnKV0sMSksX3ZtLl92KCIuIildKSxfdm0uX3YoIiAiKSxfYygnaDMnLHthdHRyczp7ImlkIjoiaWdub3JpbmctaXNzdWVzIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjaWdub3JpbmctaXNzdWVzIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIElnbm9yaW5nIGlzc3VlcyIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkJ5IGRlZmF1bHQgaWYgaXNzdWVzIGFyZSBub3QgaWdub3JlZCwgb3IgaWYgeW91IGFyZSBub3QgdXNpbmcgIiksX2MoJ2EnLHthdHRyczp7ImhyZWYiOiJodHRwczovL2dpdGh1Yi5jb20vc255ay10ZWNoLXNlcnZpY2VzL3NueWstZGVsdGEiLCJ0YXJnZXQiOiJfYmxhbmsiLCJyZWwiOiJub29wZW5lciBub3JlZmVycmVyIn19LFtfdm0uX3YoInNueWstZGVsdGEiKSxfYygnT3V0Ym91bmRMaW5rJyldLDEpLF92bS5fdigiLCBhICIpLF9jKCdjb2RlJyxbX3ZtLl92KCJzbnlrIHRlc3QiKV0pLF92bS5fdigiIGluIHlvdXIgcGlwZWxpbmUgZmFpbHMgdGhlIGJ1aWxkIHdoZW4gaXNzdWVzIGFyZSBmb3VuZC4gVG8gYWxsb3cgYnVpbGRzIHRvIGNvbnRpbnVlIHdpdGhvdXQgcmVzb2x2aW5nIHRoZXNlIGlzc3VlcywgeW91IGNhbjoiKV0pLF92bS5fdigiICIpLF9jKCd1bCcsW19jKCdsaScsW19jKCdhJyx7YXR0cnM6eyJocmVmIjoiaHR0cHM6Ly9kb2NzLnNueWsuaW8vc255ay1jbGkvZml4LXZ1bG5lcmFiaWxpdGllcy1mcm9tLXRoZS1jbGkvaWdub3JlLXZ1bG5lcmFiaWxpdGllcy11c2luZy1zbnlrLWNsaSIsInRhcmdldCI6Il9ibGFuayIsInJlbCI6Im5vb3BlbmVyIG5vcmVmZXJyZXIifX0sW192bS5fdigiSWdub3JlIGlzc3VlcyB1c2luZyBhIC5zbnlrIHBvbGljeSBmaWxlIiksX2MoJ091dGJvdW5kTGluaycpXSwxKV0pLF92bS5fdigiICIpLF9jKCdsaScsW19jKCdhJyx7YXR0cnM6eyJocmVmIjoiaHR0cHM6Ly9zdXBwb3J0LnNueWsuaW8vaGMvZW4tdXMvYXJ0aWNsZXMvMzYwMDAwOTIzNDk4LUhvdy1jYW4tSS1pZ25vcmUtYS12dWxuZXJhYmlsaXR5LSIsInRhcmdldCI6Il9ibGFuayIsInJlbCI6Im5vb3BlbmVyIG5vcmVmZXJyZXIifX0sW192bS5fdigiSWdub3JlIGlzc3VlcyBmcm9tIHRoZSBTbnlrIFVJIiksX2MoJ091dGJvdW5kTGluaycpXSwxKV0pLF92bS5fdigiICIpLF9jKCdsaScsW19jKCdhJyx7YXR0cnM6eyJocmVmIjoiaHR0cHM6Ly9zbnlrLmRvY3MuYXBpYXJ5LmlvLyNyZWZlcmVuY2UvcHJvamVjdHMvcHJvamVjdC1pZ25vcmVzLWJ5LWlzc3VlL2FkZC1pZ25vcmUiLCJ0YXJnZXQiOiJfYmxhbmsiLCJyZWwiOiJub29wZW5lciBub3JlZmVycmVyIn19LFtfdm0uX3YoIklnbm9yZSBpc3N1ZXMgZnJvbSB0aGUgU255ayBBUEkiKSxfYygnT3V0Ym91bmRMaW5rJyldLDEpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX3ZtLl92KCJVc2UgdGhlIFNueWsgUHl0aG9uIEFQSSBmb3IgYnVsayBpZ25vcmVzOiBzZWUgIiksX2MoJ2EnLHthdHRyczp7ImhyZWYiOiJodHRwczovL2dpdGh1Yi5jb20vc255ay1sYWJzL3B5c255ayIsInRhcmdldCI6Il9ibGFuayIsInJlbCI6Im5vb3BlbmVyIG5vcmVmZXJyZXIifX0sW192bS5fdigiaHR0cHM6Ly9naXRodWIuY29tL3NueWstbGFicy9weXNueWsiKSxfYygnT3V0Ym91bmRMaW5rJyldLDEpLF92bS5fdigiIGFuZCAiKSxfYygnYScse2F0dHJzOnsiaHJlZiI6Imh0dHBzOi8vZ2l0aHViLmNvbS9zbnlrLWxhYnMvcHlzbnlrL2Jsb2IvbWFzdGVyL2V4YW1wbGVzL2FwaS1kZW1vLTljLWJ1bGstaWdub3JlLXZ1bG5zLWJ5LWlzc3VlSWRMaXN0LnB5IiwidGFyZ2V0IjoiX2JsYW5rIiwicmVsIjoibm9vcGVuZXIgbm9yZWZlcnJlciJ9fSxbX3ZtLl92KCJodHRwczovL2dpdGh1Yi5jb20vc255ay1sYWJzL3B5c255ay9ibG9iL21hc3Rlci9leGFtcGxlcy9hcGktZGVtby05Yy1idWxrLWlnbm9yZS12dWxucy1ieS1pc3N1ZUlkTGlzdC5weSIpLF9jKCdPdXRib3VuZExpbmsnKV0sMSldKV0pLF92bS5fdigiICIpLF9jKCdoMycse2F0dHJzOnsiaWQiOiJzbnlrLW9wZW4tc291cmNlLXNwZWNpZmljLXN0cmF0ZWdpZXMifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNzbnlrLW9wZW4tc291cmNlLXNwZWNpZmljLXN0cmF0ZWdpZXMifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgU255ayBPcGVuIFNvdXJjZS1zcGVjaWZpYyBzdHJhdGVnaWVzIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiVGhlc2Ugc3RyYXRlZ2llcyBhcmUgdXNlZnVsIHRvIHRlYW1zIHVzaW5nIHRoZSBTbnlrIFNDQSAoIiksX2MoJ2EnLHthdHRyczp7ImhyZWYiOiJodHRwczovL3NueWsuaW8vYmxvZy93aGF0LWlzLXNvZnR3YXJlLWNvbXBvc2l0aW9uLWFuYWx5c2lzLXNjYS1hbmQtZG9lcy1teS1jb21wYW55LW5lZWQtaXQvIiwidGFyZ2V0IjoiX2JsYW5rIiwicmVsIjoibm9vcGVuZXIgbm9yZWZlcnJlciJ9fSxbX3ZtLl92KCJTb2Z0d2FyZSBDb21wb3NpdGlvbiBBbmFseXNpcyIpLF9jKCdPdXRib3VuZExpbmsnKV0sMSksX3ZtLl92KCIpIHRlc3RpbmcgZmVhdHVyZXMuIildKSxfdm0uX3YoIiAiKSxfYygnaDQnLHthdHRyczp7ImlkIjoiZ3JhZGxlLWFuZC1zY2FsYSJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI2dyYWRsZS1hbmQtc2NhbGEifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgR3JhZGxlIGFuZCBTY2FsYSIpXSksX3ZtLl92KCIgIiksX2MoJ3VsJyxbX2MoJ2xpJyxbX3ZtLl92KCJGb3IgXCJtdWx0aS1wcm9qZWN0XCIgY29uZmlndXJhdGlvbnMsIHRlc3QgYWxsIHN1Yi1wcm9qZWN0cy4gVXNlIHRoaXMgb3B0aW9uIHdpdGggdGhlICIpLF9jKCdjb2RlJyxbX3ZtLl92KCJtb25pdG9yIildKSxfdm0uX3YoIiBvciAiKSxfYygnY29kZScsW192bS5fdigidGVzdCIpXSksX3ZtLl92KCIgY29tbWFuZDogIiksX2MoJ2NvZGUnLFtfdm0uX3YoIi0tYWxsLXN1Yi1wcm9qZWN0cyIpXSksX3ZtLl92KCIuIildKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfdm0uX3YoIlRvIHNjYW4gc3BlY2lmaWMgY29uZmlndXJhdGlvbnMsIHNlbGVjdCBjZXJ0YWluIHZhbHVlcyBvZiBjb25maWd1cmF0aW9uIGF0dHJpYnV0ZXMgdG8gcmVzb2x2ZSB0aGUgZGVwZW5kZW5jaWVzLiBVc2UgdGhpcyBvcHRpb24gd2l0aCB0aGUgIiksX2MoJ2NvZGUnLFtfdm0uX3YoInRlc3QiKV0pLF92bS5fdigiIG9yICIpLF9jKCdjb2RlJyxbX3ZtLl92KCJtb25pdG9yIildKSxfdm0uX3YoIiBjb21tYW5kOiAiKSxfYygnY29kZScsW192bS5fdigiLS1jb25maWd1cmF0aW9uLWF0dHJpYnV0ZXM9IildKSxfdm0uX3YoIi4iKV0pXSksX3ZtLl92KCIgIiksX2MoJ2g0Jyx7YXR0cnM6eyJpZCI6InB5dGhvbiJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI3B5dGhvbiJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiBQeXRob24iKV0pLF92bS5fdigiICIpLF9jKCd1bCcsW19jKCdsaScsW19jKCdwJyxbX3ZtLl92KCJTbnlrIHVzZXMgUHl0aG9uIHRvIHNjYW4gYW5kIGZpbmQgeW91ciBkZXBlbmRlbmNpZXMuIFNueWsgbmVlZHMgdGhlIFB5dGhvbiB2ZXJzaW9uIHRvIHN0YXJ0IHNjYW5uaW5nLCBhbmQgZGVmYXVsdHMgdG8gXCJweXRob24uXCIgSWYgeW91IGFyZSB1c2luZyBtdWx0aXBsZSBQeXRob24gdmVyc2lvbnMsIHVzZSB0aGlzIG9wdGlvbiB3aXRoIHRoZSAiKSxfYygnY29kZScsW192bS5fdigidGVzdCIpXSksX3ZtLl92KCIgb3IgIiksX2MoJ2NvZGUnLFtfdm0uX3YoIm1vbml0b3IiKV0pLF92bS5fdigiIGNvbW1hbmQgdG8gc3BlY2lmeSB0aGUgY29ycmVjdCBQeXRob24gY29tbWFuZCBmb3IgZXhlY3V0aW9uOiAiKSxfYygnY29kZScsW192bS5fdigiLS1jb21tYW5kPSIpXSksX3ZtLl92KCIuIEV4YW1wbGU6IildKSxfdm0uX3YoIiAiKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6Imxhbmd1YWdlLSBleHRyYS1jbGFzcyJ9LFtfYygncHJlJyx7cHJlOnRydWUsYXR0cnM6eyJjbGFzcyI6Imxhbmd1YWdlLXRleHQifX0sW19jKCdjb2RlJyxbX3ZtLl92KCJzbnlrIHRlc3QgLS1jb21tYW5kPXB5dGhvbjNcbiIpXSldKV0pXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX2MoJ3AnLFtfdm0uX3YoIklmIHlvdSBzY2FuIGEgUGlwIHByb2plY3QgYW5kIHVzZSB0aGUgIiksX2MoJ2NvZGUnLFtfdm0uX3YoIi0tZmlsZT0iKV0pLF92bS5fdigiIG9wdGlvbiBiZWNhdXNlIHlvdXIgbWFuaWZlc3QgZmlsZSBpcyBub3QgdGhlIHN0YW5kYXJkICIpLF9jKCdjb2RlJyxbX3ZtLl92KCJyZXF1aXJlbWVudC50eHQiKV0pLF92bS5fdigiLCB0aGVuIHRoZSBuZXh0IG9wdGlvbiBpcyBtYW5kYXRvcnkgdG8gc3BlY2lmeSBQaXAgYXMgdGhlIHBhY2thZ2UgbWFuYWdlciAiKSxfYygnY29kZScsW192bS5fdigiLS1wYWNrYWdlLW1hbmFnZXI9cGlwLiIpXSldKV0pXSksX3ZtLl92KCIgIiksX2MoJ2g0Jyx7YXR0cnM6eyJpZCI6Im5ldCJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI25ldCJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiAuTmV0IildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiSWYgeW91IHVzZSBhICIpLF9jKCdjb2RlJyxbX3ZtLl92KCIuc2xuIildKSxfdm0uX3YoIiBmaWxlLCB5b3UgY2FuIHNwZWNpZnkgdGhlIHBhdGggdG8gdGhlIGZpbGUsIGFuZCBTbnlrIHNjYW5zIGFsbCB0aGUgc3ViIHByb2plY3RzIHRoYXQgYXJlIHBhcnQgb2YgdGhlIHJlcG8sIGZvciBleGFtcGxlOiIpXSksX3ZtLl92KCIgIiksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJsYW5ndWFnZS0gZXh0cmEtY2xhc3MifSxbX2MoJ3ByZScse3ByZTp0cnVlLGF0dHJzOnsiY2xhc3MiOiJsYW5ndWFnZS10ZXh0In19LFtfYygnY29kZScsW192bS5fdigic255ayB0ZXN0IC0tZmlsZT1zbG4vLnNsblxuIildKV0pXSksX2MoJ2g0Jyx7YXR0cnM6eyJpZCI6Inlhcm4ifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiN5YXJuIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIFlhcm4iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJGb3IgWWFybiB3b3Jrc3BhY2VzIHVzZSB0aGUgIiksX2MoJ2NvZGUnLFtfdm0uX3YoIi0teWFybi13b3Jrc3BhY2VzIildKSxfdm0uX3YoIiBvcHRpb24gdG8gdGVzdCBhbmQgbW9uaXRvciB5b3VyIHBhY2thZ2VzLiBUaGUgcm9vdCBsb2NrZmlsZSB3aWxsIGJlIHJlZmVyZW5jZWQgZm9yIHNjYW5zIG9mIGFsbCB0aGUgcGFja2FnZXMuIFVzZSB0aGUgIiksX2MoJ2NvZGUnLFtfdm0uX3YoIi0tZGV0ZWN0aW9uLWRlcHRoIildKSxfdm0uX3YoIiBwYXJhbWV0ZXIgdG8gZmluZCBzdWItZm9sZGVycyB3aGljaCBhcmUgbm90IGF1dG8gZGlzY292ZXJlZCBieSBkZWZhdWx0LiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoInslIGhpbnQgc3R5bGU9XCJpbmZvXCIgJX1cbiIpLF9jKCdzdHJvbmcnLFtfdm0uX3YoIk5vdGUiKV0pLF9jKCdicicpLF92bS5fdigiXG5ZYXJuIHdvcmtzcGFjZXMgc3VwcG9ydCBpcyBmb3IgdGhlICIpLF9jKCdjb2RlJyxbX3ZtLl92KCJzbnlrIHRlc3QiKV0pLF92bS5fdigiIGFuZCAiKSxfYygnY29kZScsW192bS5fdigic255ayBtb25pdG9yIildKSxfdm0uX3YoIiBjb21tYW5kcyBvbmx5IGF0IHRoaXMgdGltZS5cbnslIGVuZGhpbnQgJX0iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJFeGFtcGxlOiBzY2FuIG9ubHkgdGhlIHBhY2thZ2VzIHRoYXQgYmVsb25nIHRvIGFueSBkaXNjb3ZlcmVkIHdvcmtzcGFjZXMgaW4gdGhlIGN1cnJlbnQgZGlyZWN0b3J5IGFuZCA1IHN1Yi1kaXJlY3RvcmllcyBkZWVwLiIpXSksX3ZtLl92KCIgIiksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJsYW5ndWFnZS0gZXh0cmEtY2xhc3MifSxbX2MoJ3ByZScse3ByZTp0cnVlLGF0dHJzOnsiY2xhc3MiOiJsYW5ndWFnZS10ZXh0In19LFtfYygnY29kZScsW192bS5fdigic255ayB0ZXN0IC0teWFybi13b3Jrc3BhY2VzIC0tZGV0ZWN0aW9uLWRlcHRoPTZcbiIpXSldKV0pLF9jKCdwJyxbX3ZtLl92KCJZb3UgY2FuIHVzZSBhIGNvbW1vbiAiKSxfYygnY29kZScsW192bS5fdigiLnNueWsiKV0pLF92bS5fdigiIHBvbGljeSBmaWxlIGlmIHlvdSBtYWludGFpbiBpZ25vcmVzIGFuZCBwYXRjaGVzIGluIG9uZSBwbGFjZSB0byBiZSBhcHBsaWVkIGZvciBhbGwgZGV0ZWN0ZWQgd29ya3NwYWNlcywgYnkgcHJvdmlkaW5nIHRoZSBwb2xpY3kgcGF0aCBhcyBmb2xsb3dzOiIpXSksX3ZtLl92KCIgIiksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJsYW5ndWFnZS0gZXh0cmEtY2xhc3MifSxbX2MoJ3ByZScse3ByZTp0cnVlLGF0dHJzOnsiY2xhc3MiOiJsYW5ndWFnZS10ZXh0In19LFtfYygnY29kZScsW192bS5fdigic255ayB0ZXN0IC0teWFybi13b3Jrc3BhY2VzIC0tcG9saWN5LXBhdGg9c3JjLy5zbnlrXG4iKV0pXSldKSxfYygnaDQnLHthdHRyczp7ImlkIjoibW9ub3JlcG8ifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNtb25vcmVwbyJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiBNb25vcmVwbyIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIlNvbWUgY3VzdG9tZXJzIGhhdmUgY29tcGxleCBwcm9qZWN0cywgd2l0aCBtdWx0aXBsZSBsYW5ndWFnZXMsIHBhY2thZ2UgbWFuYWdlcnMsIGFuZCBwcm9qZWN0cyBpbiBhIHNpbmdsZSByZXBvc2l0b3J5LiBUbyBmYWNpbGl0YXRlIHRoaXMsIHlvdSBjYW4gdGFrZSBkaWZmZXJlbnQgYXBwcm9hY2hlczoiKV0pLF92bS5fdigiICIpLF9jKCd1bCcsW19jKCdsaScsW19jKCdwJyxbX3ZtLl92KCJBcyB5b3UgYnVpbGQgZWFjaCBwcm9qZWN0IGFuZCBsYW5ndWFnZSwgYWRkIGEgZGlyZWN0aXZlIHRvIHJ1biAiKSxfYygnY29kZScsW192bS5fdigic255ayB0ZXN0IildKSxfdm0uX3YoIiBhbmQgdGFyZ2V0IGEgc3BlY2lmaWMgcHJvamVjdCBmaWxlLCBmb3IgZXhhbXBsZToiKV0pLF92bS5fdigiICIpLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoibGFuZ3VhZ2UtIGV4dHJhLWNsYXNzIn0sW19jKCdwcmUnLHtwcmU6dHJ1ZSxhdHRyczp7ImNsYXNzIjoibGFuZ3VhZ2UtdGV4dCJ9fSxbX2MoJ2NvZGUnLFtfdm0uX3YoInNueWsgdGVzdCAtLWZpbGU9cGFja2FnZS5qc29uXG4iKV0pXSldKSxfYygncCcsW192bS5fdigiQWZ0ZXIgeW91IGluc3RhbGwgdGhlIGRlcGVuZGVuY2llcyBvZiBlYWNoIHByb2plY3QsIG1ha2UgYSBzaW1pbGFyIGNhbGwgcG9pbnRpbmcgdG8gdGhlIHNwZWNpZmljIGFydGlmYWN0IChzdWNoIGFzICIpLF9jKCdjb2RlJyxbX3ZtLl92KCJwb20ueG1sIildKSxfdm0uX3YoIikuIFRoaXMgaXMgZmFzdCBhbmQgZWZmaWNpZW50LCBidXQgY2FuIGJlIGRpZmZpY3VsdCB0byBzY2FsZSwgZXNwZWNpYWxseSBpZiB5b3UgYXJlIG5vdCBmYW1pbGlhciB3aXRoIHRoZSBwcm9qZWN0LiIpXSldKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfYygncCcsW192bS5fdigiV2hlbiB5b3UgdXNlIHRoZSAiKSxfYygnY29kZScsW192bS5fdigiLS1hbGwtcHJvamVjdHMiKV0pLF92bS5fdigiIGFuZCAiKSxfYygnY29kZScsW192bS5fdigiLS1kZXRlY3Rpb24tZGVwdGgiKV0pLF92bS5fdigiIG9wdGlvbnMsIHRoZSBTbnlrIENMSSBvciBDSS9DRCBwbHVnaW4gc2VhcmNoZXMgdXAgdG8gdGhlICIpLF9jKCdjb2RlJyxbX3ZtLl92KCItLWRldGVjdGlvbi1kZXB0aCIpXSksX3ZtLl92KCIgaW4gdGhlIGZvbGRlciBzdHJ1Y3R1cmUgZm9yIGFueSBtYW5pZmVzdHMgdGhhdCBtYXRjaCB0aGUgc3VwcG9ydGVkIGZpbGUgdHlwZXMuIEVhY2ggcHJvamVjdCBpcyBzY2FubmVkIGFuZCBoYXMgaXRzIG93biByZXN1bHQuIFNpbWlsYXJseSwgaWYgeW91IGFyZSB1c2luZyAiKSxfYygnY29kZScsW192bS5fdigic255ayBtb25pdG9yLCIpXSksX3ZtLl92KCIgYSBzZXBhcmF0ZSByZXN1bHQgaXMgY3JlYXRlZCBmb3IgZWFjaCBwcm9qZWN0LiBUaGlzIHByb2lkZXMgYSBnb29kIHdheSB0byBhdXRvbWF0ZSBzY2FubmluZywgZXNwZWNpYWxseSBpZiB5b3UgaGF2ZSBwcm9qZWN0cyBzcGFubmluZyBub2RlLCAubmV0LCBweXRob24sIGFuZCBzbyBvbi4iKV0pXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX2MoJ3AnLFtfdm0uX3YoIkZvciBtb3N0ICIpLF9jKCdzdHJvbmcnLFtfdm0uX3YoIkdyYWRsZSBwcm9qZWN0cyIpXSksX3ZtLl92KCIsIHVzaW5nICIpLF9jKCdjb2RlJyxbX3ZtLl92KCItLWFsbC1wcm9qZWN0cyIpXSksX3ZtLl92KCIgd29ya3MsIGFzIGl0IGludm9rZXMgZ3JhZGxlLXNwZWNpZmljIG9wdGlvbnMgYmVoaW5kIHRoZSBzY2VuZXMgaW4gdGhlIGZvcm0gb2Y6ICIpLF9jKCdjb2RlJyxbX3ZtLl92KCJzbnlrIHRlc3QgLS1maWxlPWJ1aWxkLmdyYWRsZSAtLWFsbC1zdWItcHJvamVjdHMiKV0pLF92bS5fdigiIHdoZW4gaXQgZmluZHMgdGhlIGJ1aWxkIGZpbGUgYXMgcGFydCBvZiB0aGUgIiksX2MoJ2NvZGUnLFtfdm0uX3YoIi0tYWxsLXByb2plY3RzIildKSxfdm0uX3YoIiBzZWFyY2guIildKV0pLF92bS5fdigiICIpLF9jKCdsaScsW19jKCdwJyxbX3ZtLl92KCJHcmFkbGUgbWF5IHJlcXVpcmUgYWRkaXRpb25hbCBjb25maWd1cmF0aW9uIHBhcmFtZXRlcnMuIElmIHNvLCB0YXJnZXQgdGhlIG90aGVyIGFydGlmYWN0cyB1c2luZyAiKSxfYygnY29kZScsW192bS5fdigiLS1maWxlPSIpXSksX3ZtLl92KCIgZm9yIGVhY2ggbWFuaWZlc3Qgb2YgdGhlIG90aGVyIGxhbmd1YWdlcyBhbmQgcGFja2FnZS1tYW5hZ2Vycy4gWW91IG11c3QgdGhlbiB1c2UgIiksX2MoJ2NvZGUnLFtfdm0uX3YoIi0tYWxsLXN1Yi1wcm9qZWN0cyIpXSksX3ZtLl92KCIgYW5kIHBvdGVudGlhbGx5ICIpLF9jKCdjb2RlJyxbX3ZtLl92KCItLWNvbmZpZ3VyYXRpb24tbWF0Y2hpbmciKV0pLF92bS5fdigiIHRvIHNjYW4gYSBjb21wbGV4IEdyYWRsZSBwcm9qZWN0LiIpXSldKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJTZWUgIiksX2MoJ2EnLHthdHRyczp7ImhyZWYiOiJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vc255ay91c2VyLWRvY3MvbWFpbi9kb2NzLy4uL3Byb2R1Y3RzL3NueWstb3Blbi1zb3VyY2UvbGFuZ3VhZ2UtYW5kLXBhY2thZ2UtbWFuYWdlci1zdXBwb3J0L3NueWstZm9yLWphdmEtZ3JhZGxlLW1hdmVuLm1kIiwidGFyZ2V0IjoiX2JsYW5rIiwicmVsIjoibm9vcGVuZXIgbm9yZWZlcnJlciJ9fSxbX3ZtLl92KCJTbnlrIGZvciBKYXZhIChHcmFkbGUsIE1hdmVuKSIpLF9jKCdPdXRib3VuZExpbmsnKV0sMSksX3ZtLl92KCIgZm9yIG1vcmUgaW5mb3JtYXRpb24uIildKSxfdm0uX3YoIiAiKSxfYygnaDMnLHthdHRyczp7ImlkIjoic255ay1jb250YWluZXItc3BlY2lmaWMtc3RyYXRlZ2llcyJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI3NueWstY29udGFpbmVyLXNwZWNpZmljLXN0cmF0ZWdpZXMifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgU255ayBDb250YWluZXItc3BlY2lmaWMgc3RyYXRlZ2llcyIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIlRoZSBiZXN0IHN0YWdlIHRvIGltcGxlbWVudCBTbnlrIENvbnRhaW5lciBpbiB5b3VyIHBpcGVsaW5lIGlzIGFmdGVyIHRoZSBjb250YWluZXIgaW1hZ2UgaXMgYnVpbHQgKGFmdGVyIHJ1bm5pbmcgdGhlIGVxdWl2YWxlbnQgb2Yg4oCcZG9ja2VyIGJ1aWxk4oCdKSwgYW5kIGJlZm9yZSB5b3VyIGltYWdlIGlzIGVpdGhlciBwdXNoZWQgaW50byB5b3VyIHJlZ2lzdHJ5ICjigJxkb2NrZXIgcHVzaOKAnSkgb3IgZGVwbG95ZWQgdG8geW91ciBydW5uaW5nIGluZnJhc3RydWN0dXJlICjigJxoZWxtIGluc3RhbGzigJ0sIOKAnGt1YmVjdGwgYXBwbHnigJ0gYW5kIHNvIG9uKS4iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJUeXBpY2FsbHksIHRoZSB3YXkgeW91IHJ1biB5b3VyIGNvbnRhaW5lciBidWlsZC10ZXN0LWRlcGxveSBwaXBlbGluZSBkZXBlbmRzIG9uIHdoZXRoZXIgb3Igbm90IGEgRG9ja2VyIGRhZW1vbiBpcyBhdmFpbGFibGUgdG8gdGhlIGJ1aWxkIGFnZW50LiIpXSksX3ZtLl92KCIgIiksX2MoJ2g0Jyx7YXR0cnM6eyJpZCI6InJ1bm5pbmctcGlwZWxpbmUtaWYtYS1kb2NrZXItZGFlbW9uLWlzLWF2YWlsYWJsZSJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI3J1bm5pbmctcGlwZWxpbmUtaWYtYS1kb2NrZXItZGFlbW9uLWlzLWF2YWlsYWJsZSJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiAiKSxfYygnc3Ryb25nJyxbX3ZtLl92KCJSdW5uaW5nIHBpcGVsaW5lIGlmIGEgRG9ja2VyIGRhZW1vbiBpcyBhdmFpbGFibGUiKV0pXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIklmIHRoZSBmb2xsb3dpbmcgY2lyY3Vtc3RhbmNlcyBleGlzdDoiKV0pLF92bS5fdigiICIpLF9jKCd1bCcsW19jKCdsaScsW192bS5fdigiWW91IGFyZSBydW5uaW5nIHlvdXIgYnVpbGQgdG9vbGluZyAoc3VjaCBhcyBKZW5raW5zKSBkaXJlY3RseSBvbiBhIGhvc3QgdGhhdCBoYXMgRG9ja2VyIG5hdGl2ZWx5IGluc3RhbGxlZC4iKV0pLF92bS5fdigiICIpLF9jKCdsaScsW192bS5fdigiWW91ciBwaXBlbGluZSB0YXNrcyBhcmUgcnVuIGluc2lkZSBjb250YWluZXJzIHdoaWNoIGhhdmUgdGhlIERvY2tlciBzb2NrZXQgWy92YXIvcnVuL2RvY2tlci5zb2NrXSBiaW5kLW1vdW50ZWQgdG8gdGhlIGhvc3QuIildKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfdm0uX3YoIllvdSBhcmUgcnVubmluZyBhIERvY2tlci1pbnNpZGUtRG9ja2VyIHNldHVwLiIpXSldKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiU255ayBjYW4gaGVscCBhcyBmb2xsb3dzOiIpXSksX3ZtLl92KCIgIiksX2MoJ3VsJyxbX2MoJ2xpJyxbX3ZtLl92KCJXaGVuIHlvdSBydW4gIiksX2MoJ2NvZGUnLFtfdm0uX3YoInNueWsgY29udGFpbmVyIHRlc3QgJElNQUdFX05BTUUiKV0pLF92bS5fdigiLCBTbnlrIGxvb2tzIGZvciB0aGF0IGltYWdlIGluIHlvdXIgbG9jYWwgZGFlbW9u4oCZcyBzdG9yYWdlLCBhbmQgaWYgaXQgZG9lcyBub3QgZXhpc3QsIGRvZXMgdGhlIGVxdWl2YWxlbnQgb2YgYSAiKSxfYygnc3Ryb25nJyxbX3ZtLl92KCJkb2NrZXIgcHVsbCIpXSksX3ZtLl92KCIgdG8gZG93bmxvYWQgaXQgZnJvbSB5b3VyIHVwc3RyZWFtIHJlZ2lzdHJ5LiIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX3ZtLl92KCJGb3IgcmVnaXN0cnkgYXV0aGVudGljYXRpb24sIFNueWsgdXNlcyB0aGUgY3JlZGVudGlhbHMgeW91IGFscmVhZHkgY29uZmlndXJlZCAod2l0aCBzb21ldGhpbmcgbGlrZSAiKSxfYygnc3Ryb25nJyxbX3ZtLl92KCJkb2NrZXIgbG9naW4iKV0pLF92bS5fdigiKS4iKV0pLF92bS5fdigiICIpLF9jKCdsaScsW192bS5fdigiWW91IGNhbiBzcGVjaWZ5ICIpLF9jKCdjb2RlJyxbX3ZtLl92KCItLWZpbGU9RG9ja2VyZmlsZSIpXSksX3ZtLl92KCIgb24gdGhlIGNvbW1hbmQgbGluZSB0byBsaW5rIHRoZSBpbWFnZSB2dWxuZXJhYmlsaXR5IHJlc3VsdHMgd2l0aCB0aGUgRG9ja2VyZmlsZSB0aGF0IGJ1aWx0IGl0LCB0byByZWNlaXZlIGlubGluZSBmaXggYWR2aWNlIGFuZCBhbHRlcm5hdGUgYmFzZSBpbWFnZSBzdWdnZXN0aW9ucy4iKV0pXSksX3ZtLl92KCIgIiksX2MoJ2g0Jyx7YXR0cnM6eyJpZCI6InJ1bm5pbmctcGlwZWxpbmUtaWYtYS1kb2NrZXItZGFlbW9uLWlzLW5vdC1hdmFpbGFibGUifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNydW5uaW5nLXBpcGVsaW5lLWlmLWEtZG9ja2VyLWRhZW1vbi1pcy1ub3QtYXZhaWxhYmxlIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiICIpLF9jKCdzdHJvbmcnLFtfdm0uX3YoIlJ1bm5pbmcgcGlwZWxpbmUgaWYgYSBEb2NrZXIgZGFlbW9uIGlzIG5vdCBhdmFpbGFibGUiKV0pXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIklmIHRoZSBmb2xsb3dpbmcgY2lyY3Vtc3RhbmNlcyBleGlzdDoiKV0pLF92bS5fdigiICIpLF9jKCd1bCcsW19jKCdsaScsW192bS5fdigiWW91IGNvbnRhaW5lcml6ZSBlYWNoIGJ1aWxkIHRhc2sgYnV0IGRvIG5vdCBtb3VudCB0aGUgRG9ja2VyIHNvY2tldCBmb3Igc2VjdXJpdHkgYW5kIHBlcmZvcm1hbmNlIHJlYXNvbnMuIildKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfdm0uX3YoIlBpcGVsaW5lIHRhc2tzIGFyZSBzcGxpdCBhY3Jvc3MgaG9zdHMgKG9yIGV2ZW4gY2x1c3RlcnMpIGFuZCByZWx5IG9uIGFydGlmYWN0cyB0byBiZSBoYW5kZWQgb2ZmIHRob3VnaCBhIGNlbnRyYWwgdm9sdW1lIG9yIGludGVybWVkaWF0ZSByZWdpc3RyeS9vYmplY3Qgc3RvcmUuIildKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfdm0uX3YoIllvdSB3b3JrIGV4Y2x1c2l2ZWx5IGluIGFuIGVjb3N5c3RlbSB0aGF0IG9ubHkgdXNlcyBPQ0ktY29tcGxpYW50IGNvbnRhaW5lciBpbWFnZXMuIildKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJTbnlrIGNhbiBoZWxwIGFzIGZvbGxvd3M6IildKSxfdm0uX3YoIiAiKSxfYygndWwnLFtfYygnbGknLFtfdm0uX3YoIlJ1biBlaXRoZXIgIiksX2MoJ2NvZGUnLFtfdm0uX3YoInNueWsgY29udGFpbmVyIHRlc3QgZG9ja2VyLWFyY2hpdmU6YXJjaGl2ZS50YXIiKV0pLF92bS5fdigiIG9yICIpLF9jKCdjb2RlJyxbX3ZtLl92KCJzbnlrIGNvbnRhaW5lciB0ZXN0IG9jaS1hcmNoaXZlOmFyY2hpdmUudGFyIildKSxfdm0uX3YoIiB0byBnZXQgU255ayB2dWxuZXJhYmlsaXR5IHJlc3VsdHMgYWdhaW5zdCB0YXItZm9ybWF0dGVkIGNvbnRhaW5lciBpbWFnZXMgKGVpdGhlciBpbiBEb2NrZXIgb3IgT0NJIGZvcm1hdCkgd2l0aG91dCByZWx5aW5nIG9uIHRoZSBEb2NrZXIgZGFlbW9uLiIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX3ZtLl92KCJUaGUgdGFyIGFyY2hpdmUgY2FuIGJlIGdlbmVyYXRlZCBieSB5b3VyIGJ1aWxkIHByb2Nlc3MgdXNpbmcgdGhlIGVxdWl2YWxlbnQgb2YgIiksX2MoJ3N0cm9uZycsW192bS5fdigiZG9ja2VyIHNhdmUiKV0pLF92bS5fdigiIGFuZCBzdG9yZWQgaW4gYSBzaGFyZWQgdm9sdW1lIG9yIG9iamVjdCBzdG9yZS4gVGhpcyBjYW4gYmUgYWNjZXNzZWQgYnkgdGhlIGJ1aWxkIGFnZW50IGNvbnRhaW5lciBydW5uaW5nIHRoZSBTbnlrIGJpbmFyeSwgd2l0aCBubyBvdGhlciBkZXBlbmRlbmNpZXMgcmVxdWlyZWQuIildKV0pLF92bS5fdigiICIpLF9jKCdoMycse2F0dHJzOnsiaWQiOiJnb29kLXByYWN0aWNlLXJlY29tbWVuZGF0aW9ucyJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI2dvb2QtcHJhY3RpY2UtcmVjb21tZW5kYXRpb25zIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIEdvb2QgcHJhY3RpY2UgcmVjb21tZW5kYXRpb25zIildKSxfdm0uX3YoIiAiKSxfYygndWwnLFtfYygnbGknLFtfdm0uX3YoIlJlZ2FyZGxlc3Mgb2YgaG93IHlvdSBpbnRlZ3JhdGUgd2l0aCBjb250YWluZXIgaW1hZ2VzIGR1cmluZyBDSSwgcnVuIGEgU255ayBDb250YWluZXIgc2NhbiBhcyBhIHNlcGFyYXRlIGJ1aWxkIHN0ZXAgZnJvbSB5b3VyIFNueWsgT3BlbiBTb3VyY2UgKGFwcGxpY2F0aW9uIFNDQSkgdGVzdC4gVGhpcyBhbGxvd3MgeW91IHRvIGlzb2xhdGUgYnVpbGQgZmFpbHVyZXMgdG8gdnVsbmVyYWJpbGl0aWVzIHdpdGhpbiBlaXRoZXIgdGhlIGNvbnRhaW5lci9PUyBsYXllciBvciB0aGUgYXBwbGljYXRpb24gbGF5ZXIsIHJlc3BlY3RpdmVseS4gVGhpcyBhbHNvIGVuYWJsZXMgbW9yZSBlYXNpbHkgY29udGFpbmVyaXplZCBidWlsZCB0YXNrcy4iKV0pLF92bS5fdigiICIpLF9jKCdsaScsW192bS5fdigiVXNlIENMSSBmbGFncyBsaWtlICIpLF9jKCdjb2RlJyxbX3ZtLl92KCItLWZhaWwtb24iKV0pLF92bS5fdigiIGFuZCAiKSxfYygnY29kZScsW192bS5fdigiLS1zZXZldHktdGhyZXNob2xkIildKSxfdm0uX3YoIiB0byBjdXN0b21pemUgdGhlIGZhaWx1cmUgc3RhdHVzIGZvciB0aGUgYnVpbGQgdGFzay4gRm9yIG1vcmUgYWR2YW5jZWQgdXNhZ2UsIHlvdSBjYW4gdXNlICIpLF9jKCdjb2RlJyxbX3ZtLl92KCItLWpzb24iKV0pLF92bS5fdigiIHRvIGdlbmVyYXRlIGEgSlNPTiBmaWxlIGNvbnRhaW5pbmcgdGhlIGZ1bGwgdnVsbmVyYWJpbGl0eSByZXBvcnQsIGFuZCBzZXQgeW91ciBvd24gYnVpbGQgZmFpbHVyZSBzdGF0dXMgYmFzZWQgb24gdGhlIEpTT04gZGF0YS4iKV0pLF92bS5fdigiICIpLF9jKCdsaScsW192bS5fdigiUGFzcyAiKSxfYygnY29kZScsW192bS5fdigiLS1leGNsdWRlLWJhc2UtaW1hZ2UtdnVsbnMiKV0pLF92bS5fdigiIHRvIHJlcG9ydCBvbmx5IHZ1bG5lcmFiaWxpdGllcyBpbnRyb2R1Y2VkIGJ5IHlvdXIgdXNlciBsYXllcnMsIHJhdGhlciB0aGFuIHZ1bG5lcmFiaWxpdGllcyB0aGF0IGNvbWUgZnJvbSB0aGUgY29udGFpbmVy4oCZcyBiYXNlIGltYWdlICh0aGUgaW1hZ2UgeW91IHNwZWNpZnkgaW4gdGhlIEZST00gbGluZSBpbiB0aGUgRG9ja2VyZmlsZSkuIildKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfdm0uX3YoIlJ1biAiKSxfYygnY29kZScsW192bS5fdigic255ayBjb250YWluZXIgbW9uaXRvciIpXSksX3ZtLl92KCIgZm9sbG93aW5nICIpLF9jKCdjb2RlJyxbX3ZtLl92KCJzbnlrIGNvbnRhaW5lciB0ZXN0IildKSxfdm0uX3YoIiAob3Igc2ltcGx5IGNoZWNrIHRoZSAiKSxfYygnc3Ryb25nJyxbX3ZtLl92KCJNb25pdG9yIildKSxfdm0uX3YoIiBib3ggb24geW91ciBwbHVnaW4gc2V0dGluZ3MpLCB0byBrZWVwIGEgcmVjb3JkIG9mIHRoaXMgY29udGFpbmVy4oCZcyBiaWxsIG9mIG1hdGVyaWFscyB3aXRoaW4gdGhlIFNueWsgVUkgYW5kIHByb2FjdGl2ZWx5IG1vbml0b3IgZm9yIG5ldyB2dWxuZXJhYmlsaXRpZXMgb24gYSBkYWlseSBiYXNpcy4gVGhpcyBpcyB1c2VmdWwgd2hlbiBwdXNoaW5nIG5ldyByZWxlYXNlcyBpbnRvIHByb2R1Y3Rpb24gZW52aXJvbm1lbnRzLiBZb3UgY2FuIHVzZSAiKSxfYygnY29kZScsW192bS5fdigiLS1wcm9qZWN0LW5hbWUiKV0pLF92bS5fdigiIHRvIHNwZWNpZnkgYSB1bmlxdWUgaWRlbnRpZmllciBmb3IgdGhlIHJlbGVhc2UgdG8gZW5zdXJlIHByb2R1Y3Rpb24gY29udGFpbmVycyBhcmUgdHJhY2tlZCBzZXBhcmF0ZWx5IGZyb20gb3RoZXJzIGluIHlvdXIgYnVpbGQgcHJvY2Vzcy4iKV0pXSksX3ZtLl92KCIgIiksX2MoJ2gzJyx7YXR0cnM6eyJpZCI6InNueWstaWFjLXNwZWNpZmljLXN0cmF0ZWdpZXMifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNzbnlrLWlhYy1zcGVjaWZpYy1zdHJhdGVnaWVzIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIFNueWsgSWFDLXNwZWNpZmljIHN0cmF0ZWdpZXMiKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJUaGUgYmVzdCBzdGFnZSB0byBpbXBsZW1lbnQgU255ayBJbmZyYXN0cnVjdHVyZSBBcyBDb2RlIGluIHlvdXIgcGlwZWxpbmUgYXMgcGFydCBvZiB0aGUgc3RhZ2VzLCBidXQgYWZ0ZXIgdGhlIFNDQSBhbmQgdGhlIENvbnRhaW5lcnMgc3RhZ2UuIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiU255ayBJbmZyYXN0cnVjdHVyZSBhcyBDb2RlIHN1cHBvcnRzOiIpXSksX3ZtLl92KCIgIiksX2MoJ3VsJyxbX2MoJ2xpJyxbX3ZtLl92KCJEZXBsb3ltZW50cywgUG9kcywgYW5kIFNlcnZpY2VzLiIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX3ZtLl92KCJDcm9uSm9icywgSm9icywgU3RhdGVmdWxTZXQsIFJlcGxpY2FTZXQsIERhZW1vblNldCwgYW5kIFJlcGxpY2F0aW9uQ29udHJvbGxlci4iKV0pXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIlNlZSAiKSxfYygnYScse2F0dHJzOnsiaHJlZiI6Imh0dHBzOi8vZG9jcy5zbnlrLmlvL3NueWstaW5mcmFzdHJ1Y3R1cmUtYXMtY29kZS9zbnlrLWNsaS1mb3ItaW5mcmFzdHJ1Y3R1cmUtYXMtY29kZS90ZXN0LXlvdXIta3ViZXJuZXRlcy1maWxlcy13aXRoLW91ci1jbGktdG9vbCIsInRhcmdldCI6Il9ibGFuayIsInJlbCI6Im5vb3BlbmVyIG5vcmVmZXJyZXIifX0sW192bS5fdigiVGVzdCB5b3VyIEt1YmVybmV0ZXMgZmlsZXMgd2l0aCBvdXIgQ0xJIHRvb2wiKSxfYygnT3V0Ym91bmRMaW5rJyldLDEpLF92bS5fdigiIGZvciBtb3JlIGRldGFpbHMuIildKSxfdm0uX3YoIiAiKSxfYygnaDMnLHthdHRyczp7ImlkIjoiY2ktY2QtdHJvdWJsZXNob290aW5nLWFuZC1hZHZhbmNlZC10aXBzIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjY2ktY2QtdHJvdWJsZXNob290aW5nLWFuZC1hZHZhbmNlZC10aXBzIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIENJL0NEIHRyb3VibGVzaG9vdGluZyBhbmQgYWR2YW5jZWQgdGlwcyIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIlRoaXMgc2VjdGlvbiBwcm92aWRlcyBhIGZldyB0aXBzIHRvIGhlbHAgdHJvdWJsZXNob290IG9yIHNjYWxlIENJL0NEIGludGVncmF0aW9ucy4iKV0pLF92bS5fdigiICIpLF9jKCdoNCcse2F0dHJzOnsiaWQiOiJzdGVwLTEtdHJ5LXRvLXJlcGxpY2F0ZS13aXRoLXNueWstY2xpIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjc3RlcC0xLXRyeS10by1yZXBsaWNhdGUtd2l0aC1zbnlrLWNsaSJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiBTdGVwIDE6IFRyeSB0byByZXBsaWNhdGUgd2l0aCBTbnlrIENMSSIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIklmIENMSSBhbmQgcGlwZWxpbmUgYXJlIHJ1bm5pbmcgdGhlIHNhbWUgZW5naW5lLCB0cnkgdG8gY2xvbmUgdGhlIHByb2plY3QgYW5kIHNjYW4gd2l0aCBDTEkuIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiUGxheSB3aXRoIHRoZSBDTEkgZmxhZ3MuIFVzZSB0aGUgU255ayBDTEkgdG9vbCB0byBmaW5kIGFuZCBmaXgga25vd24gdnVsbmVyYWJpbGl0aWVzIGFzIHlvdSBydW4gaXQgaW4gdGhlIHBpcGVsaW5lLiBGb3IgbW9yZSBpbmZvcm1hdGlvbiBzZWUgdGhlICIpLF9jKCdhJyx7YXR0cnM6eyJocmVmIjoiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3NueWsvdXNlci1kb2NzL21haW4vZG9jcy8uLi9zbnlrLWNsaS9jbGktcmVmZXJlbmNlLyIsInRhcmdldCI6Il9ibGFuayIsInJlbCI6Im5vb3BlbmVyIG5vcmVmZXJyZXIifX0sW192bS5fdigiQ0xJIHJlZmVyZW5jZSIpLF9jKCdPdXRib3VuZExpbmsnKV0sMSksX3ZtLl92KCIuIildKSxfdm0uX3YoIiAiKSxfYygnaDQnLHthdHRyczp7ImlkIjoic3RlcC0yLWdldC1sb2dzIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjc3RlcC0yLWdldC1sb2dzIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIFN0ZXAgMjogR2V0IGxvZ3MiKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJJZiB5b3UgYXJlIGFibGUgdG8gcmVwbGljYXRlIHdpdGggQ0xJIGFuZCB0aGUgcHJvYmxlbSBzdGlsbCBleGlzdHMsIGFzayB0aGUgQ0xJIHRvIG91dHB1dCB0aGUgZGVidWcgbG9nZ2luZyB1c2luZyB0aGUgZm9sbG93aW5nIGNvbW1hbmQ6ICIpLF9jKCdjb2RlJyxbX3ZtLl92KCJERUJVRz0qIildKSxfdm0uX3YoIiBvciB1c2UgdGhlICIpLF9jKCdjb2RlJyxbX3ZtLl92KCItZCIpXSksX3ZtLl92KCIgb3B0aW9uIHRvIGNhcHR1cmUgbG9nczoiKV0pLF92bS5fdigiICIpLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoibGFuZ3VhZ2UtIGV4dHJhLWNsYXNzIn0sW19jKCdwcmUnLHtwcmU6dHJ1ZSxhdHRyczp7ImNsYXNzIjoibGFuZ3VhZ2UtdGV4dCJ9fSxbX2MoJ2NvZGUnLFtfdm0uX3YoInNueWsgdGVzdCAtZFxuIildKV0pXSksX2MoJ3AnLFtfdm0uX3YoIm9yIildKSxfdm0uX3YoIiAiKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6Imxhbmd1YWdlLSBleHRyYS1jbGFzcyJ9LFtfYygncHJlJyx7cHJlOnRydWUsYXR0cnM6eyJjbGFzcyI6Imxhbmd1YWdlLXRleHQifX0sW19jKCdjb2RlJyxbX3ZtLl92KCJERUJVRz0qIHNueWsgdGVzdFxuIildKV0pXSksX2MoJ2g0Jyx7YXR0cnM6eyJpZCI6InN0ZXAtMy11c2UtdGhlLWNsaS1pbnN0ZWFkLW9mLXRoZS1wbHVnaW4ifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNzdGVwLTMtdXNlLXRoZS1jbGktaW5zdGVhZC1vZi10aGUtcGx1Z2luIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIFN0ZXAgMzogVXNlIHRoZSBDTEkgaW5zdGVhZCBvZiB0aGUgcGx1Z2luIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiVHJ5IHRvIHJlcGxhY2UgdGhlIG5hdGl2ZSBwbHVnaW4gd2l0aCB0aGUgQ0xJIGJ5IGluc3RhbGxpbmcgdGhlIENMSS4gU2VlICIpLF9jKCdhJyx7YXR0cnM6eyJocmVmIjoiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3NueWsvdXNlci1kb2NzL21haW4vZG9jcy8uLi9zbnlrLWNsaS9pbnN0YWxsLXRoZS1zbnlrLWNsaS8iLCJ0YXJnZXQiOiJfYmxhbmsiLCJyZWwiOiJub29wZW5lciBub3JlZmVycmVyIn19LFtfdm0uX3YoIkluc3RhbGwgdGhlIFNueWsgQ0xJICIpLF9jKCdPdXRib3VuZExpbmsnKV0sMSksX3ZtLl92KCJmb3IgaW5zdHJ1Y3Rpb25zLiIpXSksX3ZtLl92KCIgIiksX2MoJ2gzJyx7YXR0cnM6eyJpZCI6ImNvbW1vbi1mbGFncy1pbi1hLWNpLWNkLWludGVncmF0aW9uIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjY29tbW9uLWZsYWdzLWluLWEtY2ktY2QtaW50ZWdyYXRpb24ifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgQ29tbW9uIGZsYWdzIGluIGEgQ0kvQ0QgaW50ZWdyYXRpb24iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJBbW9uZyB0aGUgbW9zdCBjb21tb24gZmxhZ3MgdXNlZCBpbiBhIENJL0NEIGludGVncmF0aW9uIGFyZSB0aGUgZm9sbG93aW5nOiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfYygnY29kZScsW192bS5fdigiLS0gYWxsLXByb2plY3RzIildKSxfdm0uX3YoIjogQXV0by1kZXRlY3QgYWxsIHByb2plY3RzIGluIHdvcmtpbmcgZGlyZWN0b3J5IildKSxfdm0uX3YoIiAiKSxfYygncCcsW19jKCdjb2RlJyxbX3ZtLl92KCItcCIpXSksX3ZtLl92KCI6IFBydW5lIGRlcGVuZGVuY3kgdHJlZXMsIHJlbW92aW5nIGR1cGxpY2F0ZSBzdWItZGVwZW5kZW5jaWVzLiBDb250aW51ZXMgdG8gZmluZCBhbGwgdnVsbmVyYWJpbGl0aWVzLCBidXQgbWF5IG5vdCBmaW5kIGFsbCBvZiB0aGUgdnVsbmVyYWJsZSBwYXRocy4iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCItLW9yZz08T1JHX0lEPjogU3BlY2lmeSB0aGUgT1JHX0lEIHRvIHJ1biBTbnlrIGNvbW1hbmRzIHRpZWQgdG8gYSBzcGVjaWZpYyBvcmdhbml6YXRpb24uIFRoaXMgaW5mbHVlbmNlcyB3aGVyZSBuZXcgcHJvamVjdHMgYXJlIGNyZWF0ZWQgYWZ0ZXIgcnVubmluZyB0aGUgIiksX2MoJ2NvZGUnLFtfdm0uX3YoIm1vbml0b3IiKV0pLF92bS5fdigiIGNvbW1hbmQsIHNvbWUgZmVhdHVyZXMgYXZhaWxhYmlsaXR5LCBhbmQgcHJpdmF0ZSB0ZXN0cyBsaW1pdHMuIElmIHlvdSBoYXZlIG11bHRpcGxlIG9yZ2FuaXphdGlvbnMsIHlvdSBjYW4gc2V0IGEgZGVmYXVsdCBmcm9tIHRoZSBDTEkgdXNpbmc6IildKSxfdm0uX3YoIiAiKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6Imxhbmd1YWdlLSBleHRyYS1jbGFzcyJ9LFtfYygncHJlJyx7cHJlOnRydWUsYXR0cnM6eyJjbGFzcyI6Imxhbmd1YWdlLXRleHQifX0sW19jKCdjb2RlJyxbX3ZtLl92KCIkIHNueWsgY29uZmlnIHNldCBvcmc9PE9SR19JRD5cbiIpXSldKV0pLF9jKCdwJyxbX3ZtLl92KCJTZXQgYSBkZWZhdWx0IHRvIGVuc3VyZSBhbGwgbmV3bHkgdGVzdGVkIG9yIG1vbml0b3JlZCBwcm9qZWN0cyBhcmUgdGVzdGVkIHVuZGVyIHlvdXIgZGVmYXVsdCBvcmdhbml6YXRpb24uIElmIHlvdSBuZWVkIHRvIG92ZXJyaWRlIHRoZSBkZWZhdWx0LCB1c2UgdGhlICIpLF9jKCdjb2RlJyxbX3ZtLl92KCItLW9yZz08T1JHX0lEPiIpXSksX3ZtLl92KCIgb3B0aW9uLiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkRlZmF1bHQ6ICIpLF9jKCdjb2RlJyxbX3ZtLl92KCI8T1JHX0lEPiIpXSksX3ZtLl92KCIgdGhhdCBpcyB0aGUgY3VycmVudCBwcmVmZXJyZWQgb3JnYW5pemF0aW9uIGluIHlvdXIgIiksX2MoJ2EnLHthdHRyczp7ImhyZWYiOiJodHRwczovL2FwcC5zbnlrLmlvL2FjY291bnQiLCJ0YXJnZXQiOiJfYmxhbmsiLCJyZWwiOiJub29wZW5lciBub3JlZmVycmVyIn19LFtfdm0uX3YoIkFjY291bnQgc2V0dGluZ3MiKSxfYygnT3V0Ym91bmRMaW5rJyldLDEpLF92bS5fdigiLiIpXSksX3ZtLl92KCIgIiksX2MoJ2gzJyx7YXR0cnM6eyJpZCI6InVzZWZ1bC1yZXNvdXJjZXMifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiN1c2VmdWwtcmVzb3VyY2VzIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiICIpLF9jKCdzdHJvbmcnLFtfdm0uX3YoIlVzZWZ1bCByZXNvdXJjZXMiKV0pXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIlRoZSBmb2xsb3dpbmcgcmVwbyBzaGFyZXMgc29tZSBleGFtcGxlcyBvZiBiaW5hcnkgYW5kIG5wbSBpbnRlZ3JhdGlvbnMgZm9yIHZhcmlvdXMgQ0kvQ0QgdG9vbHM6ICIpLF9jKCdhJyx7YXR0cnM6eyJocmVmIjoiaHR0cHM6Ly9naXRodWIuY29tL3NueWstbGFicy9zbnlrLWNpY2QtaW50ZWdyYXRpb24tZXhhbXBsZXMiLCJ0YXJnZXQiOiJfYmxhbmsiLCJyZWwiOiJub29wZW5lciBub3JlZmVycmVyIn19LFtfdm0uX3YoIkdpdEh1YiBDSS9DRCBleGFtcGxlcyIpLF9jKCdPdXRib3VuZExpbmsnKV0sMSldKSxfdm0uX3YoIiAiKSxfYygnaDInLHthdHRyczp7ImlkIjoiY29uZmlndXJlLXlvdXItY29udGludW91cy1pbnRlZ3JhdGlvbiJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI2NvbmZpZ3VyZS15b3VyLWNvbnRpbnVvdXMtaW50ZWdyYXRpb24ifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgQ29uZmlndXJlIHlvdXIgY29udGludW91cyBpbnRlZ3JhdGlvbiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIlRvIGNvbnRpbnVvdXNseSBhdm9pZCBrbm93biB2dWxuZXJhYmlsaXRpZXMgaW4geW91ciBkZXBlbmRlbmNpZXMsIGludGVncmF0ZSBTbnlrIGludG8geW91ciBjb250aW51b3VzIGludGVncmF0aW9uIChhLmsuYS4gYnVpbGQpIHN5c3RlbS4gSW4gYWRkaXRpb24gdG8gdGhlIGRvY3VtZW50YXRpb24gaGVyZSwgeW91J3JlIGFsc28gaW52aXRlZCB0byBjaGVjayBvdXQgb3VyIGludGVncmF0aW9uIGNvbmZpZ3VyYXRpb24gZXhhbXBsZXMgaW4gb3VyIEdpdEh1YiByZXBvc2l0b3J5LiIpXSksX3ZtLl92KCIgIiksX2MoJ2gzJyx7YXR0cnM6eyJpZCI6InNldC11cC1hdXRvbWF0aWMtbW9uaXRvcmluZyJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI3NldC11cC1hdXRvbWF0aWMtbW9uaXRvcmluZyJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiBTZXQgdXAgYXV0b21hdGljIG1vbml0b3JpbmciKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJJZiB5b3UgbW9uaXRvciBhIHByb2plY3Qgd2l0aCBTbnlrLCB5b3XigJlsbCBnZXQgbm90aWZpZWQgaWYgeW91ciBwcm9qZWN04oCZcyBkZXBlbmRlbmNpZXMgYXJlIGFmZmVjdGVkIGJ5IG5ld2x5IGRpc2Nsb3NlZCB2dWxuZXJhYmlsaXRpZXMuIFRvIG1ha2Ugc3VyZSB0aGUgbGlzdCBvZiBkZXBlbmRlbmNpZXMgd2UgaGF2ZSBmb3IgeW91ciBwcm9qZWN0IGlzIHVwIHRvIGRhdGUsIHJlZnJlc2ggaXQgY29udGludW91c2x5IGJ5IHJ1bm5pbmcgU255ayBtb25pdG9yIGluIHlvdXIgZGVwbG95bWVudCBwcm9jZXNzLiBDb25maWd1cmUgeW91ciBlbnZpcm9ubWVudCB0byBpbmNsdWRlIHRoZSBTTllLX1RPS0VOIGVudmlyb25tZW50IHZhcmlhYmxlLiBZb3UgY2FuIGZpbmQgeW91ciBBUEkgdG9rZW4gb24gdGhlIGRhc2hib2FyZCBhZnRlciBsb2dnaW5nIGluLiIpXSksX3ZtLl92KCIgIiksX2MoJ2gzJyx7YXR0cnM6eyJpZCI6ImFwaS10b2tlbi1jb25maWd1cmF0aW9uIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjYXBpLXRva2VuLWNvbmZpZ3VyYXRpb24ifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgQVBJIHRva2VuIGNvbmZpZ3VyYXRpb24iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJNYWtlIHN1cmUgeW91IGRvbuKAmXQgY2hlY2sgeW91ciBBUEkgdG9rZW4gaW50byBzb3VyY2UgY29udHJvbCwgdG8gYXZvaWQgZXhwb3NpbmcgaXQgdG8gb3RoZXJzLiBJbnN0ZWFkLCB1c2UgeW91ciBDSSBlbnZpcm9ubWVudCB2YXJpYWJsZXMgdG8gY29uZmlndXJlIGl0LiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIlNlZSBndWlkYW5jZSBmb3IgaG93IHRvIGRvIHRoaXMgb246IildKSxfdm0uX3YoIiAiKSxfYygndWwnLFtfYygnbGknLFtfYygnYScse2F0dHJzOnsiaHJlZiI6Imh0dHBzOi8vZG9jcy50cmF2aXMtY2kuY29tL3VzZXIvZW52aXJvbm1lbnQtdmFyaWFibGVzLyIsInRhcmdldCI6Il9ibGFuayIsInJlbCI6Im5vb3BlbmVyIG5vcmVmZXJyZXIifX0sW192bS5fdigiVHJhdmlzIiksX2MoJ091dGJvdW5kTGluaycpXSwxKV0pLF92bS5fdigiICIpLF9jKCdsaScsW19jKCdhJyx7YXR0cnM6eyJocmVmIjoiaHR0cHM6Ly9jaXJjbGVjaS5jb20vZG9jcy9lbnZpcm9ubWVudC12YXJpYWJsZXMvIiwidGFyZ2V0IjoiX2JsYW5rIiwicmVsIjoibm9vcGVuZXIgbm9yZWZlcnJlciJ9fSxbX3ZtLl92KCJDaXJjbGUiKSxfYygnT3V0Ym91bmRMaW5rJyldLDEpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX2MoJ2EnLHthdHRyczp7ImhyZWYiOiJodHRwczovL2NvZGVzaGlwLmNvbS9kb2N1bWVudGF0aW9uL2NvbnRpbnVvdXMtaW50ZWdyYXRpb24vc2V0LWVudmlyb25tZW50LXZhcmlhYmxlcy8iLCJ0YXJnZXQiOiJfYmxhbmsiLCJyZWwiOiJub29wZW5lciBub3JlZmVycmVyIn19LFtfdm0uX3YoIkNvZGVzaGlwIiksX2MoJ091dGJvdW5kTGluaycpXSwxKV0pXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIllvdSBjYW4gZmluZCBvdGhlcnMgdGhyb3VnaCBhbiBlYXN5ICIpLF9jKCdhJyx7YXR0cnM6eyJocmVmIjoiaHR0cHM6Ly93d3cuZ29vZ2xlLmNvLnVrL3NlYXJjaD9xPXNldHRpbmcrdXArZW52K3ZhcmlhYmxlcytpbitDSSIsInRhcmdldCI6Il9ibGFuayIsInJlbCI6Im5vb3BlbmVyIG5vcmVmZXJyZXIifX0sW192bS5fdigiR29vZ2xlIHNlYXJjaCIpLF9jKCdPdXRib3VuZExpbmsnKV0sMSksX3ZtLl92KCIuIiksX2MoJ2JyJyksX3ZtLl92KCJcbkxlYXJuIG1vcmUgYWJvdXQgIiksX2MoJ2EnLHthdHRyczp7ImhyZWYiOiJodHRwczovL3NueWsuaW8vbGVhcm4vd2hhdC1pcy1jaS1jZC1waXBlbGluZS1hbmQtdG9vbHMtZXhwbGFpbmVkLyIsInRhcmdldCI6Il9ibGFuayIsInJlbCI6Im5vb3BlbmVyIG5vcmVmZXJyZXIifX0sW192bS5fdigiQ0kvQ0QiKSxfYygnT3V0Ym91bmRMaW5rJyldLDEpLF92bS5fdigiLiIpXSldKX0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}