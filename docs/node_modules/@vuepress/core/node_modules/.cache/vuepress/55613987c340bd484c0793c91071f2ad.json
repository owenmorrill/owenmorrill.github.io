{"remainingRequest":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/owenmorrill/Sites/vue-docs/docs/src/snyk/snyk-container/ecr-image-scanning/configure-integration-for-amazon-elastic-container-registry-ecr.md?vue&type=template&id=7a357ede&","dependencies":[{"path":"/Users/owenmorrill/Sites/vue-docs/docs/src/snyk/snyk-container/ecr-image-scanning/configure-integration-for-amazon-elastic-container-registry-ecr.md","mtime":1644439893085},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js","mtime":1647884535821},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1647884535666},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js","mtime":1647884535821},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/index.js","mtime":1647884534539},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/@vuepress/markdown-loader/index.js","mtime":1647884535441}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHsKICB2YXIgX3ZtID0gdGhpcwogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogIHJldHVybiBfYygKICAgICJDb250ZW50U2xvdHNEaXN0cmlidXRvciIsCiAgICB7IGF0dHJzOiB7ICJzbG90LWtleSI6IF92bS4kcGFyZW50LnNsb3RLZXkgfSB9LAogICAgWwogICAgICBfYygKICAgICAgICAiaDEiLAogICAgICAgIHsKICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgIGlkOiAiY29uZmlndXJlLWludGVncmF0aW9uLWZvci1hbWF6b24tZWxhc3RpYy1jb250YWluZXItcmVnaXN0cnktZWNyIiwKICAgICAgICAgIH0sCiAgICAgICAgfSwKICAgICAgICBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgImEiLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgaHJlZjogIiNjb25maWd1cmUtaW50ZWdyYXRpb24tZm9yLWFtYXpvbi1lbGFzdGljLWNvbnRhaW5lci1yZWdpc3RyeS1lY3IiLAogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICAgICksCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICIgQ29uZmlndXJlIGludGVncmF0aW9uIGZvciBBbWF6b24gRWxhc3RpYyBDb250YWluZXIgUmVnaXN0cnkgKEVDUikiCiAgICAgICAgICApLAogICAgICAgIF0KICAgICAgKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJFbmFibGUgaW50ZWdyYXRpb24gYmV0d2VlbiBvbmUgQW1hem9uIEVDUiByZWdpc3RyeSBhbmQgYSBTbnlrIG9yZ2FuaXphdGlvbiwgYW5kIHN0YXJ0IG1hbmFnaW5nIHlvdXIgaW1hZ2Ugc2VjdXJpdHkuIFRvIGludGVncmF0ZSB3aXRoIG11bHRpcGxlIHJlZ2lzdHJpZXMsIGNyZWF0ZSBhIHVuaXF1ZSBvcmdhbml6YXRpb24gZm9yIGVhY2ggb25lLiIKICAgICAgICApLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgW19jKCJzdHJvbmciLCBbX3ZtLl92KCJBdXRvbWF0ZWQgUHJvY2VzczoiKV0pXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiWW91IGhhdmUgdGhlIG9wdGlvbiBvZiBlc3RhYmxpc2hpbmcgY3Jvc3MtYWNjb3VudCBhY2Nlc3MgdG8gZW5hYmxlIFNueWsncyBBbWF6b24gRUNSIGludGVncmF0aW9uIGFzIGEgMS1jbGljayBkZXBsb3ltZW50LiBUaGlzIG9wdGlvbnMgaXMgYXZhaWxhYmxlIGFzIGFuIG9mZmljaWFsICIKICAgICAgICApLAogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgewogICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgIGhyZWY6ICJodHRwczovL2dpdGh1Yi5jb20vYXdzLXF1aWNrc3RhcnQvcXVpY2tzdGFydC1zbnlrLXNlY3VyaXR5IiwKICAgICAgICAgICAgICB0YXJnZXQ6ICJfYmxhbmsiLAogICAgICAgICAgICAgIHJlbDogIm5vb3BlbmVyIG5vcmVmZXJyZXIiLAogICAgICAgICAgICB9LAogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoIkFXUyBRdWljayBTdGFydCIpLCBfYygiT3V0Ym91bmRMaW5rIildLAogICAgICAgICAgMQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCIgYW5kIGVsaW1pbmF0ZXMgdGhlIG5lZWQgZm9yIG1hbnVhbCBjb25maWd1cmF0aW9uLiIpLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICBhdHRyczogewogICAgICAgICAgICBzcmM6ICJodHRwczovL3N1cHBvcnQuc255ay5pby9oYy9hcnRpY2xlX2F0dGFjaG1lbnRzLzM2MDAxMDAyMDU1Ny9xdWlja3N0YXJ0LXNueWstc2VjdXJpdHktZWNyLnBuZyIsCiAgICAgICAgICAgIGFsdDogInF1aWNrc3RhcnQtc255ay1zZWN1cml0eS1lY3IucG5nIC0gUkVQTEFDRSBUSElTIElNQUdFIC0gWkVOREVTSyBJTUFHRSAtIFVQREFURSBNRSEiLAogICAgICAgICAgfSwKICAgICAgICB9KSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoIllvdSB3aWxsIG5lZWQgeW91ciBTbnlrICIpLAogICAgICAgIF9jKCJzdHJvbmciLCBbX3ZtLl92KCJPcmdhbml6YXRpb24gSUQiKV0pLAogICAgICAgIF92bS5fdigiIGFuZCBBV1MgSUFNICIpLAogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgewogICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgIGhyZWY6ICJodHRwczovL2RvY3MuYXdzLmFtYXpvbi5jb20vSUFNL2xhdGVzdC9Vc2VyR3VpZGUvcmVmZXJlbmNlX2lkZW50aWZpZXJzLmh0bWwjaWRlbnRpZmllcnMtYXJucyIsCiAgICAgICAgICAgICAgdGFyZ2V0OiAiX2JsYW5rIiwKICAgICAgICAgICAgICByZWw6ICJub29wZW5lciBub3JlZmVycmVyIiwKICAgICAgICAgICAgfSwKICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl92KCJyb2xlIEFSTiIpLCBfYygiT3V0Ym91bmRMaW5rIildLAogICAgICAgICAgMQogICAgICAgICksCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIiB0byBjb21wbGV0ZSB0aGUgaW50ZWdyYXRpb24uIFRoZSByb2xlIEFSTiB3aWxsIGJlIHByb3ZpZGVkIGZvciB5b3UgaW4gdGhlIEFXUyBDbG91ZEZvcm1hdGlvbiBDb25zb2xlJ3MgT3V0cHV0IHRhYi4iCiAgICAgICAgKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoIlsiKSwKICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgc3JjOiAiaHR0cHM6Ly9zdXBwb3J0LnNueWsuaW8vaGMvYXJ0aWNsZV9hdHRhY2htZW50cy8zNjAwMTAxMjA3OTgvY2xvdWRmb3JtYXRpb24tbGF1bmNoLXN0YWNrLnBuZyIsCiAgICAgICAgICAgIGFsdDogImNsb3VkZm9ybWF0aW9uLWxhdW5jaC1zdGFjay5wbmcgLSBSRVBMQUNFIFRISVMgSU1BR0UgLSBaRU5ERVNLIElNQUdFIC0gVVBEQVRFIE1FISIsCiAgICAgICAgICB9LAogICAgICAgIH0pLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJdKGh0dHBzOi8vdXMtZWFzdC0yLmNvbnNvbGUuYXdzLmFtYXpvbi5jb20vY2xvdWRmb3JtYXRpb24vaG9tZT9yZWdpb249dXMtZWFzdC0yIy9zdGFja3MvY3JlYXRlL3RlbXBsYXRlP3N0YWNrTmFtZT1TbnlrLVNlY3VyaXR5LUVDUiZ0ZW1wbGF0ZVVSTD1odHRwczovL2F3cy1xdWlja3N0YXJ0LnMzLmFtYXpvbmF3cy5jb20vcXVpY2tzdGFydC1zbnlrLXNlY3VyaXR5L3RlbXBsYXRlcy9zbnlrLWVjci55YW1sKSIKICAgICAgICApLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgW19jKCJzdHJvbmciLCBbX3ZtLl92KCJNYW51YWwgUHJvY2VzczoiKV0pXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiVG8gZW5hYmxlIGludGVncmF0aW9uLCB5b3UgbXVzdCBmaXJzdCBjcmVhdGUgYSByZWFkLW9ubHkgQVdTIElkZW50aXR5IGFuZCBBY2Nlc3MgTWFuYWdlbWVudCAoSUFNKSByb2xlLiBUaGUgcm9sZSBkZWxlZ2F0ZXMgcmVhZC1vbmx5IGFjY2VzcyB0byBhbGwgcmVwb3NpdG9yaWVzIGluIHlvdXIgcmVnaXN0cnkgZm9yIFNueWsgcGVyIG9yZ2FuaXphdGlvbiBieSBpbmRpY2F0aW5nIHRoZSBsaXN0IG9mIHBlcm1pdHRlZCBTbnlrLWFzc2lnbmVkIG9yZ2FuaXphdGlvbiBJRHMuIgogICAgICAgICksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIlRoZXJlYWZ0ZXIsIHdoZW4gaW50ZWdyYXRpbmcgYWRkaXRpb25hbCBvcmdhbml6YXRpb25zLCB5b3UgY2FuIHNpbXBseSBhZGQgdGhlIGFkZGl0aW9uYWwgb3JnYW5pemF0aW9uIElEcyBhcyBuZWNlc3NhcnkuIgogICAgICAgICksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbX3ZtLl92KCJGb2xsb3cgdGhlc2Ugc3RlcHMgdG8gc2V0IHVwIHlvdXIgaW50ZWdyYXRpb246IildKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgW19jKCJiciIpLCBfYygiYnIiKV0pLAogICAgICBfYygiaHIiKSwKICAgICAgX2MoInAiKSwKICAgIF0KICApCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}