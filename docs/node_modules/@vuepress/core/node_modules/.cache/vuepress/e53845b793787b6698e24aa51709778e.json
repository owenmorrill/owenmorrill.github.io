{"remainingRequest":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/owenmorrill/Sites/vue-docs/docs/src/snyk/products/snyk-open-source/open-source-basics/fix-pull-requests-for-known-vulnerabilities-backlog.md?vue&type=template&id=340ea0b6&","dependencies":[{"path":"/Users/owenmorrill/Sites/vue-docs/docs/src/snyk/products/snyk-open-source/open-source-basics/fix-pull-requests-for-known-vulnerabilities-backlog.md","mtime":1647961253548},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js","mtime":1647884535821},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1647884535666},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js","mtime":1647884535821},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/index.js","mtime":1647884534539},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/@vuepress/markdown-loader/index.js","mtime":1647884535441}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ0NvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yJyx7YXR0cnM6eyJzbG90LWtleSI6X3ZtLiRwYXJlbnQuc2xvdEtleX19LFtfYygnaDEnLHthdHRyczp7ImlkIjoiZml4LXB1bGwtcmVxdWVzdHMtZm9yLWtub3duLXZ1bG5lcmFiaWxpdGllcy1iYWNrbG9nIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjZml4LXB1bGwtcmVxdWVzdHMtZm9yLWtub3duLXZ1bG5lcmFiaWxpdGllcy1iYWNrbG9nIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIEZpeCBwdWxsIHJlcXVlc3RzIGZvciBrbm93biB2dWxuZXJhYmlsaXRpZXMgKGJhY2tsb2cpIildKSxfdm0uX3YoIiAiKSxfYygncCcsW19jKCdzdHJvbmcnLFtfdm0uX3YoIktub3duIHZ1bG5lcmFiaWxpdGllcyIpXSksX3ZtLl92KCIgcmV0cmlldmUgdnVsbmVyYWJpbGl0aWVzIGZyb20gdGhlIHByb2plY3QncyBiYWNrbG9nLiBUaGVzZSBhcmUgdGhlIHByZXZpb3VzbHkgZGVjbGFyZWQgdnVsbmVyYWJpbGl0aWVzLiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIlRoZSBmb2xsb3dpbmcgcnVsZXMgYXJlIGFwcGxpZWQgdG8gYXV0b21hdGljIFBSIGNyZWF0aW9uIGZvciB2dWxuZXJhYmlsaXRpZXM6IildKSxfdm0uX3YoIiAiKSxfYygndWwnLFtfYygnbGknLFtfdm0uX3YoIlB1bGwgcmVxdWVzdHMgYXJlIGNyZWF0ZWQgYmFzZWQgb24gdGhlICIpLF9jKCdzdHJvbmcnLFtfdm0uX3YoIlRlc3QgJiBBdXRvbWF0ZWQgUHVsbCBSZXF1ZXN0IEZyZXF1ZW5jeSIpXSksX3ZtLl92KCIgKHNlZSBzY3JlZW5zaG90IGJlbG93KSBzZXR0aW5nIildKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfdm0uX3YoIklmIGEgc2NhbiBpcyBtYW51YWxseSBydW4gKHlvdSBjbGlja2VkICIpLF9jKCdzdHJvbmcnLFtfdm0uX3YoIlJldGVzdCBub3ciKV0pLF92bS5fdigiIGZvciB0aGUgcHJvamVjdCksIHRoZSAyNC1ob3VyIHdpbmRvdyBpcyBtYXJrZWQgYXMgaGF2aW5nIGJlZW4gcnVuIGFuZCBubyBhdXRvbWF0aWMgUFIgaXMgY3JlYXRlZCB1bnRpbCB0aGUgbmV4dCBhdXRvbWF0ZWQgc2NhbiBydW5zIildKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfdm0uX3YoIk9uZSBwdWxsIHJlcXVlc3QgaXMgY3JlYXRlZCBwZXIgcHJvamVjdCAocHJpb3JpdHkgc2NvcmUgb2YgIiksX2MoJ3N0cm9uZycsW192bS5fdigiNzAwIGFuZCBhYm92ZSBvbmx5IildKSxfdm0uX3YoIikiKV0pXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIihJTUFHRSBSRU1PVkVEISkgLSAoaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3NueWsvdXNlci1kb2NzL21haW4vZG9jcy8uZ2l0Ym9vay9hc3NldHMvb3MxLnBuZykiKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJUbyBrbm93IHdoZW4geW91ciBsYXN0IDI0LWhvdXIgd2luZG93IHdhcyBraWNrZWQgb2ZmLCBjaGVjayB0aGUgcHJvamVjdCBwYWdlIGZvciAiKSxfYygnc3Ryb25nJyxbX3ZtLl92KCJTbmFwc2hvdCB0YWtlbiBieSByZWN1cnJpbmcgdGVzdCIpXSksX3ZtLl92KCItLWFsc28gY2hlY2sgeW91ciBlbWFpbCBmb3IgIiksX2MoJ3N0cm9uZycsW192bS5fdigiW3NueWtdIFZ1bG5lcmFiaWxpdHkgYWxlcnQiKV0pLF92bS5fdigiIGZvciBzcGVjaWZpYyBzY2FuIHJlc3VsdHM6IildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiKElNQUdFIFJFTU9WRUQhKSAtIChodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vc255ay91c2VyLWRvY3MvbWFpbi9kb2NzLy5naXRib29rL2Fzc2V0cy9vczIucG5nKSIpXSksX3ZtLl92KCIgIiksX2MoJ2gyJyx7YXR0cnM6eyJpZCI6ImVuYWJsZS1vci1kaXNhYmxlLXB1bGwtcmVxdWVzdHMtZm9yLWludGVncmF0aW9ucyJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI2VuYWJsZS1vci1kaXNhYmxlLXB1bGwtcmVxdWVzdHMtZm9yLWludGVncmF0aW9ucyJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiBFbmFibGUgb3IgZGlzYWJsZSBwdWxsIHJlcXVlc3RzIGZvciBpbnRlZ3JhdGlvbnMiKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJUbyBlbmFibGUgYXQgdGhlIGdsb2JhbCBpbnRlZ3JhdGlvbiBsZXZlbDoiKV0pLF92bS5fdigiICIpLF9jKCdvbCcsW19jKCdsaScsW192bS5fdigiQ2xpY2sgb24gc2V0dGluZ3MgKElNQUdFIFJFTU9WRUQhKSAtIChodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vc255ay91c2VyLWRvY3MvbWFpbi9kb2NzLy5naXRib29rL2Fzc2V0cy9jb2dfaWNvbi5wbmcpID4gIiksX2MoJ3N0cm9uZycsW192bS5fdigiSW50ZWdyYXRpb25zIildKV0pLF92bS5fdigiICIpLF9jKCdsaScsW192bS5fdigiU2VsZWN0IGFuIFNDTSBpbnRlZ3JhdGlvbiAoZm9yIGV4YW1wbGUsIEdpdEh1YikiKV0pLF92bS5fdigiICIpLF9jKCdsaScsW192bS5fdigiRW5hYmxlICIpLF9jKCdzdHJvbmcnLFtfdm0uX3YoIktub3duIHZ1bG5lcmFiaWxpdGllcyAoYmFja2xvZykiKV0pXSldKSxfdm0uX3YoIiAiKSxfYygncCcsW19jKCdzdHJvbmcnLFtfdm0uX3YoIkFwcGx5IGNoYW5nZXMgdG8gYWxsIG92ZXJyaWRkZW4gcHJvamVjdHMiKV0pLF92bS5fdigiIHdpbGwgdXBkYXRlIGFsbCBvZiB0aGUgaW5kaXZpZHVhbCBwcm9qZWN0IHNldHRpbmdzIGZvciBcIkF1dG9tYXRpYyBmaXggcHVsbCByZXF1ZXN0c1wiLiBJZiBhIHByb2plY3QgcHJldmlvdXNseSBoYWQgaXRzIG93biBzZXR0aW5ncyBmb3IgdGhpcywgY2xpY2tpbmcgb24gdGhpcyBidXR0b24gd2lsbCBvdmVycmlkZSBpdCB3aXRoIHRoZSBnbG9iYWwgc2V0dGluZy4iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCIoSU1BR0UgUkVNT1ZFRCEpIC0gKGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9zbnlrL3VzZXItZG9jcy9tYWluL2RvY3MvLmdpdGJvb2svYXNzZXRzL3NjcmVlbl9zaG90XzIwMjEtMDUtMjRfYXRfMTIuMjMuMzhfcG0ucG5nKSIpXSksX3ZtLl92KCIgIiksX2MoJ2gzJyx7YXR0cnM6eyJpZCI6ImVuYWJsZS1vci1kaXNhYmxlLXB1bGwtcmVxdWVzdHMtZm9yLWEtc2luZ2xlLXByb2plY3QifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNlbmFibGUtb3ItZGlzYWJsZS1wdWxsLXJlcXVlc3RzLWZvci1hLXNpbmdsZS1wcm9qZWN0In19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIEVuYWJsZSBvciBkaXNhYmxlIHB1bGwgcmVxdWVzdHMgZm9yIGEgc2luZ2xlIHByb2plY3QiKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJFbmFibGluZy9kaXNhYmxpbmcgYXQgYSBwcm9qZWN0IGxldmVsIHdpbGwgb3ZlcnJpZGUgdGhpcyBzaW5nbGUgcHJvamVjdCByYXRoZXIgdGhhbiBpbmhlcml0aW5nIGl0IGZyb20gdGhlIGdsb2JhbCBpbnRlZ3JhdGlvbiBzZXR0aW5nLiIpXSksX3ZtLl92KCIgIiksX2MoJ29sJyxbX2MoJ2xpJyxbX3ZtLl92KCJOYXZpZ2F0ZSB0byB0aGUgcHJvamVjdCBhbmQgc2VsZWN0ICIpLF9jKCdzdHJvbmcnLFtfdm0uX3YoIlNldHRpbmdzIildKV0pLF92bS5fdigiICIpLF9jKCdsaScsW192bS5fdigiU2VsZWN0ICIpLF9jKCdzdHJvbmcnLFtfdm0uX3YoIkdpdEh1YiBpbnRlZ3JhdGlvbiIpXSldKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfdm0uX3YoIlVuZGVyIHRoZSAiKSxfYygnc3Ryb25nJyxbX3ZtLl92KCJBdXRvbWF0aWMgZml4IHB1bGwgcmVxdWVzdHMiKV0pLF92bS5fdigiIHNlY3Rpb246XG4iKSxfYygndWwnLFtfYygnbGknLFtfdm0uX3YoIlNlbGVjdCB0byAiKSxfYygnc3Ryb25nJyxbX3ZtLl92KCJDdXN0b21pemUgZm9yIG9ubHkgdGhpcyBwcm9qZWN0IildKV0pLF92bS5fdigiICIpLF9jKCdsaScsW192bS5fdigiRW5hYmxlICIpLF9jKCdzdHJvbmcnLFtfdm0uX3YoIktub3duIHZ1bG5lcmFiaWxpdGllcyAoYmFja2xvZykiKV0pXSldKV0pXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIihJTUFHRSBSRU1PVkVEISkgLSAoaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3NueWsvdXNlci1kb2NzL21haW4vZG9jcy8uZ2l0Ym9vay9hc3NldHMvb3MzLnBuZykiKV0pXSl9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}