{"remainingRequest":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/owenmorrill/Sites/vue-docs/docs/src/docs/features/fixing-and-prioritizing-issues/starting-to-fix-vulnerabilities/merge-advice.md?vue&type=template&id=2201576b&","dependencies":[{"path":"/Users/owenmorrill/Sites/vue-docs/docs/src/docs/features/fixing-and-prioritizing-issues/starting-to-fix-vulnerabilities/merge-advice.md","mtime":1647024045476},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js","mtime":1647884535821},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1647884535666},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js","mtime":1647884535821},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/index.js","mtime":1647884534539},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/@vuepress/markdown-loader/index.js","mtime":1647884535441}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHsKICB2YXIgX3ZtID0gdGhpcwogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogIHJldHVybiBfYygKICAgICJDb250ZW50U2xvdHNEaXN0cmlidXRvciIsCiAgICB7IGF0dHJzOiB7ICJzbG90LWtleSI6IF92bS4kcGFyZW50LnNsb3RLZXkgfSB9LAogICAgWwogICAgICBfYygiaDEiLCB7IGF0dHJzOiB7IGlkOiAibWVyZ2UtYWR2aWNlIiB9IH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwgYXR0cnM6IHsgaHJlZjogIiNtZXJnZS1hZHZpY2UiIH0gfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIE1lcmdlIGFkdmljZSIpLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJNZXJnZSBBZHZpY2UgaXMgYSBiYWRnZSB3ZSBkaXNwbGF5IG9uIHB1bGwgcmVxdWVzdHMgdG8gaW5kaWNhdGUgaG93IGNvbmZpZGVudCB3ZSBhcmUgdGhhdCBtZXJnaW5nIHRoZSBwdWxsIHJlcXVlc3Qgd2lsbCBub3QgcmVzdWx0IGluIGFueSBicmVha2luZyBjaGFuZ2VzLiIKICAgICAgICApLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoMiIsIHsgYXR0cnM6IHsgaWQ6ICJob3ctaXQtcy1jYWxjdWxhdGVkIiB9IH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogIiNob3ctaXQtcy1jYWxjdWxhdGVkIiB9LAogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIEhvdyBpdCdzIGNhbGN1bGF0ZWQiKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiV2UgZGV0ZXJtaW5lIHRoaXMgYWR2aWNlIGJhc2VkIG9uIGhvdyB3ZWxsIHRoYXQgc2FtZSBjaGFuZ2UgaGFzIHBlcmZvcm1lZCBvbiBvdGhlciBTbnlrIHVzZXJzJyBwdWxsIHJlcXVlc3RzIOKAkyBkaWQgdGhlaXIgdGVzdHMgb24gdGhlIFBSIHBhc3Mgb3IgZmFpbD8gV2FzIHRoZSBjaGFuZ2Ugc3Vic2VxdWVudGx5IHJvbGxlZCBiYWNrPyBEaWQgdGhleSBtZXJnZSBzdWNjZXNzZnVsbHk/IgogICAgICAgICksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgyIiwgeyBhdHRyczogeyBpZDogImhvdy1pdC1zLXNob3duIiB9IH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwgYXR0cnM6IHsgaHJlZjogIiNob3ctaXQtcy1zaG93biIgfSB9LAogICAgICAgICAgW192bS5fdigiIyIpXQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCIgSG93IGl0J3Mgc2hvd246IiksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgJ09uY2Ugd2VcJ3ZlIGdhdGhlcmVkIGVub3VnaCBkYXRhLCB3ZSBzaG93IGEgYmFkZ2Ugb24gdGhlIFBSIC0gZWl0aGVyIGdpdmluZyB0aGUgYWR2aWNlICJyZXZpZXcgcmVjb21tZW5kZWQiLCBvciAiaGlnaCBjaGFuY2Ugb2Ygc3VjY2VzcyIuJwogICAgICAgICksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIiFbXSg8Li4vLi4vLi4vLmdpdGJvb2svYXNzZXRzL21lcmdlLWFkdmljZS1yZXZpZXctcmVjb21tZW5kZWQgKDIpICgyKSAoMikgKDEpICgxKSAoMSkgKDEpICgxKSAoMSkgKDEpICgxKSAoMSkgKDEwKSAoMjUpLnBuZz4pIgogICAgICAgICksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIiFbXSg8Li4vLi4vLi4vLmdpdGJvb2svYXNzZXRzL2FkdmljZS1ncmVlbiAoMSkgKDIpICgyKSAoNCkgKDMpICgxKSAoMSkgKDEpICgxKSAoMSkgKDEpICgxKSAoMSkgKDEpICgxMCkgKDE0KS5wbmc+KSIKICAgICAgICApLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICdJZiB3ZSBoYXZlblwndCB5ZXQgYmVlbiBhYmxlIHRvIGNvbGxlY3QgZW5vdWdoIGRhdGEgdG8gZ2l2ZSB0cnVzdHdvcnRoeSBhZHZpY2UsIHdlIHNob3cgdGhlIG1lc3NhZ2UgIm5vdCBlbm91Z2ggZGF0YSIuIE9uY2Ugd2VcJ3ZlIGdhdGhlcmVkIGVub3VnaCBkYXRhLCB3ZSB1cGRhdGUgdGhpcyBiYWRnZSBhdXRvbWF0aWNhbGx5IHdpdGggb3VyIHJlY29tbWVuZGF0aW9uIOKAkyBmb3IgdGhhdCByZWFzb24sIGEgYmFkZ2UgdGhhdCB3YXMgZGlzcGxheWluZyAibm90IGVub3VnaCBkYXRhIiBtaWdodCBsYXRlciBzaG93IGFkdmljZS4nCiAgICAgICAgKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiIVtdKDwuLi8uLi8uLi8uZ2l0Ym9vay9hc3NldHMvbWVyZ2UtYWR2aWNlICgyKSAoMikgKDQpICgyKSAoMSkgKDEpICgxKSAoMSkgKDEpICgxKSAoMSkgKDEpICgxKSAoMSkgKDEwKSAoMjIpLnBuZz4pIgogICAgICAgICksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgyIiwgeyBhdHRyczogeyBpZDogImF2YWlsYWJpbGl0eSIgfSB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsIGF0dHJzOiB7IGhyZWY6ICIjYXZhaWxhYmlsaXR5IiB9IH0sCiAgICAgICAgICBbX3ZtLl92KCIjIildCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIiBBdmFpbGFiaWxpdHk6IiksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIkF0IHRoZSBtb21lbnQsIG1lcmdlIGFkdmljZSBiYWRnZXMgYXJlIG9ubHkgYXZhaWxhYmxlIGZvciBZYXJuIGFuZCBucG0sIHdoZXJlIGEgc2luZ2xlIHBhY2thZ2UgaXMgYmVpbmcgdXBncmFkZWQuIE1vcmUgc3VwcG9ydCBpcyBjb21pbmcgc29vbi4iCiAgICAgICAgKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiQWxsIFNueWstc3VwcG9ydGVkIHNvdXJjZSBjb250cm9sIGludGVncmF0aW9ucyBhcmUgc3VwcG9ydGVkIGZvciBtZXJnZSBhZHZpY2UuIgogICAgICAgICksCiAgICAgIF0pLAogICAgXQogICkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gW10KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}