{"remainingRequest":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/owenmorrill/Sites/vue-docs/docs/src/guide/partner-workshops/atlassian/devsecops-bitbucket-cloud/module-3/adding-kubernetes-workloads.md?vue&type=template&id=41275e46&","dependencies":[{"path":"/Users/owenmorrill/Sites/vue-docs/docs/src/guide/partner-workshops/atlassian/devsecops-bitbucket-cloud/module-3/adding-kubernetes-workloads.md","mtime":1644439893003},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js","mtime":1647884535821},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1647884535666},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js","mtime":1647884535821},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/index.js","mtime":1647884534539},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/@vuepress/markdown-loader/index.js","mtime":1647884535441}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHsKICB2YXIgX3ZtID0gdGhpcwogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogIHJldHVybiBfYygKICAgICJDb250ZW50U2xvdHNEaXN0cmlidXRvciIsCiAgICB7IGF0dHJzOiB7ICJzbG90LWtleSI6IF92bS4kcGFyZW50LnNsb3RLZXkgfSB9LAogICAgWwogICAgICBfYygiaDEiLCB7IGF0dHJzOiB7IGlkOiAiYWRkaW5nLWt1YmVybmV0ZXMtd29ya2xvYWRzIiB9IH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogIiNhZGRpbmcta3ViZXJuZXRlcy13b3JrbG9hZHMiIH0sCiAgICAgICAgICB9LAogICAgICAgICAgW192bS5fdigiIyIpXQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCIgQWRkaW5nIEt1YmVybmV0ZXMgd29ya2xvYWRzIiksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgyIiwgeyBhdHRyczogeyBpZDogImJhY2tncm91bmQiIH0gfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgeyBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLCBhdHRyczogeyBocmVmOiAiI2JhY2tncm91bmQiIH0gfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIEJhY2tncm91bmQiKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgc3JjOiAiaHR0cHM6Ly9wYXJ0bmVyLXdvcmtzaG9wLWFzc2V0cy5zMy51cy1lYXN0LTIuYW1hem9uYXdzLmNvbS9rdWJlcm5ldGVzLTAxLnBuZyIsCiAgICAgICAgICAgIGFsdDogIiIsCiAgICAgICAgICB9LAogICAgICAgIH0pLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigiSW4gdGhlIFNueWsgQmxvZywgIiksCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7CiAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgaHJlZjogImh0dHBzOi8vc255ay5pby9ibG9nL2Zyb20taW1hZ2Utc2VjdXJpdHktdG8td29ya2xvYWQtc2VjdXJpdHkvIiwKICAgICAgICAgICAgICB0YXJnZXQ6ICJfYmxhbmsiLAogICAgICAgICAgICAgIHJlbDogIm5vb3BlbmVyIG5vcmVmZXJyZXIiLAogICAgICAgICAgICB9LAogICAgICAgICAgfSwKICAgICAgICAgIFsKICAgICAgICAgICAgX3ZtLl92KCciRnJvbSBpbWFnZSBzZWN1cml0eSB0byB3b3JrbG9hZCBzZWN1cml0eSInKSwKICAgICAgICAgICAgX2MoIk91dGJvdW5kTGluayIpLAogICAgICAgICAgXSwKICAgICAgICAgIDEKICAgICAgICApLAogICAgICAgIF92bS5fdigKICAgICAgICAgICIsIHdlIGRpc2N1c3MgdGhlIGNoYWxsZW5nZSBvZiBjb25maWd1cmF0aW9uIGluIEt1YmVybmV0ZXMsIGFuZCB0aGUgZmFjdCB0aGF0IHdoaWxlIHRoZSBLdWJlcm5ldGVzIEFQSSBwcm92aWRlcyBhIHBvd2VyZnVsIGFic3RyYWN0aW9uIGZvciBidWlsZGluZyBjbG91ZCBuYXRpdmUgc3lzdGVtcywgaXQgaXMgYWxzbyBpbnNlY3VyZSBieSBkZWZhdWx0LiBUaGlzIGFydGljbGUgYWxzbyBzaGFyZXMgaW5zaWdodCBpbnRvIHNvbWUgY29tbW9uIGNvbmZpZ3VyYXRpb24gcHJvcGVydGllcyB0aGF0IGFyZSBvZnRlbiBvdmVybG9va2VkOiIKICAgICAgICApLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJ0YWJsZSIsIFsKICAgICAgICBfYygidGhlYWQiLCBbCiAgICAgICAgICBfYygidHIiLCBbCiAgICAgICAgICAgIF9jKCJ0aCIsIHsgc3RhdGljU3R5bGU6IHsgInRleHQtYWxpZ24iOiAibGVmdCIgfSB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KCJTZWN1cml0eSBDb250ZXh0IiksCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICAgICAgX2MoInRoIiwgeyBzdGF0aWNTdHlsZTogeyAidGV4dC1hbGlnbiI6ICJsZWZ0IiB9IH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoIkRlc2NyaXB0aW9uIiksCiAgICAgICAgICAgIF0pLAogICAgICAgICAgXSksCiAgICAgICAgXSksCiAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgX2MoInRib2R5IiwgWwogICAgICAgICAgX2MoInRyIiwgWwogICAgICAgICAgICBfYygidGQiLCB7IHN0YXRpY1N0eWxlOiB7ICJ0ZXh0LWFsaWduIjogImxlZnQiIH0gfSwgWwogICAgICAgICAgICAgIF92bS5fdigiQ1BVIGFuZCBNZW1vcnkgbGltaXRzIiksCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICAgICAgX2MoInRkIiwgeyBzdGF0aWNTdHlsZTogeyAidGV4dC1hbGlnbiI6ICJsZWZ0IiB9IH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAiTGltaXRpbmcgdGhlIGV4cGVjdGVkIENQVSBhbmQgTWVtb3J5IGxpbWl0cyBoYXMgb3BlcmF0aW9uYWwgYXMgd2VsbCBhcyBzZWN1cml0eSBiZW5lZml0cy4gSW4gdGhlIGNvbnRleHQgb2Ygc2VjdXJpdHksIHRoaXMgaXMgYWJvdXQgbGltaXRpbmcgdGhlIGltcGFjdCBwb3RlbnRpYWwgZGVuaWFsIG9mIHNlcnZpY2UgYXR0YWNrcyBoYXZlIGluIGFmZmVjdGluZyB0aGUgYXBwLCByYXRoZXIgdGhhbiB0aGUgbm9kZSwgYW5kIHBvdGVudGlhbGx5IHRoZSB3aG9sZSBjbHVzdGVyLiIKICAgICAgICAgICAgICApLAogICAgICAgICAgICBdKSwKICAgICAgICAgIF0pLAogICAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgICBfYygidHIiLCBbCiAgICAgICAgICAgIF9jKCJ0ZCIsIHsgc3RhdGljU3R5bGU6IHsgInRleHQtYWxpZ24iOiAibGVmdCIgfSB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KCJydW5Bc05vblJvb3QiKSwKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF92bS5fdigiICIpLAogICAgICAgICAgICBfYygidGQiLCB7IHN0YXRpY1N0eWxlOiB7ICJ0ZXh0LWFsaWduIjogImxlZnQiIH0gfSwgWwogICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICJCeSBkZWZhdWx0LCBjb250YWluZXJzIHJ1biBhcyB0aGUgcm9vdCB1c2VyLiBUaGlzIHByb3BlcnR5IHByZXZlbnRzIHRoYXQgYXQgdGhlIGNvbnRhaW5lciBydW50aW1lLCBtZWFuaW5nLCBpZiBhbiBhdHRhY2tlciB3YXMgYWJsZSB0byBleGVjdXRlIGEgY29tbWFuZCBpbiB0aGUgY29udGV4dCBvZiB0aGUgY29udGFpbmVyLCB0aGV5IHdvdWxkIG9ubHkgaGF2ZSBsaW1pdGVkIHBlcm1pc3Npb25zLiIKICAgICAgICAgICAgICApLAogICAgICAgICAgICBdKSwKICAgICAgICAgIF0pLAogICAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgICBfYygidHIiLCBbCiAgICAgICAgICAgIF9jKCJ0ZCIsIHsgc3RhdGljU3R5bGU6IHsgInRleHQtYWxpZ24iOiAibGVmdCIgfSB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KCJyZWFkT25seVJvb3RGaWxlc3lzdGVtIiksCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICAgICAgX2MoInRkIiwgeyBzdGF0aWNTdHlsZTogeyAidGV4dC1hbGlnbiI6ICJsZWZ0IiB9IH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAiQnkgZGVmYXVsdCwgdGhlIGZpbGUgc3lzdGVtIG1vdW50ZWQgZm9yIHRoZSBjb250YWluZXIgaXMgd3JpdGFibGUuIFRoYXQgbWVhbnMsIGFuIGF0dGFja2VyIHdobyBjb21wcm9taXNlcyB0aGUgY29udGFpbmVyIGNhbiBhbHNvIHdyaXRlIHRvIGRpc2ssIHdoaWNoIG1ha2VzIGNlcnRhaW4gYXR0YWNrcyBlYXNpZXIuIElmIHlvdXIgY29udGFpbmVycyBhcmUgc3RhdGVsZXNzLCB0aGVuIHlvdSBkb27igJl0IG5lZWQgYSB3cml0YWJsZSBmaWxlc3lzdGVtLiIKICAgICAgICAgICAgICApLAogICAgICAgICAgICBdKSwKICAgICAgICAgIF0pLAogICAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgICBfYygidHIiLCBbCiAgICAgICAgICAgIF9jKCJ0ZCIsIHsgc3RhdGljU3R5bGU6IHsgInRleHQtYWxpZ24iOiAibGVmdCIgfSB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KCJDYXBhYmlsaXRpZXMiKSwKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF92bS5fdigiICIpLAogICAgICAgICAgICBfYygidGQiLCB7IHN0YXRpY1N0eWxlOiB7ICJ0ZXh0LWFsaWduIjogImxlZnQiIH0gfSwgWwogICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICJMaW51eCBjYXBhYmlsaXRpZXMgY29udHJvbCwgYXQgYSBsb3ctbGV2ZWwsIHdoYXQgcHJvY2Vzc2VzIGRvIGluIHRoZSBjb250YWluZXLigJRmcm9tIHdyaXRpbmcgdG8gZGlzaywgdG8gY29tbXVuaWNhdGluZyBvdmVyIHRoZSBuZXR3b3JrLiBEcm9wcGluZyBhbGwgY2FwYWJpbGl0aWVzIGFuZCBhZGRpbmcgaW4gdGhvc2UgdGhhdCBhcmUgcmVxdWlyZWQgaXMgcG9zc2libGUsIGJ1dCByZXF1aXJlcyB1bmRlcnN0YW5kaW5nIHRoZSBsaXN0IG9mIGNhcGFiaWxpdGllcy4iCiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgXSksCiAgICAgICAgICBdKSwKICAgICAgICBdKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiVGhlIGZvbGxvd2luZyBleGVyY2lzZXMgd2lsbCBkZW1vbnN0cmF0ZSB0aGVzZSBpbnNlY3VyZSBjb25maWd1cmF0aW9ucyBhbmQgaG93IHRvIGlkZW50aWZ5IGFuZCBmaXggdGhlbSB3aXRoIFNueWsuIgogICAgICAgICksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgzIiwgeyBhdHRyczogeyBpZDogImVuYWJsZS1waXBlbGluZXMiIH0gfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgewogICAgICAgICAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgICAgICAgICBhdHRyczogeyBocmVmOiAiI2VuYWJsZS1waXBlbGluZXMiIH0sCiAgICAgICAgICB9LAogICAgICAgICAgW192bS5fdigiIyIpXQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCIgRW5hYmxlIHBpcGVsaW5lcyIpLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJMZXQncyBnZXQgc3RhcnRlZCBieSBlbmFibGluZyBwaXBlbGluZXMgaW4gb3VyIHJlcG9zaXRvcnkuIExldCdzIGdvIHRvIG91ciBCaXRidWNrZXQgcmVwb3NpdG9yeSBhbmQgc2VsZWN0ICIKICAgICAgICApLAogICAgICAgIF9jKCJzdHJvbmciLCBbX3ZtLl92KCJQaXBlbGluZXMiKV0pLAogICAgICAgIF92bS5fdigiIGZyb20gdGhlIG1lbnUgYmFyLiBTY3JvbGwgdG8gdGhlIGJvdHRvbSBhbmQgY2xpY2sgdGhlICIpLAogICAgICAgIF9jKCJzdHJvbmciLCBbX3ZtLl92KCJFbmFibGUiKV0pLAogICAgICAgIF92bS5fdigiIGJ1dHRvbiB0byBraWNrIG9mZiBhIHBpcGVsaW5lIHJ1bi4iKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgc3JjOiAiaHR0cHM6Ly9wYXJ0bmVyLXdvcmtzaG9wLWFzc2V0cy5zMy51cy1lYXN0LTIuYW1hem9uYXdzLmNvbS9iaXRidWNrZXQtcGlwZWxpbmVzLWVuYWJsZS5wbmciLAogICAgICAgICAgICBhbHQ6ICIiLAogICAgICAgICAgfSwKICAgICAgICB9KSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaDMiLCB7IGF0dHJzOiB7IGlkOiAiYWRkaW5nLXdvcmtsb2FkcyIgfSB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICAgICAgICAgIGF0dHJzOiB7IGhyZWY6ICIjYWRkaW5nLXdvcmtsb2FkcyIgfSwKICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl92KCIjIildCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIiBBZGRpbmcgd29ya2xvYWRzIiksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KCJOb3csIGxldCdzIGdvIHRvIG91ciBTbnlrIGFwcC4gTGV0J3MgbmF2aWdhdGUgdG8gIiksCiAgICAgICAgX2MoInN0cm9uZyIsIFtfdm0uX3YoIkludGVncmF0aW9ucyIpXSksCiAgICAgICAgX3ZtLl92KCIgYW5kIHNlbGVjdCAiKSwKICAgICAgICBfYygic3Ryb25nIiwgW192bS5fdigiS3ViZXJuZXRlcyIpXSksCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIi4gU2luY2Ugd2UgcHJldmlvdXNseSBkZXBsb3llZCB0aGUgU255ayBjb250cm9sbGVyIGludG8gb3VyIGNsdXN0ZXIsIHRoaXMgc2hvdWxkIGFwcGVhciBhcyAiCiAgICAgICAgKSwKICAgICAgICBfYygic3Ryb25nIiwgW192bS5fdigiQ29ubmVjdGVkIHRvIEt1YmVybmV0ZXMiKV0pLAogICAgICAgIF92bS5fdigiIGFuZCB3ZSBzaG91bGQgYmUgYWJsZSB0byBjbGljayB0aGUgYnV0dG9uIHRvICIpLAogICAgICAgIF9jKCJzdHJvbmciLCBbX3ZtLl92KCJBZGQgeW91ciBLdWJlcm5ldGVzIHdvcmtsb2FkcyB0byBTbnlrIildKSwKICAgICAgICBfdm0uX3YoIi4iKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgc3JjOiAiaHR0cHM6Ly9wYXJ0bmVyLXdvcmtzaG9wLWFzc2V0cy5zMy51cy1lYXN0LTIuYW1hem9uYXdzLmNvbS9zbnlrLWVrcy1pbnRlZ3JhdGlvbi0wMS5wbmciLAogICAgICAgICAgICBhbHQ6ICIiLAogICAgICAgICAgfSwKICAgICAgICB9KSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoIk5leHQsIHdlIHdpbGwgc2VsZWN0IG91ciBjbHVzdGVyIGFuZCBvdXIgIiksCiAgICAgICAgX2MoInN0cm9uZyIsIFtfdm0uX3YoImdvb2YiKV0pLAogICAgICAgIF92bS5fdigiIGFwcC4gQ2xpY2sgIiksCiAgICAgICAgX2MoInN0cm9uZyIsIFtfdm0uX3YoIkFkZCBzZWxlY3RlZCB3b3JrbG9hZHMiKV0pLAogICAgICAgIF92bS5fdigiIHdoZW4gcmVhZHkuIiksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgIHNyYzogImh0dHBzOi8vcGFydG5lci13b3Jrc2hvcC1hc3NldHMuczMudXMtZWFzdC0yLmFtYXpvbmF3cy5jb20vc255ay1la3MtaW50ZWdyYXRpb24tMDIucG5nIiwKICAgICAgICAgICAgYWx0OiAiIiwKICAgICAgICAgIH0sCiAgICAgICAgfSksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIk9uY2UgdGhlIHNjYW4gaXMgY29tcGxldGUsIHlvdSB3aWxsIHNlZSB0aGUgZm9sbG93aW5nIHJlc3VsdHM6IgogICAgICAgICksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgIHNyYzogImh0dHBzOi8vcGFydG5lci13b3Jrc2hvcC1hc3NldHMuczMudXMtZWFzdC0yLmFtYXpvbmF3cy5jb20vc255ay1la3MtaW50ZWdyYXRpb24tMDMlMjAlMjgxJTI5LnBuZyIsCiAgICAgICAgICAgIGFsdDogIiIsCiAgICAgICAgICB9LAogICAgICAgIH0pLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJUaGUgcmVzdWx0cywgc2hvdWxkIG5vdCBzdXJwcmlzZSB1cy4gSWYgd2UgZXhhbWluZSB0aGUgbWFuaWZlc3RzIGFuZCBjb21wYXJlIHRoYXQgYWdhaW5zdCB0aGUgYmVzdCBwcmFjdGljZXMgd2UgcHJldmlvdXNseSByZWZlcmVuY2VkLCBub3Qgb25seSBhcmUgY29uZmlndXJhdGlvbnMgb3Zlcmxvb2tlZCwgIgogICAgICAgICksCiAgICAgICAgX2MoImNvZGUiLCBbX3ZtLl92KCJzZWN1cml0eUNvbnRleHQiKV0pLAogICAgICAgIF92bS5fdigKICAgICAgICAgICIgaXMgZW50aXJlbHkgYWJzZW50LiBMZXQncyBleHBsb3JlIHRoaXMgaW4gbW9yZSBkZXRhaWwgaW4gdGhlIG5leHQgbW9kdWxlLiIKICAgICAgICApLAogICAgICBdKSwKICAgIF0KICApCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}