{"remainingRequest":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/owenmorrill/Sites/vue-docs/docs/src/snyk/partner-workshops/springone-workshop/workshop-environment.md?vue&type=template&id=4b46cf26&","dependencies":[{"path":"/Users/owenmorrill/Sites/vue-docs/docs/src/snyk/partner-workshops/springone-workshop/workshop-environment.md","mtime":1644439893042},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js","mtime":1647884535821},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1647884535666},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js","mtime":1647884535821},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/index.js","mtime":1647884534539},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/@vuepress/markdown-loader/index.js","mtime":1647884535441}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHsKICB2YXIgX3ZtID0gdGhpcwogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogIHJldHVybiBfYygKICAgICJDb250ZW50U2xvdHNEaXN0cmlidXRvciIsCiAgICB7IGF0dHJzOiB7ICJzbG90LWtleSI6IF92bS4kcGFyZW50LnNsb3RLZXkgfSB9LAogICAgWwogICAgICBfYygiaDEiLCB7IGF0dHJzOiB7IGlkOiAid29ya3Nob3Atb3ZlcnZpZXciIH0gfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgewogICAgICAgICAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgICAgICAgICBhdHRyczogeyBocmVmOiAiI3dvcmtzaG9wLW92ZXJ2aWV3IiB9LAogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIFdvcmtzaG9wIE92ZXJ2aWV3IiksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgyIiwgeyBhdHRyczogeyBpZDogIndoYXQtaXMtZGV2c2Vjb3BzIiB9IH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogIiN3aGF0LWlzLWRldnNlY29wcyIgfSwKICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl92KCIjIildCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIiBXaGF0IGlzIERldlNlY09wcz8iKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiRGV2U2VjT3BzIGlzIHRoZSBWZW5uIGRpYWdyYW0gb2YgSVQuIEl0IHJlcHJlc2VudHMgd2hlcmUgdGhlIGRldmVsb3Blciwgc2VjdXJpdHksIGFuZCBvcGVyYXRpb25zIG9yZ2FuaXphdGlvbnMgam9pbiBmb3JjZXMgdG8gZGVsaXZlciBhcHBsaWNhdGlvbnMgdG8gY3VzdG9tZXJzLCB1c2luZyBhdXRvbWF0ZWQgcHJvY2Vzc2VzLCB3aGlsZSBwcm9hY3RpdmVseSBhZGRyZXNzaW5nIHNlY3VyaXR5LCBhbmQgbWFpbnRhaW5pbmcgb2JzZXJ2YWJpbGl0eSBhbmQgaGlnaCBhdmFpbGFiaWxpdHkuIgogICAgICAgICksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIldoaWxlIHRoaXMgaXMgdGhlIHBhbmFjZWEgYW5kIGFuIGluY3JlZGlibGUgZmVhdCB0byBhY2NvbXBsaXNoLCB0aGUgcmVhbGl0eSBpcyBtb3N0IGVudGVycHJpc2Ugb3JnYW5pemF0aW9ucyBoYXZlIGEgY29uc2lkZXJhYmxlIGFtb3VudCBvZiBpbnRlcm5hbCBjaGFuZ2UgdG8gY29uc2lkZXIgc3VjaCBhIGdvYWwuIEluIGFkZGl0aW9uLCBEZXZTZWNPcHMgaXMgaW4gaXRzIGVhcmx5IHN0YWdlcyBvZiBiZWluZyBmb3JtZWQsIG11Y2ggbGlrZSBjb250YWluZXJzIGluIDIwMTUsIGFuZCBtYW55IG9mIHRoZSBiZXN0IHByYWN0aWNlcyBhbmQgdGhvdWdodCBsZWFkZXJzaGlwLCBpZiB5b3Ugd2lsbCwgYXJlIHN0aWxsIGRldmVsb3BpbmcuIgogICAgICAgICksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgIHNyYzogImh0dHBzOi8vcGFydG5lci13b3Jrc2hvcC1hc3NldHMuczMudXMtZWFzdC0yLmFtYXpvbmF3cy5jb20vdmVubl9kZXZzZWNvcHMucG5nIiwKICAgICAgICAgICAgYWx0OiAiRGV2U2VjT3BzIiwKICAgICAgICAgIH0sCiAgICAgICAgfSksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgyIiwgeyBhdHRyczogeyBpZDogIndoYXQtaXMtdGhlLWRldnNlY29wcy13b3Jrc2hvcCIgfSB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICAgICAgICAgIGF0dHJzOiB7IGhyZWY6ICIjd2hhdC1pcy10aGUtZGV2c2Vjb3BzLXdvcmtzaG9wIiB9LAogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIFdoYXQgaXMgdGhlIERldlNlY09wcyBXb3Jrc2hvcD8iKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAnVGhpcyB3b3Jrc2hvcFwncyBmb2N1cyBpcyB0byBnaXZlIGRldmVsb3BlcnMgYW5kIHNlY3VyaXR5IHRlYW1zIGhhbmRzLW9uIGV4cGVyaWVuY2UgdXNpbmcgdGhlIFNueWsgc29sdXRpb25zIHRvIHNvbHZlIHNlY3VyaXR5LXJlbGF0ZWQgY29uY2VybnMgaW4gdGhlIGRldmVsb3BtZW50IGFuZCBDSS9DRCBwaGFzZXMgb2YgdGhlIFNETEMuIEFkZHJlc3NpbmcgYXBwbGljYXRpb24gc2VjdXJpdHkgY29uY2VybnMgaW4gdGhlc2UgcGhhc2VzIG9mIHRoZSBTRExDIGlzIG9mdGVuIGNhbGxlZCAic2hpZnQtbGVmdC4iJwogICAgICAgICksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIkluIHRoaXMgd29ya3Nob3AsIHdlIHRha2UgdGhlIHBvcHVsYXIgU3ByaW5nIEphdmEgYXBwbGljYXRpb24gY2FsbGVkIFNwcmluZyBQZXRjbGluaWMgKFNQQykgYW5kIGRlcGxveSBpdCBhcyBhIGNvbnRhaW5lci1iYXNlZCBzb2x1dGlvbiB1c2luZyBLdWJlcm5ldGVzLiBXZSBhcHBseSB0aGUgU255ayBzb2x1dGlvbnMgZHVyaW5nIHRoZSBTRExDIHRvIGRlbW9uc3RyYXRlIHRoZSBmaXJzdCBwcmluY2lwbGVzIG9mIERldlNlY09wcy4iCiAgICAgICAgKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFtfdm0uX3YoIlVzaW5nIFNueWsgc29sdXRpb25zLCB3ZSB3aWxsIGNvdmVyIHRoZSBmb2xsb3dpbmc6IildKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF9jKCJzdHJvbmciLCBbCiAgICAgICAgICBfdm0uX3YoIlZ1bG5lcmFiaWxpdHkgbWFuYWdlbWVudCBvZiBvcGVuIHNvdXJjZSBjb21wb25lbnRzIChTQ0EpIiksCiAgICAgICAgXSksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInVsIiwgWwogICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgIlRoZSBkZXZlbG9wZXIgZXhwZXJpZW5jZSB1c2luZyBhIFNueWsgYmVmb3JlIGNvbW1pdHRpbmcgY29kZS4iCiAgICAgICAgICApLAogICAgICAgIF0pLAogICAgICAgIF92bS5fdigiICIpLAogICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgIF92bS5fdigiVXNpbmcgU255ayB0byBhdXRvbWF0ZSB2dWxuZXJhYmlsaXRpZXMgaW4gc291cmNlIGNvZGUiKSwKICAgICAgICBdKSwKICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICBfYygibGkiLCBbX3ZtLl92KCJVc2luZyBTbnlrIHRvIHByb3ZpZGUgc2VjdXJpdHkgZ2F0ZXMgaW4gQ0kvQ0QiKV0pLAogICAgICAgIF92bS5fdigiICIpLAogICAgICAgIF9jKCJsaSIsIFtfdm0uX3YoIkxpY2Vuc2UgY29tcGxpYW5jZSBvZiBvcGVuIHNvdXJjZSBjb21wb25lbnRzIildKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFtfYygic3Ryb25nIiwgW192bS5fdigiQ29udGFpbmVyIHNlY3VyaXR5IildKV0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInVsIiwgWwogICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgIF9jKCJwIiwgWwogICAgICAgICAgICBfdm0uX3YoIlN5bmsncyBjb250YWluZXIgc29sdXRpb24gdG8gc2NhbiBjb250YWluZXIgaW1hZ2VzLiIpLAogICAgICAgICAgXSksCiAgICAgICAgXSksCiAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX2MoInAiLCBbX3ZtLl92KCJVc2luZyBTbnlrIHRvIHJlbWVkaWF0ZSB2dWxuZXJhYmlsaXR5IGlzc3VlcyIpXSksCiAgICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICAgIF9jKCJwIiwgW19jKCJzdHJvbmciLCBbX3ZtLl92KCJJbmZyYXN0cnVjdHVyZSBhcyBDb2RlIChJYUMpIildKV0pLAogICAgICAgIF0pLAogICAgICAgIF92bS5fdigiICIpLAogICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgIF9jKCJwIiwgWwogICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgIlNueWsncyBJYUMgZm9yIEt1YmVybmV0ZXMgc29sdXRpb24gdG8gdmVyaWZ5IG91ciBLOHMgZmlsZXMgYWRoZXJlIHRvIHBvbGljeSBzdGFuZGFyZHMuIgogICAgICAgICAgICApLAogICAgICAgICAgXSksCiAgICAgICAgXSksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgyIiwgeyBhdHRyczogeyBpZDogIndoYXQtZG8taS1uZWVkLXRvLWNvbXBsZXRlLXRoZS13b3Jrc2hvcCIgfSB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICAgICAgICAgIGF0dHJzOiB7IGhyZWY6ICIjd2hhdC1kby1pLW5lZWQtdG8tY29tcGxldGUtdGhlLXdvcmtzaG9wIiB9LAogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIFdoYXQgZG8gSSBuZWVkIHRvIGNvbXBsZXRlIHRoZSB3b3Jrc2hvcD8iKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiVG8gY29tcGxldGUgdGhlIGV4ZXJjaXNlcyBpbiB0aGUgd29ya3Nob3AsIHlvdSBuZWVkIGFuIGFjY291bnQgZm9yIHRoZSBmb2xsb3dpbmc6IgogICAgICAgICksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInVsIiwgWwogICAgICAgIF9jKCJsaSIsIFtfdm0uX3YoIlNueWsgYWNjb3VudCBhbmQgcGVyc29uYWwgQVBJIHRva2VuIildKSwKICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICBfdm0uX3YoIkdpdGh1YiBhY2NvdW50IGFuZCBwZXJzb25hbCB0b2tlbiB3aXRoIHdyaXRlIHBlcm1pc3Npb25zLiIpLAogICAgICAgIF0pLAogICAgICAgIF92bS5fdigiICIpLAogICAgICAgIF9jKCJsaSIsIFtfdm0uX3YoIkRvY2tlciBIdWIgYWNjb3VudCBhbmQgcGVyc29uYWwgQVBJIHRva2VuIildKSwKICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICJTY3JhdGNoIHBhZCBhcHBsaWNhdGlvbiB0byBjdXQtbi1wYXN0ZSBBUEkga2V5cywgY29tbWFuZHMsIGV0Yy4iCiAgICAgICAgICApLAogICAgICAgIF0pLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJCZXNpZGVzIFNueWsgc29sdXRpb25zLCB3ZSB1c2VkIHRoZSBmb2xsb3dpbmcgdGVjaG5vbG9naWVzIHRvIG1pbmltaXplIHJlcXVpcmVtZW50cyBhbmQgZGVtb25zdHJhdGUgYW4gYXBwbGljYXRpb24gZGVwbG95bWVudC4iCiAgICAgICAgKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygidWwiLCBbCiAgICAgICAgX2MoImxpIiwgW192bS5fdigiR2l0aHViIFJlcG9zIildKSwKICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICBfYygibGkiLCBbX3ZtLl92KCJHaXRodWIgQWN0aW9ucyIpXSksCiAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgX2MoImxpIiwgW192bS5fdigiS3ViZXJuZXRlcyIpXSksCiAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgX2MoImxpIiwgW192bS5fdigiSGVsbSIpXSksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgyIiwgeyBhdHRyczogeyBpZDogIndoYXQtaXMtaW5jbHVkZWQtaW4tdGhpcy13b3Jrc2hvcCIgfSB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICAgICAgICAgIGF0dHJzOiB7IGhyZWY6ICIjd2hhdC1pcy1pbmNsdWRlZC1pbi10aGlzLXdvcmtzaG9wIiB9LAogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIFdoYXQgaXMgaW5jbHVkZWQgaW4gdGhpcyB3b3Jrc2hvcD8iKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaDMiLCB7IGF0dHJzOiB7IGlkOiAib3ZlcnZpZXctb2Ytc255ay1zb2x1dGlvbnMiIH0gfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgewogICAgICAgICAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgICAgICAgICBhdHRyczogeyBocmVmOiAiI292ZXJ2aWV3LW9mLXNueWstc29sdXRpb25zIiB9LAogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIE92ZXJ2aWV3IG9mIFNueWsgc29sdXRpb25zIiksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KCJXZSB3aWxsIHByb3ZpZGUgYSBxdWljayBvdmVydmlldyBvZiB0aGUgU255ayBzb2x1dGlvbnMuIiksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgzIiwgeyBhdHRyczogeyBpZDogImdldHRpbmctc3RhcnRlZC13aXRoLXRoZS1sYWItdm0iIH0gfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgewogICAgICAgICAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgICAgICAgICBhdHRyczogeyBocmVmOiAiI2dldHRpbmctc3RhcnRlZC13aXRoLXRoZS1sYWItdm0iIH0sCiAgICAgICAgICB9LAogICAgICAgICAgW192bS5fdigiIyIpXQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCIgR2V0dGluZyBzdGFydGVkIHdpdGggdGhlIGxhYiBWTSIpLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJXZSd2ZSBjcmVhdGVkIGEgbGFiIFZNIHdpdGggYWxsIHRoZSBuZWNlc3NhcnkgdG9vbHMgdG8gY29tcGxldGUgdGhlIGV4ZXJjaXNlcyBpbiB0aGlzIHdvcmtzaG9wLiBJbiBhZGRpdGlvbiB0byB0aGUgY29tbWFuZC1saW5lIHRvb2xzLCB0aGVyZSBhcmUgYSBmZXcgZXh0ZXJuYWwgaW50ZXJmYWNlcyB0byB3ZWItYmFzZWQgc29sdXRpb25zIHRvIGV4ZWN1dGUgZm9ya2luZyB0aGUgcmVwbywgYWNjZXNzaW5nIEdpdEh1YiwgYWNjZXNzaW5nIERvY2tlciBIdWIsIGFjY2Vzc2luZyB0aGUgU255ayBVSSwgYW5kIHZpZXdpbmcgdGhlIHdvcmtzaG9wIGluc3RydWN0aW9ucy4iCiAgICAgICAgKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaDMiLCB7IGF0dHJzOiB7IGlkOiAid29ya3Nob3Atb3V0bGluZSIgfSB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICAgICAgICAgIGF0dHJzOiB7IGhyZWY6ICIjd29ya3Nob3Atb3V0bGluZSIgfSwKICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl92KCIjIildCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIiBXb3Jrc2hvcCBPdXRsaW5lIiksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIkVhY2ggc2VjdGlvbiBjb250YWlucyBhIGJyaWVmIGRlc2NyaXB0aW9uIGZvbGxvd2VkIGJ5IGEgc2V0IG9mIHdvcmtzaG9wIGV4ZXJjaXNlcy4iCiAgICAgICAgKSwKICAgICAgXSksCiAgICBdCiAgKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXQpyZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWUKCmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0="}]}