{"remainingRequest":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/owenmorrill/Sites/vue-docs/docs/src/guide/products/snyk-open-source/open-source-basics/fix-pull-requests-for-known-vulnerabilities-backlog.md?vue&type=template&id=7b2b147a&","dependencies":[{"path":"/Users/owenmorrill/Sites/vue-docs/docs/src/guide/products/snyk-open-source/open-source-basics/fix-pull-requests-for-known-vulnerabilities-backlog.md","mtime":1644439893081},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js","mtime":1647884535821},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1647884535666},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js","mtime":1647884535821},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/index.js","mtime":1647884534539},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/@vuepress/markdown-loader/index.js","mtime":1647884535441}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHsKICB2YXIgX3ZtID0gdGhpcwogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogIHJldHVybiBfYygKICAgICJDb250ZW50U2xvdHNEaXN0cmlidXRvciIsCiAgICB7IGF0dHJzOiB7ICJzbG90LWtleSI6IF92bS4kcGFyZW50LnNsb3RLZXkgfSB9LAogICAgWwogICAgICBfYygKICAgICAgICAiaDEiLAogICAgICAgIHsKICAgICAgICAgIGF0dHJzOiB7IGlkOiAiZml4LXB1bGwtcmVxdWVzdHMtZm9yLWtub3duLXZ1bG5lcmFiaWxpdGllcy1iYWNrbG9nIiB9LAogICAgICAgIH0sCiAgICAgICAgWwogICAgICAgICAgX2MoCiAgICAgICAgICAgICJhIiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgIGhyZWY6ICIjZml4LXB1bGwtcmVxdWVzdHMtZm9yLWtub3duLXZ1bG5lcmFiaWxpdGllcy1iYWNrbG9nIiwKICAgICAgICAgICAgICB9LAogICAgICAgICAgICB9LAogICAgICAgICAgICBbX3ZtLl92KCIjIildCiAgICAgICAgICApLAogICAgICAgICAgX3ZtLl92KCIgRml4IHB1bGwgcmVxdWVzdHMgZm9yIGtub3duIHZ1bG5lcmFiaWxpdGllcyAoYmFja2xvZykiKSwKICAgICAgICBdCiAgICAgICksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfYygic3Ryb25nIiwgW192bS5fdigiS25vd24gdnVsbmVyYWJpbGl0aWVzIildKSwKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiIHJldHJpZXZlIHZ1bG5lcmFiaWxpdGllcyBmcm9tIHRoZSBwcm9qZWN0J3MgYmFja2xvZy4gVGhlc2UgYXJlIHRoZSBwcmV2aW91c2x5IGRlY2xhcmVkIHZ1bG5lcmFiaWxpdGllcy4iCiAgICAgICAgKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiVGhlIGZvbGxvd2luZyBydWxlcyBhcmUgYXBwbGllZCB0byBhdXRvbWF0aWMgUFIgY3JlYXRpb24gZm9yIHZ1bG5lcmFiaWxpdGllczoiCiAgICAgICAgKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygidWwiLCBbCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX3ZtLl92KCJQdWxsIHJlcXVlc3RzIGFyZSBjcmVhdGVkIGJhc2VkIG9uIHRoZSAiKSwKICAgICAgICAgIF9jKCJzdHJvbmciLCBbX3ZtLl92KCJUZXN0ICYgQXV0b21hdGVkIFB1bGwgUmVxdWVzdCBGcmVxdWVuY3kiKV0pLAogICAgICAgICAgX3ZtLl92KCIgKHNlZSBzY3JlZW5zaG90IGJlbG93KSBzZXR0aW5nIiksCiAgICAgICAgXSksCiAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX3ZtLl92KCJJZiBhIHNjYW4gaXMgbWFudWFsbHkgcnVuICh5b3UgY2xpY2tlZCAiKSwKICAgICAgICAgIF9jKCJzdHJvbmciLCBbX3ZtLl92KCJSZXRlc3Qgbm93IildKSwKICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgIiBmb3IgdGhlIHByb2plY3QpLCB0aGUgMjQtaG91ciB3aW5kb3cgaXMgbWFya2VkIGFzIGhhdmluZyBiZWVuIHJ1biBhbmQgbm8gYXV0b21hdGljIFBSIGlzIGNyZWF0ZWQgdW50aWwgdGhlIG5leHQgYXV0b21hdGVkIHNjYW4gcnVucyIKICAgICAgICAgICksCiAgICAgICAgXSksCiAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX3ZtLl92KCJPbmUgcHVsbCByZXF1ZXN0IGlzIGNyZWF0ZWQgcGVyIHByb2plY3QgKHByaW9yaXR5IHNjb3JlIG9mICIpLAogICAgICAgICAgX2MoInN0cm9uZyIsIFtfdm0uX3YoIjcwMCBhbmQgYWJvdmUgb25seSIpXSksCiAgICAgICAgICBfdm0uX3YoIikiKSwKICAgICAgICBdKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgYXR0cnM6IHsgc3JjOiByZXF1aXJlKCIuLi8uLi8uLi8uZ2l0Ym9vay9hc3NldHMvb3MxLnBuZyIpLCBhbHQ6ICIiIH0sCiAgICAgICAgfSksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIlRvIGtub3cgd2hlbiB5b3VyIGxhc3QgMjQtaG91ciB3aW5kb3cgd2FzIGtpY2tlZCBvZmYsIGNoZWNrIHRoZSBwcm9qZWN0IHBhZ2UgZm9yICIKICAgICAgICApLAogICAgICAgIF9jKCJzdHJvbmciLCBbX3ZtLl92KCJTbmFwc2hvdCB0YWtlbiBieSByZWN1cnJpbmcgdGVzdCIpXSksCiAgICAgICAgX3ZtLl92KCItLWFsc28gY2hlY2sgeW91ciBlbWFpbCBmb3IgIiksCiAgICAgICAgX2MoInN0cm9uZyIsIFtfdm0uX3YoIltzbnlrXSBWdWxuZXJhYmlsaXR5IGFsZXJ0IildKSwKICAgICAgICBfdm0uX3YoIiBmb3Igc3BlY2lmaWMgc2NhbiByZXN1bHRzOiIpLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICBhdHRyczogeyBzcmM6IHJlcXVpcmUoIi4uLy4uLy4uLy5naXRib29rL2Fzc2V0cy9vczIucG5nIiksIGFsdDogIiIgfSwKICAgICAgICB9KSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygKICAgICAgICAiaDIiLAogICAgICAgIHsgYXR0cnM6IHsgaWQ6ICJlbmFibGUtb3ItZGlzYWJsZS1wdWxsLXJlcXVlc3RzLWZvci1pbnRlZ3JhdGlvbnMiIH0gfSwKICAgICAgICBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgImEiLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgaHJlZjogIiNlbmFibGUtb3ItZGlzYWJsZS1wdWxsLXJlcXVlc3RzLWZvci1pbnRlZ3JhdGlvbnMiLAogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICAgICksCiAgICAgICAgICBfdm0uX3YoIiBFbmFibGUgb3IgZGlzYWJsZSBwdWxsIHJlcXVlc3RzIGZvciBpbnRlZ3JhdGlvbnMiKSwKICAgICAgICBdCiAgICAgICksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFtfdm0uX3YoIlRvIGVuYWJsZSBhdCB0aGUgZ2xvYmFsIGludGVncmF0aW9uIGxldmVsOiIpXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygib2wiLCBbCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX3ZtLl92KCJDbGljayBvbiBzZXR0aW5ncyAiKSwKICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgc3JjOiByZXF1aXJlKCIuLi8uLi8uLi8uZ2l0Ym9vay9hc3NldHMvY29nX2ljb24ucG5nIiksCiAgICAgICAgICAgICAgYWx0OiAiIiwKICAgICAgICAgICAgfSwKICAgICAgICAgIH0pLAogICAgICAgICAgX3ZtLl92KCIgPiAiKSwKICAgICAgICAgIF9jKCJzdHJvbmciLCBbX3ZtLl92KCJJbnRlZ3JhdGlvbnMiKV0pLAogICAgICAgIF0pLAogICAgICAgIF92bS5fdigiICIpLAogICAgICAgIF9jKCJsaSIsIFtfdm0uX3YoIlNlbGVjdCBhbiBTQ00gaW50ZWdyYXRpb24gKGZvciBleGFtcGxlLCBHaXRIdWIpIildKSwKICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICBfdm0uX3YoIkVuYWJsZSAiKSwKICAgICAgICAgIF9jKCJzdHJvbmciLCBbX3ZtLl92KCJLbm93biB2dWxuZXJhYmlsaXRpZXMgKGJhY2tsb2cpIildKSwKICAgICAgICBdKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfYygic3Ryb25nIiwgW192bS5fdigiQXBwbHkgY2hhbmdlcyB0byBhbGwgb3ZlcnJpZGRlbiBwcm9qZWN0cyIpXSksCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgJyB3aWxsIHVwZGF0ZSBhbGwgb2YgdGhlIGluZGl2aWR1YWwgcHJvamVjdCBzZXR0aW5ncyBmb3IgIkF1dG9tYXRpYyBmaXggcHVsbCByZXF1ZXN0cyIuIElmIGEgcHJvamVjdCBwcmV2aW91c2x5IGhhZCBpdHMgb3duIHNldHRpbmdzIGZvciB0aGlzLCBjbGlja2luZyBvbiB0aGlzIGJ1dHRvbiB3aWxsIG92ZXJyaWRlIGl0IHdpdGggdGhlIGdsb2JhbCBzZXR0aW5nLicKICAgICAgICApLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICBhdHRyczogewogICAgICAgICAgICBzcmM6IHJlcXVpcmUoIi4uLy4uLy4uLy5naXRib29rL2Fzc2V0cy9zY3JlZW5fc2hvdF8yMDIxLTA1LTI0X2F0XzEyLjIzLjM4X3BtLnBuZyIpLAogICAgICAgICAgICBhbHQ6ICIiLAogICAgICAgICAgfSwKICAgICAgICB9KSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygKICAgICAgICAiaDMiLAogICAgICAgIHsKICAgICAgICAgIGF0dHJzOiB7IGlkOiAiZW5hYmxlLW9yLWRpc2FibGUtcHVsbC1yZXF1ZXN0cy1mb3ItYS1zaW5nbGUtcHJvamVjdCIgfSwKICAgICAgICB9LAogICAgICAgIFsKICAgICAgICAgIF9jKAogICAgICAgICAgICAiYSIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICBocmVmOiAiI2VuYWJsZS1vci1kaXNhYmxlLXB1bGwtcmVxdWVzdHMtZm9yLWEtc2luZ2xlLXByb2plY3QiLAogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICAgICksCiAgICAgICAgICBfdm0uX3YoIiBFbmFibGUgb3IgZGlzYWJsZSBwdWxsIHJlcXVlc3RzIGZvciBhIHNpbmdsZSBwcm9qZWN0IiksCiAgICAgICAgXQogICAgICApLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIkVuYWJsaW5nL2Rpc2FibGluZyBhdCBhIHByb2plY3QgbGV2ZWwgd2lsbCBvdmVycmlkZSB0aGlzIHNpbmdsZSBwcm9qZWN0IHJhdGhlciB0aGFuIGluaGVyaXRpbmcgaXQgZnJvbSB0aGUgZ2xvYmFsIGludGVncmF0aW9uIHNldHRpbmcuIgogICAgICAgICksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoIm9sIiwgWwogICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgIF92bS5fdigiTmF2aWdhdGUgdG8gdGhlIHByb2plY3QgYW5kIHNlbGVjdCAiKSwKICAgICAgICAgIF9jKCJzdHJvbmciLCBbX3ZtLl92KCJTZXR0aW5ncyIpXSksCiAgICAgICAgXSksCiAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX3ZtLl92KCJTZWxlY3QgIiksCiAgICAgICAgICBfYygic3Ryb25nIiwgW192bS5fdigiR2l0SHViIGludGVncmF0aW9uIildKSwKICAgICAgICBdKSwKICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICBfdm0uX3YoIlVuZGVyIHRoZSAiKSwKICAgICAgICAgIF9jKCJzdHJvbmciLCBbX3ZtLl92KCJBdXRvbWF0aWMgZml4IHB1bGwgcmVxdWVzdHMiKV0pLAogICAgICAgICAgX3ZtLl92KCIgc2VjdGlvbjpcbiIpLAogICAgICAgICAgX2MoInVsIiwgWwogICAgICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICAgICAgX3ZtLl92KCJTZWxlY3QgdG8gIiksCiAgICAgICAgICAgICAgX2MoInN0cm9uZyIsIFtfdm0uX3YoIkN1c3RvbWl6ZSBmb3Igb25seSB0aGlzIHByb2plY3QiKV0pLAogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgICAgICBfdm0uX3YoIkVuYWJsZSAiKSwKICAgICAgICAgICAgICBfYygic3Ryb25nIiwgW192bS5fdigiS25vd24gdnVsbmVyYWJpbGl0aWVzIChiYWNrbG9nKSIpXSksCiAgICAgICAgICAgIF0pLAogICAgICAgICAgXSksCiAgICAgICAgXSksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgIGF0dHJzOiB7IHNyYzogcmVxdWlyZSgiLi4vLi4vLi4vLmdpdGJvb2svYXNzZXRzL29zMy5wbmciKSwgYWx0OiAiIiB9LAogICAgICAgIH0pLAogICAgICBdKSwKICAgIF0KICApCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}