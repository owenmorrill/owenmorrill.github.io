{"remainingRequest":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/owenmorrill/Sites/vue-docs/docs/src/user-docs-copy-guide/scan-and-fix-security-issues-in-kubernetes-configuration-files.md?vue&type=template&id=2b8550a4&","dependencies":[{"path":"/Users/owenmorrill/Sites/vue-docs/docs/src/user-docs-copy-guide/scan-and-fix-security-issues-in-kubernetes-configuration-files.md","mtime":1646940843140},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js","mtime":1647884535821},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1647884535666},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js","mtime":1647884535821},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/index.js","mtime":1647884534539},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/@vuepress/markdown-loader/index.js","mtime":1647884535441}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHsKICB2YXIgX3ZtID0gdGhpcwogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogIHJldHVybiBfYygKICAgICJDb250ZW50U2xvdHNEaXN0cmlidXRvciIsCiAgICB7IGF0dHJzOiB7ICJzbG90LWtleSI6IF92bS4kcGFyZW50LnNsb3RLZXkgfSB9LAogICAgWwogICAgICBfYygKICAgICAgICAiaDEiLAogICAgICAgIHsKICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgIGlkOiAic2Nhbi1hbmQtZml4LXNlY3VyaXR5LWlzc3Vlcy1pbi1rdWJlcm5ldGVzLWNvbmZpZ3VyYXRpb24tZmlsZXMiLAogICAgICAgICAgfSwKICAgICAgICB9LAogICAgICAgIFsKICAgICAgICAgIF9jKAogICAgICAgICAgICAiYSIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICBocmVmOiAiI3NjYW4tYW5kLWZpeC1zZWN1cml0eS1pc3N1ZXMtaW4ta3ViZXJuZXRlcy1jb25maWd1cmF0aW9uLWZpbGVzIiwKICAgICAgICAgICAgICB9LAogICAgICAgICAgICB9LAogICAgICAgICAgICBbX3ZtLl92KCIjIildCiAgICAgICAgICApLAogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAiIFNjYW4gYW5kIGZpeCBzZWN1cml0eSBpc3N1ZXMgaW4gS3ViZXJuZXRlcyBjb25maWd1cmF0aW9uIGZpbGVzIgogICAgICAgICAgKSwKICAgICAgICBdCiAgICAgICksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiU255ayBJbmZyYXN0cnVjdHVyZSBhcyBDb2RlIHNjYW5zIHlvdXIgbWFuaWZlc3QgZmlsZXMgZm9yIHNlY3VyaXR5IHZ1bG5lcmFiaWxpdGllcywgYW5kIHNjYW5zIHlvdXIgS3ViZXJuZXRlcyBjb25maWd1cmF0aW9uIGZpbGVzIGZvciBtaXNjb25maWd1cmF0aW9ucyBhbmQgc2VjdXJpdHkgaXNzdWVzIGFzIHdlbGwuIEZvciBjb25maWd1cmF0aW9uIGZpbGVzLCBvbmNlIHNjYW5uZWQsIFNueWsgcmVwb3J0cyBvbiBhbnkgbWlzY29uZmlndXJhdGlvbnMgYmFzZWQgb24gdGhlIHNldHRpbmdzIHlvdXIgYWRtaW5pc3RyYXRvciBoYXMgaW1wbGVtZW50ZWQsIGFuZCBtYWtlcyByZWNvbW1lbmRhdGlvbnMgZm9yIGZpeGluZyBhY2NvcmRpbmdseS4iCiAgICAgICAgKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaDIiLCB7IGF0dHJzOiB7IGlkOiAicHJlcmVxdWlzaXRlcyIgfSB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsIGF0dHJzOiB7IGhyZWY6ICIjcHJlcmVxdWlzaXRlcyIgfSB9LAogICAgICAgICAgW192bS5fdigiIyIpXQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCIgUHJlcmVxdWlzaXRlcyIpLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJ1bCIsIFsKICAgICAgICBfYygKICAgICAgICAgICJsaSIsCiAgICAgICAgICBbCiAgICAgICAgICAgIF92bS5fdigiQW4gYWRtaW5pc3RyYXRvciBzaG91bGQgIiksCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJSb3V0ZXJMaW5rIiwKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICB0bzogIi9zY2FuLXRlcnJhZm9ybS1maWxlcy9jb25maWd1cmUteW91ci1pbnRlZ3JhdGlvbi10by1maW5kLXNlY3VyaXR5LWlzc3Vlcy1pbi15b3VyLXRlcnJhZm9ybS1maWxlc3MuaHRtbCIsCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgW192bS5fdigiaW50ZWdyYXRlIHlvdXIgb3JnYW5pemF0aW9uICIpXQogICAgICAgICAgICApLAogICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgIndpdGggeW91ciBwcmVmZXJyZWQgR2l0IHJlcG9zaXRvcnkgYW5kIGVuYWJsZSBkZXRlY3Rpb24gb2YgY29uZmlndXJhdGlvbiBmaWxlcyBhcyBkZXNjcmliZWQuIgogICAgICAgICAgICApLAogICAgICAgICAgXSwKICAgICAgICAgIDEKICAgICAgICApLAogICAgICAgIF92bS5fdigiICIpLAogICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgIllvdSBtdXN0IGhhdmUgYSBTbnlrIGFjY291bnQgYW5kIHlvdXIgY29uZmlndXJhdGlvbiBmaWxlcyBzaG91bGQgYmUgaW4gZWl0aGVyIEpTT04gb3IgWUFNTCBmb3JtYXQuIgogICAgICAgICAgKSwKICAgICAgICBdKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFtfdm0uX3YoIlNueWsgSW5mcmFzdHJ1Y3R1cmUgYXMgQ29kZSBzdXBwb3J0czoiKV0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInVsIiwgWwogICAgICAgIF9jKCJsaSIsIFtfdm0uX3YoIkRlcGxveW1lbnRzLCBQb2RzIGFuZCBTZXJ2aWNlcy4iKV0pLAogICAgICAgIF92bS5fdigiICIpLAogICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgIkNyb25Kb2JzLCBKb2JzLCBTdGF0ZWZ1bFNldCwgUmVwbGljYVNldCwgRGFlbW9uU2V0LCBhbmQgUmVwbGljYXRpb25Db250cm9sbGVyLiIKICAgICAgICAgICksCiAgICAgICAgXSksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgyIiwgeyBhdHRyczogeyBpZDogInNjYW4tYW5kLWZpeC15b3VyLWNvbmZpZ3VyYXRpb24tZmlsZXMiIH0gfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgewogICAgICAgICAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgICAgICAgICBhdHRyczogeyBocmVmOiAiI3NjYW4tYW5kLWZpeC15b3VyLWNvbmZpZ3VyYXRpb24tZmlsZXMiIH0sCiAgICAgICAgICB9LAogICAgICAgICAgW192bS5fdigiIyIpXQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCIgU2NhbiBhbmQgZml4IHlvdXIgY29uZmlndXJhdGlvbiBmaWxlcyIpLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJvbCIsIFsKICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICJMb2cgaW4gdG8geW91ciBhY2NvdW50IGFuZCBuYXZpZ2F0ZSB0byB0aGUgcmVsZXZhbnQgZ3JvdXAgYW5kIG9yZ2FuaXphdGlvbiB0aGF0IHlvdSB3YW50IHRvIG1hbmFnZS4iCiAgICAgICAgICApLAogICAgICAgIF0pLAogICAgICAgIF92bS5fdigiICIpLAogICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgIklmIHlvdSBhbHJlYWR5IGltcG9ydGVkIHlvdXIgcmVwb3NpdG9yaWVzIGZvciB0ZXN0aW5nIGJlZm9yZSBjbG91ZCBjb25maWd1cmF0aW9uIGZpbGUgZGV0ZWN0aW9uIHdhcyBlbmFibGVkIGJ5IHlvdXIgYWRtaW5pc3RyYXRvciwgdGhlbiB5b3Ugc2hvdWxkIHJlLWltcG9ydCB0aGF0IHJlcG9zaXRvcnkgYWdhaW4gaW4gb3JkZXIgdG8gaW1wb3J0IHRoZSByZWxldmFudCBKU09OIG9yIFlBTUwgY29uZmlndXJhdGlvbiBmaWxlczoiCiAgICAgICAgICApLAogICAgICAgIF0pLAogICAgICAgIF92bS5fdigiICIpLAogICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgIF92bS5fdigiRXZlcnkgdGltZSBhIHJlcG9zaXRvcnkgaXMgc2Nhbm5lZDpcbiIpLAogICAgICAgICAgX2MoIm9sIiwgWwogICAgICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgIkV2ZXJ5IHN1cHBvcnRlZCBtYW5pZmVzdCBmaWxlIGFuZCBldmVyeSBzdXBwb3J0ZWQgY29uZmlndXJhdGlvbiBmaWxlIGlzIGltcG9ydGVkIGFzIGEgc2VwYXJhdGUgcHJvamVjdCwgZ3JvdXBlZCB0b2dldGhlciBwZXIgcmVwb3NpdG9yeSwgc2ltaWxhciB0byB0aGlzIGV4YW1wbGU6IgogICAgICAgICAgICAgICksCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICdJZiB5b3UgcmUtaW1wb3J0ZWQgdGhlIHJlcG9zaXRvcnkgaW4gb3JkZXIgdG8gaW1wb3J0IHRoZSBjbG91ZCBjb25maWd1cmF0aW9uIGZpbGVzLCB0aGVuIFNueWsgaW1wb3J0cyBhbmQgdGVzdHMgdGhlIGNvbmZpZ3VyYXRpb24gZmlsZXMgYW5kIGFsc28gcmUtdGVzdHMgdGhlIGFscmVhZHkgaW1wb3J0ZWQgYXBwbGljYXRpb24gbWFuaWZlc3QgZmlsZXMgLSBkaXNwbGF5aW5nIHRoZSB0ZXN0IHRpbWUgYXMgIm5vdyIuJwogICAgICAgICAgICAgICksCiAgICAgICAgICAgIF0pLAogICAgICAgICAgXSksCiAgICAgICAgXSksCiAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAiQ2xpY2sgdGhlIHByb2plY3QgbGluayB5b3UncmUgaW50ZXJlc3RlZCBpbiwgdG8gdmlldyB0aGUgc2NhbiByZXN1bHRzIGFuZCB0byBjb3JyZWN0IHlvdXIgY29uZmlndXJhdGlvbiBmaWxlcyBhY2NvcmRpbmdseToiCiAgICAgICAgICApLAogICAgICAgIF0pLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICBhdHRyczogeyBzcmM6IHJlcXVpcmUoIi4uLy4uLy4uLy5naXRib29rL2Fzc2V0cy80LnBuZyIpLCBhbHQ6ICIiIH0sCiAgICAgICAgfSksCiAgICAgIF0pLAogICAgXQogICkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gW10KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}