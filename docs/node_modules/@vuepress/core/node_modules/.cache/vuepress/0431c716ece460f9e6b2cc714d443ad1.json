{"remainingRequest":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/owenmorrill/Sites/vue-docs/docs/src/snyk/tutorials/github/securing-a-toolchain-with-snyk-and-github/part-2-container/section-1-containerize-your-app.md?vue&type=template&id=76416834&","dependencies":[{"path":"/Users/owenmorrill/Sites/vue-docs/docs/src/snyk/tutorials/github/securing-a-toolchain-with-snyk-and-github/part-2-container/section-1-containerize-your-app.md","mtime":1644439893119},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js","mtime":1647884535821},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1647884535666},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js","mtime":1647884535821},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/index.js","mtime":1647884534539},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/@vuepress/markdown-loader/index.js","mtime":1647884535441}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxDb250ZW50U2xvdHNEaXN0cmlidXRvciA6c2xvdC1rZXk9IiRwYXJlbnQuc2xvdEtleSI+PGgxIGlkPSJzZWN0aW9uLTQtY29udGFpbmVyaXplLXlvdXItYXBwIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3NlY3Rpb24tNC1jb250YWluZXJpemUteW91ci1hcHAiPiM8L2E+IFNlY3Rpb24gNDogQ29udGFpbmVyaXplIHlvdXIgYXBwPC9oMT4KPGgyIGlkPSJzdGVwLTEtY3JlYXRlLWEtbmV3LWJyYW5jaC1mb3ItdGhlLWNvbnRhaW5lci1maWxlcyI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNzdGVwLTEtY3JlYXRlLWEtbmV3LWJyYW5jaC1mb3ItdGhlLWNvbnRhaW5lci1maWxlcyI+IzwvYT4gU3RlcCAxOiBDcmVhdGUgYSBuZXcgYnJhbmNoIGZvciB0aGUgY29udGFpbmVyIGZpbGVzPC9oMj4KPHA+TGV0J3Mgc3RhcnQgYnkgY3JlYXRpbmcgYSBuZXcgYnJhbmNoIGZyb20gb3VyIDxjb2RlPmRldmVsb3A8L2NvZGU+IGJyYW5jaCwgd2hlcmUgd2UnbGwgY3JlYXRlIHRoZSBmaWxlcyBmb3IgdGhpcyBzZWN0aW9uIGJlZm9yZSBtZXJnaW5nIHRoZW0gdG8gPGNvZGU+ZGV2ZWxvcDwvY29kZT4uIENhbGwgaXQgPGNvZGU+YWRkLWNvbnRhaW5lci1maWxlczwvY29kZT4gLjwvcD4KPHA+PGltZyBzcmM9Imh0dHBzOi8vcGFydG5lci13b3Jrc2hvcC1hc3NldHMuczMudXMtZWFzdC0yLmFtYXpvbmF3cy5jb20vZ2gtY29udGFpbmVyLW5ld2JyYW5jaC5wbmciIGFsdD0iIj48L3A+CjxoMiBpZD0ic3RlcC0yLWNyZWF0ZS10aGUtZmlsZXMtZm9yLXRoZS1jb250YWluZXItd29ya2Zsb3ciPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjc3RlcC0yLWNyZWF0ZS10aGUtZmlsZXMtZm9yLXRoZS1jb250YWluZXItd29ya2Zsb3ciPiM8L2E+IFN0ZXAgMjogQ3JlYXRlIHRoZSBmaWxlcyBmb3IgdGhlIENvbnRhaW5lciB3b3JrZmxvdzwvaDI+CjxwPnslIGhpbnQgc3R5bGU9JnF1b3Q7aW5mbyZxdW90OyAlfQpJbiB0aGlzIHN0ZXAgeW91J2xsIGNyZWF0ZSBhIERvY2tlcmZpbGUgYW5kIG1vZGlmeSB0aGUgR2l0SHViIEFjdGlvbnMgQ0kgV29ya2Zsb3dzLiBUaGUgZmlsZXMgYXJlIGF2YWlsYWJsZSBpbiB0aGUgPGNvZGU+Y29udGFpbmVyLWFjdGlvbnM8L2NvZGU+IGJyYW5jaCBpZiB5b3Ugd2FudCB0byBjb3B5LXBhc3RlIGZyb20gdGhlcmUuIFRoZXNlIGFyZSB0aGVyZSBmb3IgcmVmZXJlbmNlOyBhdHRlbXB0aW5nIHRvIG1lcmdlIHRoYXQgYnJhbmNoIHRvIDxjb2RlPmRldmVsb3A8L2NvZGU+IHdpbGwgY2F1c2UgTWVyZ2UgQ29uZmxpY3RzLgp7JSBlbmRoaW50ICV9PC9wPgo8aDMgaWQ9ImNyZWF0ZS1hLWRvY2tlcmZpbGUiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjY3JlYXRlLWEtZG9ja2VyZmlsZSI+IzwvYT4gQ3JlYXRlIGEgRG9ja2VyZmlsZTwvaDM+CjxwPlRoZSBmaXJzdCBmaWxlIHdlJ2xsIGNyZWF0ZSBpcyB0aGUgPGNvZGU+RG9ja2VyZmlsZTwvY29kZT4gLCB0aGUgaW5zdHJ1Y3Rpb25zIHRvIHBhY2thZ2UgdGhlIGFwcGxpY2F0aW9uIGludG8gYSBjb250YWluZXIuIEVuc3VyZSB5b3UncmUgb24gdGhlIG5ldyBicmFuY2gsIGFuZCBjbGljayBvbiAmcXVvdDtBZGQgRmlsZSZxdW90OywgdGhlbiAmcXVvdDtDcmVhdGUgbmV3IGZpbGUmcXVvdDsuPC9wPgo8cD48aW1nIHNyYz0iaHR0cHM6Ly9wYXJ0bmVyLXdvcmtzaG9wLWFzc2V0cy5zMy51cy1lYXN0LTIuYW1hem9uYXdzLmNvbS9naC1jb250YWluZXItY3JlYXRlbmV3ZmlsZS5wbmciIGFsdD0iIj48L3A+CjxwPkNhbGwgdGhlIG5ldyBmaWxlIDxjb2RlPkRvY2tlcmZpbGU8L2NvZGU+IGFzIHNob3duIGJlbG93LjwvcD4KPHA+PGltZyBzcmM9Imh0dHBzOi8vcGFydG5lci13b3Jrc2hvcC1hc3NldHMuczMudXMtZWFzdC0yLmFtYXpvbmF3cy5jb20vZ2gtY29udGFpbmVyLWNyZWF0ZWRvY2tlcmZpbGUucG5nIiBhbHQ9IiI+PC9wPgo8cD5QYXN0ZSB0aGlzIGluIGFzIHRoZSBjb250ZW50cyBvZiB0aGUgPGNvZGU+RG9ja2VyZmlsZTwvY29kZT48L3A+CjwhLS1iZWZvcmViZWdpbi0tPjxkaXYgY2xhc3M9Imxhbmd1YWdlLXRleHQgZXh0cmEtY2xhc3MiPjwhLS1hZnRlcmJlZ2luLS0+PHByZSB2LXByZSBjbGFzcz0ibGFuZ3VhZ2UtdGV4dCI+PGNvZGU+RlJPTSBub2RlOjYtc3RyZXRjaAoKUlVOIG1rZGlyIC91c3Ivc3JjL2dvb2YKUlVOIG1rZGlyIC90bXAvZXh0cmFjdGVkX2ZpbGVzCkNPUFkgLiAvdXNyL3NyYy9nb29mCldPUktESVIgL3Vzci9zcmMvZ29vZgoKUlVOIG5wbSB1cGRhdGUKUlVOIG5wbSBpbnN0YWxsCkVYUE9TRSAzMDAxCkVYUE9TRSA5MjI5CkVOVFJZUE9JTlQgWyZxdW90O25wbSZxdW90OywgJnF1b3Q7c3RhcnQmcXVvdDtdCjwvY29kZT48L3ByZT4KPCEtLWJlZm9yZWVuZC0tPjwvZGl2PjwhLS1hZnRlcmVuZC0tPjxwPldoZW4gcmVhZHksIGNvbW1pdCB0aGUgY2hhbmdlcyBkaXJlY3RseSB0byB0aGUgPGNvZGU+YWRkLWNvbnRhaW5lci1maWxlczwvY29kZT4gYnJhbmNoLjwvcD4KPHA+PGltZyBzcmM9Imh0dHBzOi8vcGFydG5lci13b3Jrc2hvcC1hc3NldHMuczMudXMtZWFzdC0yLmFtYXpvbmF3cy5jb20vZ2gtY29udGFpbmVyLWNyZWF0ZWRvY2tlcmZpbGUyLnBuZyIgYWx0PSIiPjwvcD4KPGgzIGlkPSJtb2RpZnktdGhlLWNpLXdvcmtmbG93cyI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNtb2RpZnktdGhlLWNpLXdvcmtmbG93cyI+IzwvYT4gTW9kaWZ5IHRoZSBDSSB3b3JrZmxvd3M8L2gzPgo8cD5Ob3csIHdlIG5lZWQgdG8gdGVsbCBHaXRIdWIgQWN0aW9ucyBob3cgdG8gYnVpbGQgb3VyIGNvbnRhaW5lci4gUmVjYWxsIHRoYXQgdGhlIDxjb2RlPi5naXRodWIvd29ya2Zsb3dzPC9jb2RlPiBmb2xkZXIgY29udGFpbnMgdGhlIENJIHdvcmtmbG93cyB0aGF0IHJlLWJ1aWxkIG91ciBhcHBsaWNhdGlvbiB3aGVuIFB1bGwgUmVxdWVzdHMgYXJlIG9wZW5lZCBhZ2FpbnN0IG91ciBicmFuY2hlcy4gTGV0J3MgYWRkIHRoZSBDb250YWluZXIgYnVpbGQgc3RlcHMgdG8gYm90aCBDSSB3b3JrZmxvd3MgdXNpbmcgdGhlIEdpdEh1YiBFZGl0b3IuPC9wPgo8cD48aW1nIHNyYz0iaHR0cHM6Ly9wYXJ0bmVyLXdvcmtzaG9wLWFzc2V0cy5zMy51cy1lYXN0LTIuYW1hem9uYXdzLmNvbS9naC1jb250YWluZXItZWRpdGRldmVsb3BjaS5wbmciIGFsdD0iIj48L3A+CjxwPlJlcGxhY2UgdGhlIGNvbnRlbnRzIG9mIDxjb2RlPi5naXRodWIvd29ya2Zsb3dzL2dvb2YtY2ktZGV2ZWxvcDwvY29kZT4gd2l0aCB0aGUgZm9sbG93aW5nOjwvcD4KPCEtLWJlZm9yZWJlZ2luLS0+PGRpdiBjbGFzcz0ibGFuZ3VhZ2UtdGV4dCBleHRyYS1jbGFzcyI+PCEtLWFmdGVyYmVnaW4tLT48cHJlIHYtcHJlIGNsYXNzPSJsYW5ndWFnZS10ZXh0Ij48Y29kZT4jIFRoaXMgd29ya2Zsb3cgd2lsbCBkbyBhIGNsZWFuIGluc3RhbGwgb2Ygbm9kZSBkZXBlbmRlbmNpZXMsIGJ1aWxkIHRoZSBzb3VyY2UgY29kZSBhbmQgcnVuIHRlc3RzIGFjcm9zcyBkaWZmZXJlbnQgdmVyc2lvbnMgb2Ygbm9kZQojIEZvciBtb3JlIGluZm9ybWF0aW9uIHNlZTogaHR0cHM6Ly9oZWxwLmdpdGh1Yi5jb20vYWN0aW9ucy9sYW5ndWFnZS1hbmQtZnJhbWV3b3JrLWd1aWRlcy91c2luZy1ub2RlanMtd2l0aC1naXRodWItYWN0aW9ucwoKbmFtZTogTm9kZS5qcyBDSSB0YXNrIGZvciBkZXZlbG9wIGJyYW5jaAoKb246CiAgcHVzaDoKICAgIGJyYW5jaGVzOiBbIGRldmVsb3AgXQogIHB1bGxfcmVxdWVzdDoKICAgIGJyYW5jaGVzOiBbIGRldmVsb3AgXQoKam9iczoKICBidWlsZF9hcHA6CiAgICBydW5zLW9uOiB1YnVudHUtbGF0ZXN0CiAgICBzdGVwczoKICAgIC0gdXNlczogYWN0aW9ucy9jaGVja291dEB2MgogICAgLSBuYW1lOiBVc2UgTm9kZS5qcyAxMi54CiAgICAgIHVzZXM6IGFjdGlvbnMvc2V0dXAtbm9kZUB2MQogICAgICB3aXRoOgogICAgICAgIG5vZGUtdmVyc2lvbjogMTIueAogICAgLSBydW46IG5wbSBjaQogICAgLSBydW46IG5wbSBydW4gYnVpbGQgLS1pZi1wcmVzZW50CiAgYnVpbGRfY29udGFpbmVyOgogICAgbmVlZHM6IFtidWlsZF9hcHBdCiAgICBydW5zLW9uOiB1YnVudHUtbGF0ZXN0CiAgICBzdGVwczoKICAgICAgLSB1c2VzOiBhY3Rpb25zL2NoZWNrb3V0QHYyCiAgICAgIC0gbmFtZTogU2V0dXAgdXAgRG9ja2VyIEJ1aWxkeAogICAgICAgIHVzZXM6IGRvY2tlci9zZXR1cC1idWlsZHgtYWN0aW9uQHYxCiAgICAgIC0gbmFtZTogQnVpbGQgRG9ja2VyIEltYWdlCiAgICAgICAgaWQ6IGRvY2tlcl9idWlsZAogICAgICAgIHVzZXM6IGRvY2tlci9idWlsZC1wdXNoLWFjdGlvbkB2MgogICAgICAgIHdpdGg6CiAgICAgICAgICBwdXNoOiBmYWxzZQogICAgICAgICAgbG9hZDogdHJ1ZQogICAgICAgICAgdGFnczogZ29vZjpkZXZlbG9wICAgICAgICAgCiAgICAgIC0gbmFtZTogU255ayBDb250YWluZXIgVGVzdAogICAgICAgIGNvbnRpbnVlLW9uLWVycm9yOiB0cnVlCiAgICAgICAgdXNlczogc255ay9hY3Rpb25zL2RvY2tlckBtYXN0ZXIKICAgICAgICBlbnY6CiAgICAgICAgICBTTllLX1RPS0VOOiAke3sgU2VjcmV0cy5TTllLX1RPS0VOIH19CiAgICAgICAgd2l0aDoKICAgICAgICAgIGltYWdlOiBnb29mOmRldmVsb3AKICAgICAgICAgIGFyZ3M6IC0tZmlsZT1Eb2NrZXJmaWxlCiAgICAgIC0gbmFtZTogVXBsb2FkIENvbnRhaW5lciBTY2FuIHJlc3VsdHMgdG8gR2l0SHViIENvZGUgU2Nhbm5pbmcKICAgICAgICB1c2VzOiBnaXRodWIvY29kZXFsLWFjdGlvbi91cGxvYWQtc2FyaWZAdjEKICAgICAgICB3aXRoOgogICAgICAgICAgc2FyaWZfZmlsZTogc255ay5zYXJpZgo8L2NvZGU+PC9wcmU+CjwhLS1iZWZvcmVlbmQtLT48L2Rpdj48IS0tYWZ0ZXJlbmQtLT48cD5PdXIgQ0kgd29ya2Zsb3cgd2lsbCBub3cgdGFrZSB0aGUgZm9sbG93aW5nIGFjdGlvbnM6PC9wPgo8b2w+CjxsaT5GaXJzdCwgaXQgd2lsbCBidWlsZCB0aGUgYXBwLiBUaGlzIGlzIHRoZSA8Y29kZT5idWlsZC1hcHA8L2NvZGU+IGpvYi48L2xpPgo8bGk+SWYgdGhlIGFwcCBidWlsZCBzdWNjZWVkcywgaXQgd2lsbCBidWlsZCB0aGUgY29udGFpbmVyLjwvbGk+CjxsaT5JZiB0aGUgY29udGFpbmVyIGJ1aWxkcyBzdWNjZXNzZnVsbHksIGl0IHdpbGwgdGhlbiBzY2FuIGl0IHdpdGggU255ayBjb250YWluZXIuPC9saT4KPGxpPldoZW4gdGhlIHNjYW4gaXMgZG9uZSwgcmVzdWx0cyBhcmUgcHVzaGVkIHRvIEdpdEh1YiBTZWN1cml0eSBDb2RlIFNjYW5uaW5nLjwvbGk+Cjwvb2w+CjxwPk5vdyBjb21taXQgdGhlIGNoYW5nZXMgZGlyZWN0bHkgdG8gb3VyIG5ldyA8Y29kZT5hZGQtY29udGFpbmVyLWZpbGVzPC9jb2RlPiBicmFuY2guPC9wPgo8cD48aW1nIHNyYz0iaHR0cHM6Ly9wYXJ0bmVyLXdvcmtzaG9wLWFzc2V0cy5zMy51cy1lYXN0LTIuYW1hem9uYXdzLmNvbS9naC1jb250YWluZXItY29tbWl0Y29udGFpbmVyY2kucG5nIiBhbHQ9IiI+PC9wPgo8cD5Ob3csIHJlcGVhdCB0aGUgc2FtZSBwcm9jZXNzIGZvciB0aGUgPGNvZGU+UFJPRDwvY29kZT4gd29ya2Zsb3csIHJlcGxhY2luZyB0aGUgaW1hZ2UgdGFnIHNwZWNpZmllZCBpbiBsaW5lcyAzNiBhbmQgNDMgZnJvbSA8Y29kZT5nb29mOmRldmVsb3A8L2NvZGU+IHRvIDxjb2RlPmdvb2Y6UFJPRDwvY29kZT4uIFRoaXMgd2lsbCBlbnN1cmUgdGhlIDxjb2RlPlBST0Q8L2NvZGU+IGFuZCA8Y29kZT5kZXZlbG9wPC9jb2RlPiBjb250YWluZXJzIHJlbWFpbiBzZXBhcmF0ZSBlbnRpdGllcyBvbmNlIHVwbG9hZGVkIHRvIGEgY29udGFpbmVyIHJlZ2lzdHJ5LjwvcD4KPGgyIGlkPSJzdGVwLTMtY3JlYXRlLWEtcHVsbC1yZXF1ZXN0LWludG8tZGV2ZWxvcCI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNzdGVwLTMtY3JlYXRlLWEtcHVsbC1yZXF1ZXN0LWludG8tZGV2ZWxvcCI+IzwvYT4gU3RlcCAzOiBDcmVhdGUgYSBQdWxsIFJlcXVlc3QgaW50byBkZXZlbG9wPC9oMj4KPHA+V2l0aCB0aGUgRG9ja2VyZmlsZSBjcmVhdGVkIGFuZCB3b3JrZmxvd3MgbW9kaWZpZWQsIHdlJ2xsIG1lcmdlIHRoZSA8Y29kZT5hZGQtY29udGFpbmVyLWZpbGVzPC9jb2RlPiBicmFuY2ggaW50byB0aGUgPGNvZGU+ZGV2ZWxvcDwvY29kZT4gYnJhbmNoIHRvIG1ha2UgaXQgb2ZmaWNpYWwuIEluIEdpdEh1YiwgaW5pdGlhdGl2ZSBhIFB1bGwgUmVxdWVzdC4gTGlrZSBpbiB0aGUgcHJldmlvdXMgc2VjdGlvbiwgcmVtZW1iZXIgdG8gc2VsZWN0IHlvdXIgZm9yayBhcyB0aGUgQmFzZSByZXBvLjwvcD4KPHA+PGltZyBzcmM9Imh0dHBzOi8vcGFydG5lci13b3Jrc2hvcC1hc3NldHMuczMudXMtZWFzdC0yLmFtYXpvbmF3cy5jb20vZ2gtY29udGFpbmVyLWFkZGZpbGVzcHIucG5nIiBhbHQ9IiI+PC9wPgo8cD5PbmNlIHRoZSBQUiBpcyBjcmVhdGVkLCB0aGUgY2hlY2tzIHdpbGwgcnVuLCBpbmNsdWRpbmcgdGhlIG5ldyBvbmUgd2UgYWRkZWQgdG8gYnVpbGQgdGhlIGNvbnRhaW5lciBpbWFnZS4gT25jZSBhbGwgY2hlY2tzIGNvbXBsZXRlLCBtZXJnZSB0aGUgUHVsbCBSZXF1ZXN0IGFuZCBkZWxldGUgdGhlIGJyYW5jaC48L3A+CjxwPjxpbWcgc3JjPSJodHRwczovL3BhcnRuZXItd29ya3Nob3AtYXNzZXRzLnMzLnVzLWVhc3QtMi5hbWF6b25hd3MuY29tL2doLWNvbnRhaW5lci1hZGRmaWxlcHJjaGVja3MucG5nIiBhbHQ9IiI+PC9wPgo8cD5XZSBoYXZlIG5vdyBwYWNrYWdlZCBvdXIgYXBwbGljYXRpb24gaW50byBhIGNvbnRhaW5lciEgRXZlbiB0aHJvdWdoIHdlIGZpeGVkIGFsbCBvcGVuIGFuZCBmaXhhYmxlIGlzc3VlcyB3aXRoIHRoZSBPcGVuIFNvdXJjZSBjb21wb25lbnRzIGluIG91ciBhcHBsaWNhdGlvbiwgb3VyIGRlY2lzaW9uIHRvIHBhY2thZ2UgaXQgaW50byBhIGNvbnRhaW5lciBpbnRyb2R1Y2VkIGFkZGl0aW9uYWwgcmlza3MgdGhhdCBtdXN0IGJlIGFkZHJlc3NlZC4gSGVhZCBvbiB0byBTZWN0aW9uIDIgdG8gc2VlIGhvdyBTbnlrIENvbnRhaW5lciBoZWxwcyB5b3UgZmluZCBhbmQgZml4IHRob3NlIGlzc3Vlcy48L3A+CjwvQ29udGVudFNsb3RzRGlzdHJpYnV0b3I+Cg=="},null]}