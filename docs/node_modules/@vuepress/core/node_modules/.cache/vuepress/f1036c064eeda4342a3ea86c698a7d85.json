{"remainingRequest":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/owenmorrill/Sites/vue-docs/docs/src/guide/products/snyk-infrastructure-as-code/scan-kubernetes-configuration-files/scan-and-fix-security-issues-in-kubernetes-configuration-files.md?vue&type=template&id=5b43243a&","dependencies":[{"path":"/Users/owenmorrill/Sites/vue-docs/docs/src/guide/products/snyk-infrastructure-as-code/scan-kubernetes-configuration-files/scan-and-fix-security-issues-in-kubernetes-configuration-files.md","mtime":1646940843139},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js","mtime":1647884535821},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1647884535666},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js","mtime":1647884535821},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/index.js","mtime":1647884534539},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/@vuepress/markdown-loader/index.js","mtime":1647884535441}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHsKICB2YXIgX3ZtID0gdGhpcwogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogIHJldHVybiBfYygKICAgICJDb250ZW50U2xvdHNEaXN0cmlidXRvciIsCiAgICB7IGF0dHJzOiB7ICJzbG90LWtleSI6IF92bS4kcGFyZW50LnNsb3RLZXkgfSB9LAogICAgWwogICAgICBfYygKICAgICAgICAiaDEiLAogICAgICAgIHsKICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgIGlkOiAic2Nhbi1hbmQtZml4LXNlY3VyaXR5LWlzc3Vlcy1pbi1rdWJlcm5ldGVzLWNvbmZpZ3VyYXRpb24tZmlsZXMiLAogICAgICAgICAgfSwKICAgICAgICB9LAogICAgICAgIFsKICAgICAgICAgIF9jKAogICAgICAgICAgICAiYSIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICBocmVmOiAiI3NjYW4tYW5kLWZpeC1zZWN1cml0eS1pc3N1ZXMtaW4ta3ViZXJuZXRlcy1jb25maWd1cmF0aW9uLWZpbGVzIiwKICAgICAgICAgICAgICB9LAogICAgICAgICAgICB9LAogICAgICAgICAgICBbX3ZtLl92KCIjIildCiAgICAgICAgICApLAogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAiIFNjYW4gYW5kIGZpeCBzZWN1cml0eSBpc3N1ZXMgaW4gS3ViZXJuZXRlcyBjb25maWd1cmF0aW9uIGZpbGVzIgogICAgICAgICAgKSwKICAgICAgICBdCiAgICAgICksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiU255ayBJbmZyYXN0cnVjdHVyZSBhcyBDb2RlIHNjYW5zIHlvdXIgbWFuaWZlc3QgZmlsZXMgZm9yIHNlY3VyaXR5IHZ1bG5lcmFiaWxpdGllcywgYW5kIHNjYW5zIHlvdXIgS3ViZXJuZXRlcyBjb25maWd1cmF0aW9uIGZpbGVzIGZvciBtaXNjb25maWd1cmF0aW9ucyBhbmQgc2VjdXJpdHkgaXNzdWVzIGFzIHdlbGwuIEZvciBjb25maWd1cmF0aW9uIGZpbGVzLCBvbmNlIHNjYW5uZWQsIFNueWsgcmVwb3J0cyBvbiBhbnkgbWlzY29uZmlndXJhdGlvbnMgYmFzZWQgb24gdGhlIHNldHRpbmdzIHlvdXIgYWRtaW5pc3RyYXRvciBoYXMgaW1wbGVtZW50ZWQsIGFuZCBtYWtlcyByZWNvbW1lbmRhdGlvbnMgZm9yIGZpeGluZyBhY2NvcmRpbmdseS4iCiAgICAgICAgKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaDIiLCB7IGF0dHJzOiB7IGlkOiAicHJlcmVxdWlzaXRlcyIgfSB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsIGF0dHJzOiB7IGhyZWY6ICIjcHJlcmVxdWlzaXRlcyIgfSB9LAogICAgICAgICAgW192bS5fdigiIyIpXQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCIgUHJlcmVxdWlzaXRlcyIpLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJ1bCIsIFsKICAgICAgICBfYygKICAgICAgICAgICJsaSIsCiAgICAgICAgICBbCiAgICAgICAgICAgIF92bS5fdigiQW4gYWRtaW5pc3RyYXRvciBzaG91bGQgIiksCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJSb3V0ZXJMaW5rIiwKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICB0bzogIi9ndWlkZS9wcm9kdWN0cy9zbnlrLWluZnJhc3RydWN0dXJlLWFzLWNvZGUvc2Nhbi10ZXJyYWZvcm0tZmlsZXMvY29uZmlndXJlLXlvdXItaW50ZWdyYXRpb24tdG8tZmluZC1zZWN1cml0eS1pc3N1ZXMtaW4teW91ci10ZXJyYWZvcm0tZmlsZXNzLmh0bWwiLAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIFtfdm0uX3YoImludGVncmF0ZSB5b3VyIG9yZ2FuaXphdGlvbiAiKV0KICAgICAgICAgICAgKSwKICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICJ3aXRoIHlvdXIgcHJlZmVycmVkIEdpdCByZXBvc2l0b3J5IGFuZCBlbmFibGUgZGV0ZWN0aW9uIG9mIGNvbmZpZ3VyYXRpb24gZmlsZXMgYXMgZGVzY3JpYmVkLiIKICAgICAgICAgICAgKSwKICAgICAgICAgIF0sCiAgICAgICAgICAxCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICJZb3UgbXVzdCBoYXZlIGEgU255ayBhY2NvdW50IGFuZCB5b3VyIGNvbmZpZ3VyYXRpb24gZmlsZXMgc2hvdWxkIGJlIGluIGVpdGhlciBKU09OIG9yIFlBTUwgZm9ybWF0LiIKICAgICAgICAgICksCiAgICAgICAgXSksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbX3ZtLl92KCJTbnlrIEluZnJhc3RydWN0dXJlIGFzIENvZGUgc3VwcG9ydHM6IildKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJ1bCIsIFsKICAgICAgICBfYygibGkiLCBbX3ZtLl92KCJEZXBsb3ltZW50cywgUG9kcyBhbmQgU2VydmljZXMuIildKSwKICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICJDcm9uSm9icywgSm9icywgU3RhdGVmdWxTZXQsIFJlcGxpY2FTZXQsIERhZW1vblNldCwgYW5kIFJlcGxpY2F0aW9uQ29udHJvbGxlci4iCiAgICAgICAgICApLAogICAgICAgIF0pLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoMiIsIHsgYXR0cnM6IHsgaWQ6ICJzY2FuLWFuZC1maXgteW91ci1jb25maWd1cmF0aW9uLWZpbGVzIiB9IH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogIiNzY2FuLWFuZC1maXgteW91ci1jb25maWd1cmF0aW9uLWZpbGVzIiB9LAogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIFNjYW4gYW5kIGZpeCB5b3VyIGNvbmZpZ3VyYXRpb24gZmlsZXMiKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygib2wiLCBbCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAiTG9nIGluIHRvIHlvdXIgYWNjb3VudCBhbmQgbmF2aWdhdGUgdG8gdGhlIHJlbGV2YW50IGdyb3VwIGFuZCBvcmdhbml6YXRpb24gdGhhdCB5b3Ugd2FudCB0byBtYW5hZ2UuIgogICAgICAgICAgKSwKICAgICAgICBdKSwKICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICJJZiB5b3UgYWxyZWFkeSBpbXBvcnRlZCB5b3VyIHJlcG9zaXRvcmllcyBmb3IgdGVzdGluZyBiZWZvcmUgY2xvdWQgY29uZmlndXJhdGlvbiBmaWxlIGRldGVjdGlvbiB3YXMgZW5hYmxlZCBieSB5b3VyIGFkbWluaXN0cmF0b3IsIHRoZW4geW91IHNob3VsZCByZS1pbXBvcnQgdGhhdCByZXBvc2l0b3J5IGFnYWluIGluIG9yZGVyIHRvIGltcG9ydCB0aGUgcmVsZXZhbnQgSlNPTiBvciBZQU1MIGNvbmZpZ3VyYXRpb24gZmlsZXM6IgogICAgICAgICAgKSwKICAgICAgICBdKSwKICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICBfdm0uX3YoIkV2ZXJ5IHRpbWUgYSByZXBvc2l0b3J5IGlzIHNjYW5uZWQ6XG4iKSwKICAgICAgICAgIF9jKCJvbCIsIFsKICAgICAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICJFdmVyeSBzdXBwb3J0ZWQgbWFuaWZlc3QgZmlsZSBhbmQgZXZlcnkgc3VwcG9ydGVkIGNvbmZpZ3VyYXRpb24gZmlsZSBpcyBpbXBvcnRlZCBhcyBhIHNlcGFyYXRlIHByb2plY3QsIGdyb3VwZWQgdG9nZXRoZXIgcGVyIHJlcG9zaXRvcnksIHNpbWlsYXIgdG8gdGhpcyBleGFtcGxlOiIKICAgICAgICAgICAgICApLAogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAnSWYgeW91IHJlLWltcG9ydGVkIHRoZSByZXBvc2l0b3J5IGluIG9yZGVyIHRvIGltcG9ydCB0aGUgY2xvdWQgY29uZmlndXJhdGlvbiBmaWxlcywgdGhlbiBTbnlrIGltcG9ydHMgYW5kIHRlc3RzIHRoZSBjb25maWd1cmF0aW9uIGZpbGVzIGFuZCBhbHNvIHJlLXRlc3RzIHRoZSBhbHJlYWR5IGltcG9ydGVkIGFwcGxpY2F0aW9uIG1hbmlmZXN0IGZpbGVzIC0gZGlzcGxheWluZyB0aGUgdGVzdCB0aW1lIGFzICJub3ciLicKICAgICAgICAgICAgICApLAogICAgICAgICAgICBdKSwKICAgICAgICAgIF0pLAogICAgICAgIF0pLAogICAgICAgIF92bS5fdigiICIpLAogICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgIkNsaWNrIHRoZSBwcm9qZWN0IGxpbmsgeW91J3JlIGludGVyZXN0ZWQgaW4sIHRvIHZpZXcgdGhlIHNjYW4gcmVzdWx0cyBhbmQgdG8gY29ycmVjdCB5b3VyIGNvbmZpZ3VyYXRpb24gZmlsZXMgYWNjb3JkaW5nbHk6IgogICAgICAgICAgKSwKICAgICAgICBdKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgYXR0cnM6IHsgc3JjOiByZXF1aXJlKCIuLi8uLi8uLi8uZ2l0Ym9vay9hc3NldHMvNC5wbmciKSwgYWx0OiAiIiB9LAogICAgICAgIH0pLAogICAgICBdKSwKICAgIF0KICApCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}