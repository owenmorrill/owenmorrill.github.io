{"remainingRequest":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/owenmorrill/Sites/vue-docs/docs/src/snyk/products/snyk-open-source/language-and-package-manager-support/snyk-for-python.md?vue&type=template&id=51ea4db0&","dependencies":[{"path":"/Users/owenmorrill/Sites/vue-docs/docs/src/snyk/products/snyk-open-source/language-and-package-manager-support/snyk-for-python.md","mtime":1647961253798},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js","mtime":1647884535821},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1647884535666},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js","mtime":1647884535821},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/index.js","mtime":1647884534539},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/@vuepress/markdown-loader/index.js","mtime":1647884535441}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxDb250ZW50U2xvdHNEaXN0cmlidXRvciA6c2xvdC1rZXk9IiRwYXJlbnQuc2xvdEtleSI+PGgxIGlkPSJzbnlrLWZvci1weXRob24iPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjc255ay1mb3ItcHl0aG9uIj4jPC9hPiBTbnlrIGZvciBQeXRob248L2gxPgo8cD57JSBoaW50IHN0eWxlPSZxdW90O3N1Y2Nlc3MmcXVvdDsgJX0KU255ayBwcm92aWRlcyBzZWN1cml0eSBzY2FubmluZyBvbiBwcm9qZWN0cyBmb3IgdnVsbmVyYWJpbGl0aWVzIHRocm91Z2ggb3VyIENMSSBhbmQgdGhlIGFwcGxpY2F0aW9uIFVJIChhcHAuc255ay5pbykuCnslIGVuZGhpbnQgJX08L3A+CjxwPlRoZSBmb2xsb3dpbmcgZGVzY3JpYmVzIGhvdyB0byB1c2UgU255ayB0byBzY2FuIFB5dGhvbiBwcm9qZWN0czo8L3A+CjxoMiBpZD0iZmVhdHVyZXMiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjZmVhdHVyZXMiPiM8L2E+IEZlYXR1cmVzPC9oMj4KPHRhYmxlPgo8dGhlYWQ+Cjx0cj4KPHRoPlBhY2thZ2UgbWFuYWdlcnMgLyBGZWF0dXJlczwvdGg+Cjx0aD5DTEkgc3VwcG9ydDwvdGg+Cjx0aD5HaXQgc3VwcG9ydDwvdGg+Cjx0aD5MaWNlbnNlIHNjYW5uaW5nPC90aD4KPHRoPkZpeCBQUnM8L3RoPgo8dGg+PHA+UnVudGltZTwvcD48cD5tb25pdG9yaW5nPC9wPjwvdGg+CjwvdHI+CjwvdGhlYWQ+Cjx0Ym9keT4KPHRyPgo8dGQ+PGEgaHJlZj0iaHR0cHM6Ly9weXBpLm9yZy9wcm9qZWN0L3BpcC8iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPlBpcCBhbmQgUHlQSTxPdXRib3VuZExpbmsvPjwvYT48L3RkPgo8dGQ+4pyU77iOPC90ZD4KPHRkPuKclO+4jjwvdGQ+Cjx0ZD7inJTvuI48L3RkPgo8dGQ+4pyU77iOPC90ZD4KPHRkPjwvdGQ+CjwvdHI+Cjx0cj4KPHRkPjxhIGhyZWY9Imh0dHBzOi8vcGlwZW52Lmtlbm5ldGhyZWl0ei5vcmcvZW4vbGF0ZXN0LyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+cGlwZW52PE91dGJvdW5kTGluay8+PC9hPjwvdGQ+Cjx0ZD7inJTvuI48L3RkPgo8dGQ+PC90ZD4KPHRkPuKclO+4jjwvdGQ+Cjx0ZD48L3RkPgo8dGQ+PC90ZD4KPC90cj4KPHRyPgo8dGQ+c2V0dXAucHk8L3RkPgo8dGQ+4pyU77iOPC90ZD4KPHRkPjwvdGQ+Cjx0ZD7inJTvuI48L3RkPgo8dGQ+PC90ZD4KPHRkPjwvdGQ+CjwvdHI+Cjx0cj4KPHRkPjxhIGhyZWY9Imh0dHBzOi8vcHl0aG9uLXBvZXRyeS5vcmciIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPlBvZXRyeTxPdXRib3VuZExpbmsvPjwvYT48L3RkPgo8dGQ+4pyU77iOPC90ZD4KPHRkPjwvdGQ+Cjx0ZD7inJTvuI48L3RkPgo8dGQ+PC90ZD4KPHRkPjwvdGQ+CjwvdHI+CjwvdGJvZHk+CjwvdGFibGU+CjxwPnslIGhpbnQgc3R5bGU9JnF1b3Q7aW5mbyZxdW90OyAlfQpGZWF0dXJlcyBtaWdodCBub3QgYmUgYXZhaWxhYmxlLCBkZXBlbmRpbmcgb24geW91ciBzdWJzY3JpcHRpb24gcGxhbi4KeyUgZW5kaGludCAlfTwvcD4KPHA+eyUgaGludCBzdHlsZT0mcXVvdDtpbmZvJnF1b3Q7ICV9ClB5UEkgbGljZW5zZXMgYXJlIHN1cHBvcnRlZCBmb3IgYWxsIFB5dGhvbiBwcm9qZWN0cy4KeyUgZW5kaGludCAlfTwvcD4KPGgyIGlkPSJob3ctaXQtd29ya3MiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjaG93LWl0LXdvcmtzIj4jPC9hPiBIb3cgaXQgd29ya3M8L2gyPgo8cD57JSBoaW50IHN0eWxlPSZxdW90O2luZm8mcXVvdDsgJX0KVG8gc2NhbiB5b3VyIGRlcGVuZGVuY2llcywgeW91IG11c3QgZW5zdXJlIHlvdSBoYXZlIGZpcnN0IGluc3RhbGxlZCB0aGUgcmVsZXZhbnQgcGFja2FnZSBtYW5hZ2VyLCBhbmQgdGhhdCB5b3VyIHByb2plY3QgY29udGFpbnMgdGhlIHN1cHBvcnRlZCBtYW5pZmVzdCBmaWxlcy4KeyUgZW5kaGludCAlfTwvcD4KPHA+T25jZSB3ZeKAmXZlIGJ1aWx0IHRoZSB0cmVlLCB3ZSBjYW4gdXNlIG91ciB2dWxuZXJhYmlsaXR5IGRhdGFiYXNlIHRvIGZpbmQgdnVsbmVyYWJpbGl0aWVzIGluIGFueSBvZiB0aGUgcGFja2FnZXMgYW55d2hlcmUgaW4gdGhlIGRlcGVuZGVuY3kgdHJlZS48L3A+CjxwPlRoZSB3YXkgYnkgd2hpY2ggU255ayBhbmFseXplcyBhbmQgYnVpbGRzIHRoZSB0cmVlIHZhcmllcyBkZXBlbmRpbmcgb24gdGhlIGxhbmd1YWdlIGFuZCBwYWNrYWdlIG1hbmFnZXIgb2YgdGhlIHByb2plY3QsIGFzIHdlbGwgYXMgdGhlIGxvY2F0aW9uIG9mIHlvdXIgcHJvamVjdC48L3A+CjxoMiBpZD0ic255ay1jbGktdG9vbC1mb3ItcHl0aG9uLXByb2plY3RzIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3NueWstY2xpLXRvb2wtZm9yLXB5dGhvbi1wcm9qZWN0cyI+IzwvYT4gU255ayBDTEkgdG9vbCBmb3IgUHl0aG9uIHByb2plY3RzPC9oMj4KPHA+VGhlIHdheSBieSB3aGljaCBTbnlrIGFuYWx5emVzIGFuZCBidWlsZHMgdGhlIHRyZWUgdmFyaWVzIGRlcGVuZGluZyBvbiB0aGUgbGFuZ3VhZ2UgYW5kIHBhY2thZ2UgbWFuYWdlciBvZiB0aGUgcHJvamVjdC48L3A+CjxoMiBpZD0icGlwIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3BpcCI+IzwvYT4gUGlwPC9oMj4KPHA+U255ayByZXF1aXJlcyB0aGUgZnVsbCwgbmVzdGVkIGRlcGVuZGVuY3kgdHJlZSBpbiBvcmRlciB0byBydW4gdGVzdHMuIFJlcXVpcmVtZW50cy50eHQgZmlsZXMgb25seSBjb250YWluIHRoZSB0b3AtbGV2ZWwgZGVwZW5kZW5jaWVzIGFuZCBub3QgdGhlIG5lc3RlZCBvciB0cmFuc2l0aXZlIGRlcGVuZGVuY2llcy4gVGhlIG1vc3QgZWZmaWNpZW50IHdheSB0byBlbnN1cmUgYWNjdXJhY3kgaXMgdG8gaW5zdGFsbCB0aGUgZnVsbCBwaXAgcHJvamVjdC48L3A+CjxwPlNueWsgcnVucyB0ZXN0cyBhZ2FpbnN0IHRoZSBzcGVjaWZpYyBwaXAgaW5zdGFsbGF0aW9uIHVzZWQgZm9yIHRoYXQgc3BlY2lmaWMgc2VydmljZS9wcm9kdWN0IHJhdGhlciB0aGFuIGFuIHVubGlua2VkLCBzZXBhcmF0ZSBkZXBlbmRlbmN5IHRyZWUuPC9wPgo8cD5JbiBvcmRlciB0byBzY2FuIHRoZSBmdWxsIGRlcGVuZGVuY3kgdHJlZSwgU255ayBhbmFseXplcyB0aGUgaW5zdGFsbGVkIHBhY2thZ2VzIHRvIGVuc3VyZSBub25lIGFyZSBtaXNzaW5nLiBUaGlzIGhhcHBlbnMgZXZlbiB3aGVuIG5vdCBleHBsaWNpdGx5IHNwZWNpZmllZCBpbiB0aGUgbWFuaWZlc3QgZmlsZS48L3A+CjxoMiBpZD0icGlwZW52Ij48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3BpcGVudiI+IzwvYT4gUGlwZW52PC9oMj4KPHA+SW4gb3JkZXIgdG8gYnVpbGQgdGhlIGRlcGVuZGVuY3kgdHJlZSwgcnVuIDxjb2RlPnBpcGVudiBpbnN0YWxsPC9jb2RlPiBhcyBTbnlrIG5lZWRzIHRoaXMgdG8gY3JlYXRlIHRoZSA8Y29kZT5waXBlbnYgZ3JhcGg8L2NvZGU+IHdoaWNoIGlzIHRoZW4gdXNlZCBmb3IgdGhlIGRlcGVuZGVuY3kgc2NhbiB0byBmdWxmaWwgaXRzZWxmLjwvcD4KPHA+U255ayB1c2VzIHRoZSBidWlsdCBkZXBlbmRlbmN5IHRyZWUgdG8gYW5hbHl6ZSB0aGUgPGNvZGU+UGlwZmlsZTwvY29kZT4uPC9wPgo8aDIgaWQ9InNldHVwLXB5Ij48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3NldHVwLXB5Ij4jPC9hPiBzZXR1cC5weTwvaDI+CjxwPkluIG9yZGVyIHRvIGJ1aWxkIHRoZSBkZXBlbmRlbmN5IHRyZWUsIFNueWsgYW5hbHl6ZXMgdGhlIDxjb2RlPnNldHVwLnB5PC9jb2RlPiBmaWxlLCBhbmQgZGV0ZWN0cyBwYWNrYWdlcyBsaXN0ZWQgaW4gdGhlIDxjb2RlPmluc3RhbGxfcmVxdWlyZXM8L2NvZGU+IGtleS48L3A+CjxwPlRoZXJlIGlzIG5vIGF1dG8tZGlzY292ZXJ5IGZvciB0aGlzIGZpbGUsIGl0IG11c3QgYmUgc3BlY2lmaWVkIG1hbnVhbGx5OjwvcD4KPCEtLWJlZm9yZWJlZ2luLS0+PGRpdiBjbGFzcz0ibGFuZ3VhZ2UtIGV4dHJhLWNsYXNzIj48IS0tYWZ0ZXJiZWdpbi0tPjxwcmUgdi1wcmUgY2xhc3M9Imxhbmd1YWdlLXRleHQiPjxjb2RlPnNueWsgdGVzdCAtLWZpbGU9c2V0dXAucHkKPC9jb2RlPjwvcHJlPgo8IS0tYmVmb3JlZW5kLS0+PC9kaXY+PCEtLWFmdGVyZW5kLS0+PHA+WW91IGNhbiBjb252ZXJ0IDxjb2RlPnNldHVwLnB5PC9jb2RlPiB0byA8Y29kZT5yZXF1aXJlbWVudHMudHh0PC9jb2RlPiBieSBpbnN0YWxsaW5nIHRoZSBwYWNrYWdlcyBpbnRvIGEgdmlydHVhbCBlbnZpcm9ubWVudCBhbmQgdGhlbiBydW5uaW5nIDxjb2RlPnBpcCBmcmVlemU8L2NvZGU+LjwvcD4KPGgyIGlkPSJwb2V0cnkiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjcG9ldHJ5Ij4jPC9hPiBQb2V0cnk8L2gyPgo8cD5UbyBmaW5kIGlzc3VlcyBpbiBhIFB5dGhvbiBQb2V0cnkgYXBwbGljYXRpb24gU255ayB1c2VzIDxjb2RlPnB5cHJvamVjdC50b21sPC9jb2RlPiBhbmQgPGNvZGU+cG9ldHJ5LmxvY2s8L2NvZGU+IGZpbGVzLiBOb3RlIGJvdGggdGhlc2UgZmlsZXMgbXVzdCBiZSBwcmVzZW50IGZvciBTbnlrIHRvIGlkZW50aWZ5IFBvZXRyeSBkZXBlbmRlbmNpZXMgYW5kIHRlc3QgZm9yIGlzc3Vlcy48L3A+CjxoMiBpZD0iYWRkaXRpb25hbC1zdXBwb3J0LWRldGFpbHMiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjYWRkaXRpb25hbC1zdXBwb3J0LWRldGFpbHMiPiM8L2E+IEFkZGl0aW9uYWwgc3VwcG9ydCBkZXRhaWxzPC9oMj4KPCEtLWJlZm9yZWJlZ2luLS0+PGRpdiBjbGFzcz0ibGFuZ3VhZ2UtIGV4dHJhLWNsYXNzIj48IS0tYWZ0ZXJiZWdpbi0tPjxwcmUgdi1wcmUgY2xhc3M9Imxhbmd1YWdlLXRleHQiPjxjb2RlPmh0dHBzOi8vZ2l0aHViLmNvbS9zbnlrL3NueWstcHl0aG9uLXBsdWdpbi9ibG9iL21hc3Rlci9saWIvdHlwZXMudHMKPC9jb2RlPjwvcHJlPgo8IS0tYmVmb3JlZW5kLS0+PC9kaXY+PCEtLWFmdGVyZW5kLS0+PGgyIGlkPSJjbGktcGFyYW1ldGVycy1mb3ItcHl0aG9uIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2NsaS1wYXJhbWV0ZXJzLWZvci1weXRob24iPiM8L2E+IENMSSBwYXJhbWV0ZXJzIGZvciBQeXRob248L2gyPgo8aDMgaWQ9InByZXJlcXVpc2l0ZXMiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjcHJlcmVxdWlzaXRlcyI+IzwvYT4gPHN0cm9uZz5QcmVyZXF1aXNpdGVzPC9zdHJvbmc+PC9oMz4KPHVsPgo8bGk+RW5zdXJlIHlvdSd2ZSBpbnN0YWxsZWQgdGhlIHJlbGV2YW50IHBhY2thZ2UgbWFuYWdlciBiZWZvcmUgeW91IGJlZ2luIHVzaW5nIHRoZSBTbnlrIENMSSB0b29sLjwvbGk+CjxsaT5FbnN1cmUgeW91J3ZlIGluY2x1ZGVkIHRoZSByZWxldmFudCBtYW5pZmVzdCBmaWxlcyBzdXBwb3J0ZWQgYnkgU255ayBiZWZvcmUgdGVzdGluZy48L2xpPgo8bGk+SW5zdGFsbCBhbmQgYXV0aGVudGljYXRlIHRoZSBTbnlrIENMSSB0byBzdGFydCBhbmFseXppbmcgcHJvamVjdHMgZnJvbSB5b3VyIGxvY2FsIGVudmlyb25tZW50LiBSZWFkIG1vcmUgYWJvdXQgb3VyIENMSSBpbiA8YSBocmVmPSJodHRwczovL3N1cHBvcnQuc255ay5pby9oYy9hcnRpY2xlcy8zNjAwMDM4MTI0NTgjVVVJRC02ZDNlMmIzOS1kYWEwLWYyZjEtMTlkMi1iOTEwN2I2NzhjODEiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPkdldHRpbmcgc3RhcnRlZCB3aXRoIHRoZSBDTEk8T3V0Ym91bmRMaW5rLz48L2E+IGFzIHdlbGwuPC9saT4KPC91bD4KPGgzIGlkPSJwYXJhbWV0ZXJzIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3BhcmFtZXRlcnMiPiM8L2E+IFBhcmFtZXRlcnM8L2gzPgo8cD5XaGVuIHNjYW5uaW5nIHlvdXIgUHl0aG9uIHByb2plY3QgZm9yIHZ1bG5lcmFiaWxpdGllcywgdXNlIHRoZXNlIG9wdGlvbnMgdG8gbW9kaWZ5IGNvbW1hbmRzOjwvcD4KPHRhYmxlPgo8dGhlYWQ+Cjx0cj4KPHRoPk9wdGlvbjwvdGg+Cjx0aD5EZXNjcmlwdGlvbjwvdGg+CjwvdHI+CjwvdGhlYWQ+Cjx0Ym9keT4KPHRyPgo8dGQ+PGNvZGU+LS1jb21tYW5kPTwvY29kZT48L3RkPgo8dGQ+PHA+U255ayB1c2VzIFB5dGhvbiBpbiBvcmRlciB0byBzY2FuIGFuZCBmaW5kIHlvdXIgZGVwZW5kZW5jaWVzLiBTbnlrIG5lZWRzIHRoZSBQeXRob24gdmVyc2lvbiB0byBzdGFydCBzY2FubmluZywgYW5kIGRlZmF1bHRzIHRvICZxdW90O3B5dGhvbiZxdW90OzwvcD48cD5JZiB5b3UgYXJlIHVzaW5nIG11bHRpcGxlIFB5dGhvbiB2ZXJzaW9ucywgdXNlIHRoaXMgcGFyYW1ldGVyIHRvIHNwZWNpZnkgdGhlIGNvcnJlY3QgUHl0aG9uIGNvbW1hbmQgZm9yIGV4ZWN1dGlvbi48L3A+PHA+Rm9yIGV4YW1wbGU6IDxjb2RlPnNueWsgdGVzdCAtLWNvbW1hbmQ9cHl0aG9uMzwvY29kZT48L3A+PHA+U2VlIDxhIGhyZWY9InNueWstZm9yLXB5dGhvbi5tZCI+VXNpbmcgZGlmZmVyZW50IFB5dGhvbiB2ZXJzaW9uczwvYT4gZm9yIG1vcmUgZGV0YWlsczwvcD48L3RkPgo8L3RyPgo8dHI+Cjx0ZD48Y29kZT4tLXNraXAtdW5yZXNvbHZlZD08L2NvZGU+PC90ZD4KPHRkPlNraXAgcGFja2FnZXMgd2hlbiB0aGV5IGNhbuKAmXQgYmUgZm91bmQgaW4gdGhlIGVudmlyb25tZW50IChmb3IgZXhhbXBsZSwgcHJpdmF0ZSBwYWNrYWdlcyB0aGF0IGNhbuKAmXQgYmUgYWNjZXNzZWQgZnJvbSB0aGUgbWFjaGluZSBydW5uaW5nIHRoZSBzY2FuKS48L3RkPgo8L3RyPgo8dHI+Cjx0ZD48Y29kZT4tLWZpbGU9PC9jb2RlPjwvdGQ+Cjx0ZD48cD5TcGVjaWZ5IGEgc3BlY2lmaWMgZmlsZSB0byB0ZXN0LiBCeSBkZWZhdWx0LCBTbnlrIHNjYW5zIHRoZSByZXF1aXJlbWVudHMudHh0IGZpbGUgb24gdGhlIHRvcCBsZXZlbCBvZiB0aGUgcHJvamVjdC48L3A+PHA+SWYgZXhwbGljaXRseSBzcGVjaWZpZWQgd2l0aCB0aGlzIHBhcmFtZXRlciwgU255ayBjYW4gcmVjb2duaXplIGFueSBtYW5pZmVzdCBmaWxlcyBuYW1lZCA8ZW0+cmVxPC9lbT4udHh0LCB3aGVyZTogRWFjaCAoKikgaXMgYSB3aWxkY2FyZCBhbmQgcmVxIGNhbiBhcHBlYXIgYW55d2hlcmUgaW4gdGhlIGZpbGUgbmFtZS48L3A+PHA+Rm9yIGV4YW1wbGUsIFNueWsgcmVjb2duaXplcyB5b3VyIG1hbmlmZXN0IGZpbGUgd2hlbiB5b3UgaGF2ZSByZW5hbWVkIGl0IHRvIHJlcXVpcmVtZW50cy1kZXYudHh0LjwvcD48cD48c3Ryb25nPk5vdGU8L3N0cm9uZz46IC0tcGFja2FnZS1tYW5hZ2VyPXBpcCBzaG91bGQgYmUgYWRkZWQgdG8geW91ciBjbWQgaWYgdGhlIGZpbGUgbmFtZSBpcyBub3QgcmVxdWlyZW1lbnRzLnR4dDwvcD48L3RkPgo8L3RyPgo8dHI+Cjx0ZD48Y29kZT4tLXBhY2thZ2UtbWFuYWdlcj1waXA8L2NvZGU+PC90ZD4KPHRkPlRoaXMgcGFyYW1ldGVyIGlzIG1hbmRhdG9yeSBpZiB5b3Ugc3BlY2lmeSBhIHZhbHVlIGZvciB0aGUgLS1maWxlIHBhcmFtZXRlciB0aGF0IGlzIG5vdCB0byBhIHJlcXVpcmVtZW50cy50eHQgZmlsZS4gVGhlIHRlc3QgZmFpbHMgd2l0aG91dCB0aGlzIHBhcmFtZXRlci4gU3BlY2lmeSB0aGlzIHBhcmFtZXRlciB3aXRoIHRoZSB2YWx1ZSBwaXAuPC90ZD4KPC90cj4KPC90Ym9keT4KPC90YWJsZT4KPGgyIGlkPSJnaXQtc2VydmljZXMtZm9yLXB5dGhvbi1wcm9qZWN0cyI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNnaXQtc2VydmljZXMtZm9yLXB5dGhvbi1wcm9qZWN0cyI+IzwvYT4gR2l0IHNlcnZpY2VzIGZvciBQeXRob24gcHJvamVjdHM8L2gyPgo8cD5QeXRob24gcHJvamVjdHMgY2FuIGJlIGltcG9ydGVkIGZyb20gYW55IG9mIHRoZSBHaXQgcmVwb3NpdG9yaWVzIHdlIHN1cHBvcnQuPC9wPgo8cD5JbiBvcmRlciB0byB0ZXN0IHlvdXIgUHl0aG9uIHByb2plY3RzIHVzaW5nIHBpcCBhcyBhIHBhY2thZ2UgbWFuYWdlciwgd2UgYW5hbHl6ZSB5b3VyIDxjb2RlPnJlcXVpcmVtZW50cy50eHQ8L2NvZGU+IGZpbGUsIGFuZCBzbyB5b3UgbXVzdCBoYXZlIHRoaXMgZmlsZSBpbiB5b3VyIHJlcG9zaXRvcnkgYmVmb3JlIGltcG9ydGluZy48L3A+CjxwPklmIHlvdeKAmXZlIHJlbmFtZWQgeW91ciA8Y29kZT5yZXF1aXJlbWVudHMudHh0PC9jb2RlPiBmaWxlcyAoZm9yIGV4YW1wbGUsIGlmIHlvdSBoYXZlIHJlbmFtZWQgYSBmaWxlIHRvIDxjb2RlPnJlcXVpcmVtZW50cy1kZXYudHh0KTwvY29kZT4sIHdlIHRyeSB0byBpbXBvcnQgZXZlcnkgZmlsZSB0aGF0IGZvbGxvd3MgdGhlIDxjb2RlPioqLypyZXEqLnR4dDwvY29kZT4gY29udmVudGlvbiBhcyBhIFB5dGhvbiBwcm9qZWN0LjwvcD4KPHA+SWYgeW91J3ZlIHBsYWNlZCB5b3VyIGZpbGVzIGluIGEgcmVxdWlyZW1lbnRzIGZvbGRlciAoZm9yIGV4YW1wbGUsIGlmIHlvdSBoYXZlIHBsYWNlZCB5b3VyIGZpbGUgdW5kZXIgPGNvZGU+cmVxdWlyZW1lbnRzL3JlcXVpcmVtZW50cy50eHQ8L2NvZGU+KSB3ZSB0cnkgdG8gaW1wb3J0IGV2ZXJ5IGZpbGUgdGhhdCBmb2xsb3dzIHRoZSA8Y29kZT4qKi9yZXF1aXJlbWVudHMvKi50eHQ8L2NvZGU+Y29udmVudGlvbiBhcyBhIFB5dGhvbiBwcm9qZWN0LjwvcD4KPHA+SWYgeW91IGFyZSB1c2luZyBhIHBhY2thZ2UgbWFuYWdlciB0aGF0IGNyZWF0ZXMgZGlmZmVyZW50IG1hbmlmZXN0IGZpbGUgZm9ybWF0cyBvdGhlciB0aGFuIDxjb2RlPnJlcXVpcmVtZW50cy50eHQ8L2NvZGU+LCB0aGVuIGVpdGhlciBjb252ZXJ0IG9yIGltcG9ydCAoZGVwZW5kaW5nIG9uIHRoZSBwYWNrYWdlIG1hbmFnZXIvc3VwcG9ydGVkIGZpbGVzKSB0aGUgbWFuaWZlc3QgZmlsZSB0byB0aGUgPGNvZGU+cmVxdWlyZW1lbnRzLnR4dDwvY29kZT4gZm9ybWF0LjwvcD4KPHA+Rm9yIGV4YW1wbGU6PC9wPgo8IS0tYmVmb3JlYmVnaW4tLT48ZGl2IGNsYXNzPSJsYW5ndWFnZS0gZXh0cmEtY2xhc3MiPjwhLS1hZnRlcmJlZ2luLS0+PHByZSB2LXByZSBjbGFzcz0ibGFuZ3VhZ2UtdGV4dCI+PGNvZGU+ZGVwaGVsbCBkZXBzIGNvbnZlcnQgLS1mcm9tPWNvbmRhIC0tdG89cmVxdWlyZW1lbnRzLnR4dAo8L2NvZGU+PC9wcmU+CjwhLS1iZWZvcmVlbmQtLT48L2Rpdj48IS0tYWZ0ZXJlbmQtLT48aDIgaWQ9InVzaW5nLWRpZmZlcmVudC1weXRob24tdmVyc2lvbnMiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjdXNpbmctZGlmZmVyZW50LXB5dGhvbi12ZXJzaW9ucyI+IzwvYT4gVXNpbmcgZGlmZmVyZW50IFB5dGhvbiB2ZXJzaW9uczwvaDI+CjxwPlNvbWUgUHl0aG9uIHByb2plY3RzIG1heSBoYXZlIGRlcGVuZGVuY2llcyB0aGF0IGFyZSBvbmx5IHZhbGlkIHVzaW5nIFB5dGhvbiAzLiBCeSBkZWZhdWx0LCBTbnlrIHNjYW5zIHdpdGggUHl0aG9uIDIuPC9wPgo8cD5Zb3UgY2FuIGFkanVzdCB0aGUgdmVyc2lvbiBvZiBQeXRob24gU255ayB1c2VzIHRvIHNjYW4gZGVwZW5kZW5jaWVzLCBpbiBib3RoIHRoZSBDTEkgYW5kIEdpdCBpbnRlZ3JhdGlvbi48L3A+CjxoMiBpZD0ic2V0dGluZy1weXRob24tdmVyc2lvbi1pbi10aGUtY2xpIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3NldHRpbmctcHl0aG9uLXZlcnNpb24taW4tdGhlLWNsaSI+IzwvYT4gU2V0dGluZyBQeXRob24gdmVyc2lvbiBpbiB0aGUgQ0xJPC9oMj4KPHA+QWRkIHRoZSBmb2xsb3dpbmcgcGFyYW1ldGVyIHRvIDxjb2RlPnNueWsgdGVzdDwvY29kZT4gb3IgPGNvZGU+c255ayBtb25pdG9yPC9jb2RlPjwvcD4KPCEtLWJlZm9yZWJlZ2luLS0+PGRpdiBjbGFzcz0ibGFuZ3VhZ2UtIGV4dHJhLWNsYXNzIj48IS0tYWZ0ZXJiZWdpbi0tPjxwcmUgdi1wcmUgY2xhc3M9Imxhbmd1YWdlLXRleHQiPjxjb2RlPi0tY29tbWFuZD1weXRob24zCjwvY29kZT48L3ByZT4KPCEtLWJlZm9yZWVuZC0tPjwvZGl2PjwhLS1hZnRlcmVuZC0tPjxwPllvdSBjYW4gYWxzbyBzZXQgYSBzcGVjaWZpYyBQeXRob24gdmVyc2lvbiBieSBhZGRpbmcgdGhlIGZvbGxvd2luZyB0byBhIDxjb2RlPi5zbnlrPC9jb2RlPiA8YSBocmVmPSJodHRwczovL2RvY3Muc255ay5pby9maXhpbmctYW5kLXByaW9yaXRpemluZy1pc3N1ZXMvcG9saWNpZXMvdGhlLS5zbnlrLWZpbGUiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPnBvbGljeSBmaWxlPE91dGJvdW5kTGluay8+PC9hPi48L3A+CjwhLS1iZWZvcmViZWdpbi0tPjxkaXYgY2xhc3M9Imxhbmd1YWdlLSBleHRyYS1jbGFzcyI+PCEtLWFmdGVyYmVnaW4tLT48cHJlIHYtcHJlIGNsYXNzPSJsYW5ndWFnZS10ZXh0Ij48Y29kZT5sYW5ndWFnZS1zZXR0aW5nczoKcHl0aG9uOiAmIzM5OzMuNy4yJiMzOTsKPC9jb2RlPjwvcHJlPgo8IS0tYmVmb3JlZW5kLS0+PC9kaXY+PCEtLWFmdGVyZW5kLS0+PGgyIGlkPSJzZXR0aW5nLXB5dGhvbi12ZXJzaW9uLWluLWdpdC1wcm9qZWN0cyI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNzZXR0aW5nLXB5dGhvbi12ZXJzaW9uLWluLWdpdC1wcm9qZWN0cyI+IzwvYT4gU2V0dGluZyBQeXRob24gdmVyc2lvbiBpbiBHaXQgcHJvamVjdHM8L2gyPgo8cD57JSBoaW50IHN0eWxlPSZxdW90O2luZm8mcXVvdDsgJX0KV2hlbiB0ZXN0aW5nIHByb2plY3RzIGltcG9ydGVkIGZyb20gR2l0LCBTbnlrIHVzZXMgYSByZWNlbnQgdmVyc2lvbiBvZiBlaXRoZXIgUHl0aG9uIDIgb3IgUHl0aG9uIDMsIGZvciBleGFtcGxlIDIuNy40IG9yIDMuNy40Lgp7JSBlbmRoaW50ICV9PC9wPgo8cD5CeSBkZWZhdWx0IFNueWsgdGVzdHMgdXNpbmcgUHl0aG9uIDIuPC9wPgo8cD5UbyBkZWZpbmUgd2hpY2ggUHl0aG9uIG1ham9yIHZlcnNpb24gU255ayB1c2VzIHRvIHRlc3QgeW91ciBHaXQgaW1wb3J0ZWQgcHJvamVjdHMsIHVzZSBlaXRoZXIgb3JnYW5pemF0aW9uIHNldHRpbmdzLCBvciBhIDxjb2RlPi5zbnlrPC9jb2RlPiA8YSBocmVmPSJodHRwczovL2RvY3Muc255ay5pby9maXhpbmctYW5kLXByaW9yaXRpemluZy1pc3N1ZXMvcG9saWNpZXMvdGhlLS5zbnlrLWZpbGUiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPnBvbGljeSBmaWxlPE91dGJvdW5kTGluay8+PC9hPi48L3A+CjxwPlRvIGRlZmluZSBQeXRob24gdmVyc2lvbiBmb3IgYWxsIHByb2plY3RzIGluIGFuIG9yZ2FuaXphdGlvbjo8L3A+CjxvbD4KPGxpPkxvZyBpbiB0byB5b3VyIGFjY291bnQgYW5kIG5hdmlnYXRlIHRvIHRoZSByZWxldmFudCBncm91cCBhbmQgb3JnYW5pemF0aW9uIHRvIG1hbmFnZS48L2xpPgo8bGk+Q2xpY2sgb24gc2V0dGluZ3MgKElNQUdFIFJFTU9WRUQhKSAtIChodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vc255ay91c2VyLWRvY3MvbWFpbi9kb2NzLy5naXRib29rL2Fzc2V0cy9jb2dfaWNvbi5wbmcpICZndDsgPHN0cm9uZz5MYW5ndWFnZXM8L3N0cm9uZz4uPC9saT4KPGxpPkNsaWNrIDxzdHJvbmc+RWRpdCBzZXR0aW5nczwvc3Ryb25nPiBmb3IgPHN0cm9uZz5QeXRob248L3N0cm9uZz4uPC9saT4KPGxpPlNlbGVjdCB0byB1c2UgPHN0cm9uZz5QeXRob24gMjwvc3Ryb25nPiBvciA8c3Ryb25nPlB5dGhvbiAzPC9zdHJvbmc+IHdoZW4gdGVzdGluZyBwcm9qZWN0cyBmb3IgdGhpcyBvcmdhbml6YXRpb248L2xpPgo8L29sPgo8cD4oSU1BR0UgUkVNT1ZFRCEpIC0gKGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9zbnlrL3VzZXItZG9jcy9tYWluL2RvY3MvLmdpdGJvb2svYXNzZXRzL21jZWNsaXAxLTE4LS5wbmcpPC9wPgo8cD5XZSByZWNvbW1lbmQgeW91IGNyZWF0ZSBkaWZmZXJlbnQgb3JnYW5pemF0aW9ucyB0byB3b3JrIHdpdGggZGlmZmVyZW50IFB5dGhvbiB2ZXJzaW9ucy48L3A+CjxwPklmIHlvdSBwcmVmZXIgdG8gdXNlIG9uZSBvcmdhbml6YXRpb24gYnV0IHJlcXVpcmUgcHJvamVjdHMgdG8gdXNlIGRpZmZlcmVudCBQeXRob24gdmVyc2lvbnMsIHlvdSBtYXkgYWRkIGEgPGNvZGU+LnNueWs8L2NvZGU+IGZpbGUgdG8gYSBwcm9qZWN0IHJlcG9zaXRvcnksIGFuZCBzcGVjaWZ5IHRoZSBkZXNpcmVkIHZlcnNpb24uPC9wPgo8cD5UaGU8Y29kZT4uc255azwvY29kZT4gZmlsZSBtdXN0IGJlIGluIHRoZSBzYW1lIGRpcmVjdG9yeSBhcyB0aGUgcHJvamVjdCBtYW5pZmVzdCBmaWxlLjwvcD4KPGgyIGlkPSJtYWpvci1hbmQtbWlub3ItdmVyc2lvbnMiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjbWFqb3ItYW5kLW1pbm9yLXZlcnNpb25zIj4jPC9hPiBNYWpvciBhbmQgbWlub3IgdmVyc2lvbnM8L2gyPgo8cD5PbiBmaW5kaW5nIGEgPGNvZGU+LnNueWs8L2NvZGU+IGZpbGUsIFNueWsgZGV0ZWN0cyB0aGUgbWFqb3IgdmVyc2lvbiBzcGVjaWZpZWQsIGFuZCB1c2VzIHRoaXMgdG8gY29udHJvbCB3aGV0aGVyIHRoZSBwcm9qZWN0IGlzIHRlc3RlZCB3aXRoIFB5dGhvbiAyIG9yIFB5dGhvbiAzLiBJdCBkb2VzIG5vdCB1c2UgdGhlIGV4YWN0IHZlcnNpb24gc3BlY2lmaWVkLjwvcD4KPHA+Rm9yIGV4YW1wbGUsIGZvciBwcm9qZWN0cyBpbXBvcnRlZCB2aWEgR2l0OjwvcD4KPCEtLWJlZm9yZWJlZ2luLS0+PGRpdiBjbGFzcz0ibGFuZ3VhZ2UtIGV4dHJhLWNsYXNzIj48IS0tYWZ0ZXJiZWdpbi0tPjxwcmUgdi1wcmUgY2xhc3M9Imxhbmd1YWdlLXRleHQiPjxjb2RlPmxhbmd1YWdlLXNldHRpbmdzOgpweXRob246ICYjMzk7My43LjImIzM5Owo8L2NvZGU+PC9wcmU+CjwhLS1iZWZvcmVlbmQtLT48L2Rpdj48IS0tYWZ0ZXJlbmQtLT48cD5UaGlzIGV4YW1wbGUgdGVsbHMgU255ayB0byB1c2UgYSByZWNlbnQgdmVyc2lvbiBvZiBQeXRob24gMywgYnV0IFNueWsgd2lsbCBub3QgdXNlIHRoZSBleGFjdCBtaW5vciBhbmQgcGF0Y2ggdmVyc2lvbiBzcGVjaWZpZWQuPC9wPgo8L0NvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yPgo="},null]}