{"remainingRequest":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/owenmorrill/Sites/vue-docs/docs/src/snyk/products/snyk-open-source/open-source-basics/fix-pull-requests-for-new-vulnerabilities.md?vue&type=template&id=6289844e&","dependencies":[{"path":"/Users/owenmorrill/Sites/vue-docs/docs/src/snyk/products/snyk-open-source/open-source-basics/fix-pull-requests-for-new-vulnerabilities.md","mtime":1644439893082},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js","mtime":1647884535821},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1647884535666},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js","mtime":1647884535821},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/index.js","mtime":1647884534539},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/@vuepress/markdown-loader/index.js","mtime":1647884535441}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ0NvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yJyx7YXR0cnM6eyJzbG90LWtleSI6X3ZtLiRwYXJlbnQuc2xvdEtleX19LFtfYygnaDEnLHthdHRyczp7ImlkIjoiYXV0b21hdGVkLXB1bGwtcmVxdWVzdC1jcmVhdGlvbi1mb3ItbmV3LWZpeGVzIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjYXV0b21hdGVkLXB1bGwtcmVxdWVzdC1jcmVhdGlvbi1mb3ItbmV3LWZpeGVzIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIEF1dG9tYXRlZCBwdWxsIHJlcXVlc3QgY3JlYXRpb24gZm9yIG5ldyBmaXhlcyIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIlRoZSBmb2xsb3dpbmcgcnVsZXMgYXJlIGFwcGxpZWQgdG8gYXV0b21hdGljIFBSIGNyZWF0aW9uIGZvciB2dWxuZXJhYmlsaXRpZXM6IildKSxfdm0uX3YoIiAiKSxfYygndWwnLFtfYygnbGknLFtfdm0uX3YoIlB1bGwgcmVxdWVzdHMgYXJlIGNyZWF0ZWQgYmFzZWQgb24gdGhlICIpLF9jKCdzdHJvbmcnLFtfdm0uX3YoIlRlc3QgJiBBdXRvbWF0ZWQgUHVsbCBSZXF1ZXN0IEZyZXF1ZW5jeSIpXSksX3ZtLl92KCIgKHNlZSBzY3JlZW5zaG90IGJlbG93KSBzZXR0aW5nIildKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfdm0uX3YoIklmIGEgc2NhbiBpcyBtYW51YWxseSBydW4gKHlvdSBjbGlja2VkICIpLF9jKCdzdHJvbmcnLFtfdm0uX3YoIlJldGVzdCBub3ciKV0pLF92bS5fdigiIGZvciB0aGUgcHJvamVjdCksIHRoZSAyNC1ob3VyIHdpbmRvdyBpcyBtYXJrZWQgYXMgaGF2aW5nIGJlZW4gcnVuIGFuZCBubyBhdXRvbWF0aWMgUFIgaXMgY3JlYXRlZCB1bnRpbCB0aGUgbmV4dCBhdXRvbWF0ZWQgc2NhbiBydW5zIildKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfdm0uX3YoIk9uZSBwdWxsIHJlcXVlc3QgaXMgY3JlYXRlZCBwZXIgcHJvamVjdCAocHJpb3JpdHkgc2NvcmUgb2YgNzAwIGFuZCBhYm92ZSBvbmx5KSIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX3ZtLl92KCJJZiAiKSxfYygnc3Ryb25nJyxbX3ZtLl92KCJlaXRoZXIiKV0pLF92bS5fdigiIHRoZSB2dWxuZXJhYmlsaXR5IGl0c2VsZiBpcyBuZXcgYW5kIGhhcyBhIGZpeCBhdmFpbGFibGUgIiksX2MoJ3N0cm9uZycsW192bS5fdigib3IiKV0pLF92bS5fdigiIGlmIHRoZSBmaXggaXMgbmV3IGFuZCBpcyBub3QgaWdub3JlZCAiKV0pLF92bS5fdigiICIpLF9jKCdsaScsW192bS5fdigiRm9yIGtub3duIHZ1bG5lcmFiaWxpdGllcyBzZWUgIiksX2MoJ1JvdXRlckxpbmsnLHthdHRyczp7InRvIjoiL3NueWsvcHJvZHVjdHMvc255ay1vcGVuLXNvdXJjZS9vcGVuLXNvdXJjZS1iYXNpY3MvZml4LXB1bGwtcmVxdWVzdHMtZm9yLWtub3duLXZ1bG5lcmFiaWxpdGllcy1iYWNrbG9nLmh0bWwiLCJ0aXRsZSI6Im1lbnRpb24ifX0sW192bS5fdigiZml4LXB1bGwtcmVxdWVzdHMtZm9yLWtub3duLXZ1bG5lcmFiaWxpdGllcy1iYWNrbG9nLm1kIildKV0sMSldKSxfdm0uX3YoIiAiKSxfYygncCcsW19jKCdpbWcnLHthdHRyczp7InNyYyI6cmVxdWlyZSgiLi4vLi4vLi4vLmdpdGJvb2svYXNzZXRzL29zMS5wbmciKSwiYWx0IjoiIn19KV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJUbyBrbm93IHdoZW4geW91ciBsYXN0IDI0LWhvdXIgd2luZG93IHdhcyBraWNrZWQgb2ZmLCBjaGVjayB0aGUgcHJvamVjdCBwYWdlIGZvciAiKSxfYygnc3Ryb25nJyxbX3ZtLl92KCJTbmFwc2hvdCB0YWtlbiBieSByZWN1cnJpbmcgdGVzdCIpXSksX3ZtLl92KCItLWFsc28gY2hlY2sgeW91ciBlbWFpbCBmb3IgIiksX2MoJ3N0cm9uZycsW192bS5fdigiW3NueWtdIFZ1bG5lcmFiaWxpdHkgYWxlcnQiKV0pLF92bS5fdigiIGZvciBzcGVjaWZpYyBzY2FuIHJlc3VsdHM6IildKSxfdm0uX3YoIiAiKSxfYygncCcsW19jKCdpbWcnLHthdHRyczp7InNyYyI6cmVxdWlyZSgiLi4vLi4vLi4vLmdpdGJvb2svYXNzZXRzL29zMi5wbmciKSwiYWx0IjoiIn19KV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJQdWxsIHJlcXVlc3RzIGZvciBuZXcgdnVsbmVyYWJpbGl0aWVzIGFyZSBlbmFibGVkIGJ5IGRlZmF1bHQgZm9yIG5ldyBpbnRlZ3JhdGlvbnMuIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiU2VlICIpLF9jKCdhJyx7YXR0cnM6eyJocmVmIjoiaHR0cHM6Ly9zdXBwb3J0LnNueWsuaW8vaGMvZW4tdXMvc2VjdGlvbnMvMzYwMDAxMTM4MDk4LUdpdC1yZXBvc2l0b3J5LVNDTS1pbnRlZ3JhdGlvbnMiLCJ0YXJnZXQiOiJfYmxhbmsiLCJyZWwiOiJub29wZW5lciBub3JlZmVycmVyIn19LFtfdm0uX3YoIkdpdCByZXBvc2l0b3J5IFNDTSBpbnRlZ3JhdGlvbnMiKSxfYygnT3V0Ym91bmRMaW5rJyldLDEpLF92bS5fdigiIGZvciBmdWxsIGRldGFpbHMgb2Ygc3VwcG9ydGVkIGludGVncmF0aW9ucy4iKV0pLF92bS5fdigiICIpLF9jKCdoMicse2F0dHJzOnsiaWQiOiJlbmFibGUtb3ItZGlzYWJsZS1wdWxsLXJlcXVlc3RzLWZvci1hbi1pbnRlZ3JhdGlvbiJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI2VuYWJsZS1vci1kaXNhYmxlLXB1bGwtcmVxdWVzdHMtZm9yLWFuLWludGVncmF0aW9uIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIEVuYWJsZSBvciBkaXNhYmxlIHB1bGwgcmVxdWVzdHMgZm9yIGFuIGludGVncmF0aW9uIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiRW5hYmxlIGF0IHRoZSBnbG9iYWwgaW50ZWdyYXRpb24gbGV2ZWw6IildKSxfdm0uX3YoIiAiKSxfYygnb2wnLFtfYygnbGknLFtfdm0uX3YoIk5hdmlnYXRlIHRvIHNldHRpbmdzICIpLF9jKCdpbWcnLHthdHRyczp7InNyYyI6cmVxdWlyZSgiLi4vLi4vLi4vLmdpdGJvb2svYXNzZXRzL2NvZ19pY29uLnBuZyIpLCJhbHQiOiIifX0pLF92bS5fdigiID4gIiksX2MoJ3N0cm9uZycsW192bS5fdigiSW50ZWdyYXRpb25zIildKSxfdm0uX3YoIi4gIildKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfdm0uX3YoIlNlbGVjdCBhbiBTQ00gaW50ZWdyYXRpb24gKGZvciBleGFtcGxlLCBHaXRIdWIpLiAiKV0pLF92bS5fdigiICIpLF9jKCdsaScsW192bS5fdigiRW5hYmxlICIpLF9jKCdzdHJvbmcnLFtfdm0uX3YoIk5ldyB2dWxuZXJhYmlsaXRpZXMiKV0pXSldKSxfdm0uX3YoIiAiKSxfYygncCcsW19jKCdzdHJvbmcnLFtfdm0uX3YoIkFwcGx5IGNoYW5nZXMgdG8gYWxsIG92ZXJyaWRkZW4gcHJvamVjdHMiKV0pLF92bS5fdigiIHdpbGwgdXBkYXRlIGFsbCBvZiB0aGUgaW5kaXZpZHVhbCBwcm9qZWN0IHNldHRpbmdzIGZvciBcIkF1dG9tYXRpYyBmaXggcHVsbCByZXF1ZXN0c1wiLiBJZiBhIHByb2plY3QgcHJldmlvdXNseSBoYWQgaXRzIG93biBzZXR0aW5ncyBmb3IgdGhpcywgY2xpY2tpbmcgb24gdGhpcyBidXR0b24gd2lsbCBvdmVycmlkZSBpdCB3aXRoIHRoZSBnbG9iYWwgc2V0dGluZy4iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX2MoJ2ltZycse2F0dHJzOnsic3JjIjpyZXF1aXJlKCIuLi8uLi8uLi8uZ2l0Ym9vay9hc3NldHMvZ2xvYmFsLXByLXNldHRpbmcucG5nIiksImFsdCI6IiJ9fSldKSxfdm0uX3YoIiAiKSxfYygnaDInLHthdHRyczp7ImlkIjoiZW5hYmxlLW9yLWRpc2FibGUtcHVsbC1yZXF1ZXN0cy1mb3ItYS1zaW5nbGUtcHJvamVjdCJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI2VuYWJsZS1vci1kaXNhYmxlLXB1bGwtcmVxdWVzdHMtZm9yLWEtc2luZ2xlLXByb2plY3QifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgRW5hYmxlIG9yIGRpc2FibGUgcHVsbCByZXF1ZXN0cyBmb3IgYSBzaW5nbGUgcHJvamVjdCIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkVuYWJsaW5nL2Rpc2FibGluZyBhdCBhIHByb2plY3QgbGV2ZWwgd2lsbCBvdmVycmlkZSB0aGlzIHNpbmdsZSBwcm9qZWN0IHJhdGhlciB0aGFuIGluaGVyaXRpbmcgaXQgZnJvbSB0aGUgZ2xvYmFsIGludGVncmF0aW9uIHNldHRpbmcuIildKSxfdm0uX3YoIiAiKSxfYygnb2wnLFtfYygnbGknLFtfdm0uX3YoIlVuZGVyICIpLF9jKCdzdHJvbmcnLFtfdm0uX3YoIlByb2plY3RzIildKSxfdm0uX3YoIiBzZWxlY3QgYSBwcm9qZWN0IGFuZCBzZWxlY3QgIiksX2MoJ3N0cm9uZycsW192bS5fdigiU2V0dGluZ3MiKV0pLF92bS5fdigiICh0b3AgcmlnaHQtaGFuZCBjb3JuZXIpIildKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfdm0uX3YoIlNlbGVjdCAiKSxfYygnc3Ryb25nJyxbX3ZtLl92KCJHaXRIdWIgaW50ZWdyYXRpb24iKV0pXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX3ZtLl92KCJVbmRlciB0aGUgIiksX2MoJ3N0cm9uZycsW192bS5fdigiQXV0b21hdGljIGZpeCBwdWxsIHJlcXVlc3RzIildKSxfdm0uX3YoIiBzZWN0aW9uOlxuIiksX2MoJ3VsJyxbX2MoJ2xpJyxbX3ZtLl92KCJTZWxlY3QgIiksX2MoJ3N0cm9uZycsW192bS5fdigiQ3VzdG9taXplIGZvciBvbmx5IHRoaXMgcHJvamVjdCIpXSldKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfdm0uX3YoIkVuYWJsZSAiKSxfYygnc3Ryb25nJyxbX3ZtLl92KCJOZXcgdnVsbmVyYWJpbGl0aWVzIildKV0pLF92bS5fdigiICIpLF9jKCdsaScsW192bS5fdigiU2VsZWN0ICIpLF9jKCdzdHJvbmcnLFtfdm0uX3YoIlNhdmUgY2hhbmdlcyIpXSldKV0pXSldKSxfdm0uX3YoIiAiKSxfYygncCcsW19jKCdpbWcnLHthdHRyczp7InNyYyI6cmVxdWlyZSgiLi4vLi4vLi4vLmdpdGJvb2svYXNzZXRzL29zMy5wbmciKSwiYWx0IjoiIn19KV0pXSl9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}