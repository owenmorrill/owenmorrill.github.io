{"remainingRequest":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/owenmorrill/Sites/vue-docs/docs/src/snyk/features/reports/issues-tab.md?vue&type=template&id=407d8018&","dependencies":[{"path":"/Users/owenmorrill/Sites/vue-docs/docs/src/snyk/features/reports/issues-tab.md","mtime":1647961254107},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js","mtime":1647884535821},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1647884535666},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js","mtime":1647884535821},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/index.js","mtime":1647884534539},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/@vuepress/markdown-loader/index.js","mtime":1647884535441}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}