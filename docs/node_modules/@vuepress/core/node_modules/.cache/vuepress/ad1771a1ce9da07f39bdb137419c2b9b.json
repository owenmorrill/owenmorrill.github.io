{"remainingRequest":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/owenmorrill/Sites/vue-docs/docs/src/snyk/partner-workshops/github/securing-a-toolchain-with-snyk-and-github/part-1-open-source/section-3-fix-vulnerabilities.md?vue&type=template&id=17076d96&","dependencies":[{"path":"/Users/owenmorrill/Sites/vue-docs/docs/src/snyk/partner-workshops/github/securing-a-toolchain-with-snyk-and-github/part-1-open-source/section-3-fix-vulnerabilities.md","mtime":1647961254641},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js","mtime":1647884535821},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1647884535666},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js","mtime":1647884535821},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/index.js","mtime":1647884534539},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/@vuepress/markdown-loader/index.js","mtime":1647884535441}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxDb250ZW50U2xvdHNEaXN0cmlidXRvciA6c2xvdC1rZXk9IiRwYXJlbnQuc2xvdEtleSI+PGgxIGlkPSJzZWN0aW9uLTMtZml4LXZ1bG5lcmFiaWxpdGllcyI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNzZWN0aW9uLTMtZml4LXZ1bG5lcmFiaWxpdGllcyI+IzwvYT4gU2VjdGlvbiAzOiBGaXggVnVsbmVyYWJpbGl0aWVzPC9oMT4KPHA+V2l0aCB0aGUgR2l0SHViIEludGVncmF0aW9uIHdlIGNvbmZpZ3VyZWQgaW4gU2VjdGlvbiAxLCBTbnlrIGlzIGFibGUgdG8gb3BlbiBQdWxsIFJlcXVlc3RzIHRvIHVwZ3JhZGUgZGVwZW5kZW5jaWVzIHRvIG5vbi12dWxuZXJhYmxlIHZlcnNpb25zLCBoZWxwaW5nIHRvIGFjY2VsZXJhdGUgcmVtZWRpYXRpb24uPC9wPgo8aDIgaWQ9InN0ZXAtMS1leHBsb3JlLWEtdnVsbmVyYWJpbGl0eS1pbi1tb3JlLWRldGFpbCI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNzdGVwLTEtZXhwbG9yZS1hLXZ1bG5lcmFiaWxpdHktaW4tbW9yZS1kZXRhaWwiPiM8L2E+IFN0ZXAgMTogRXhwbG9yZSBhIHZ1bG5lcmFiaWxpdHkgaW4gbW9yZSBkZXRhaWw8L2gyPgo8cD5Mb2cgaW50byBTbnlrLCBhbmQgZ28gaW50byB0aGUgPGNvZGU+Z2gtYWN0aW9ucy1hY2FkZW15PC9jb2RlPiBwcm9qZWN0IGltcG9ydGVkIGVhcmxpZXIuIFNjcm9sbCBkb3duIHRvIHNlZSB0aGUgbGlzdCBvZiB2dWxuZXJhYmlsaXRpZXMgcHJlc2VudCwgb3JkZXJlZCBieSA8YSBocmVmPSJodHRwczovL3NueWsuaW8vYmxvZy9zbnlrLXByaW9yaXR5LXNjb3JlLyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+b3VyIHByb3ByaWV0YXJ5IFByaW9yaXR5IFNjb3JlPE91dGJvdW5kTGluay8+PC9hPi4gRm9yIGVhY2ggVnVsbmVyYWJpbGl0eSwgU255ayBkaXNwbGF5czo8L3A+Cjx1bD4KPGxpPlRoZSBtb2R1bGUgdGhhdCBpbnRyb2R1Y2VkIGl0IGFuZCwgaW4gdGhlIGNhc2Ugb2YgdHJhbnNpdGl2ZSBkZXBlbmRlbmNpZXMsIGl0cyBkaXJlY3QgZGVwZW5kZW5jeSw8L2xpPgo8bGk+RGV0YWlscyBvbiB0aGUgcGF0aCBhbmQgcHJvcG9zZWQgUmVtZWRpYXRpb24sIGFzIHdlbGwgYXMgdGhlIHNwZWNpZmljIHZ1bG5lcmFibGUgZnVuY3Rpb25zPC9saT4KPC91bD4KPHA+KElNQUdFIFJFTU9WRUQhKSAtIChodHRwczovL3BhcnRuZXItd29ya3Nob3AtYXNzZXRzLnMzLnVzLWVhc3QtMi5hbWF6b25hd3MuY29tL3NueWstdnVsbi5wbmcpPC9wPgo8aDIgaWQ9InN0ZXAtMi1jcmVhdGUtYS1maXgtcHVsbC1yZXF1ZXN0LWluLXNueWsiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjc3RlcC0yLWNyZWF0ZS1hLWZpeC1wdWxsLXJlcXVlc3QtaW4tc255ayI+IzwvYT4gU3RlcCAyOiBDcmVhdGUgYSBGaXggUHVsbCBSZXF1ZXN0IGluIFNueWs8L2gyPgo8cD5XaGVuIHVzaW5nIHRoZSBHaXRIdWIgaW50ZWdyYXRpb24sIGFuZCBpZiBhIGZpeCBpcyBhdmFpbGFibGUsIFNueWsgY2FuIGF1dG9tYXRpY2FsbHkgdXBncmFkZSB0aGUgdnVsbmVyYWJsZSBkZXBlbmRlbmN5IHRvIGEgbm9uLXZ1bG5lcmFibGUgdmVyc2lvbiB0aHJvdWdoIGEgUHVsbCBSZXF1ZXN0LiBDbGljayBvbiAmcXVvdDtGaXggdGhpcyB2dWxuZXJhYmlsaXR5JnF1b3Q7IHRvIGRvIHNvLjwvcD4KPHA+KElNQUdFIFJFTU9WRUQhKSAtIChodHRwczovL3BhcnRuZXItd29ya3Nob3AtYXNzZXRzLnMzLnVzLWVhc3QtMi5hbWF6b25hd3MuY29tL3NueWstZml4dnVsbi5wbmcpPC9wPgo8cD5PbiB0aGUgbmV4dCBzY3JlZW4sIHlvdSdsbCBiZSBhYmxlIHRvIGNvbmZpcm0gdGhlIGlzc3VlIHRvIGZpeCB3aXRoIHRoaXMgUFIuPC9wPgo8cD4oSU1BR0UgUkVNT1ZFRCEpIC0gKGh0dHBzOi8vcGFydG5lci13b3Jrc2hvcC1hc3NldHMuczMudXMtZWFzdC0yLmFtYXpvbmF3cy5jb20vc255ay1wcmNvbmZpcm0ucG5nKTwvcD4KPHA+TG9va3MgZ29vZCEgR28gYWhlYWQgYW5kIG9wZW4gdGhlIFBSLjwvcD4KPHA+KElNQUdFIFJFTU9WRUQhKSAtIChodHRwczovL3BhcnRuZXItd29ya3Nob3AtYXNzZXRzLnMzLnVzLWVhc3QtMi5hbWF6b25hd3MuY29tL3NueWstcHJvcGVuLnBuZyk8L3A+CjxwPk9uY2UgaXQncyByZWFkeSwgeW91J2xsIGJlIHRha2VuIHRvIHRoZSBQUiBpbiBHaXRIdWIsIHdoZXJlIHlvdSBjYW4gcmV2aWV3IHRoZSBjaGFuZ2VzIGluIHRoZSBmaWxlIGRpZmYgdmlldzo8L3A+CjxwPihJTUFHRSBSRU1PVkVEISkgLSAoaHR0cHM6Ly9wYXJ0bmVyLXdvcmtzaG9wLWFzc2V0cy5zMy51cy1lYXN0LTIuYW1hem9uYXdzLmNvbS9naC1wcmRpZmYucG5nKTwvcD4KPHA+V2Ugc2VlIHRoYXQgQ0kgY2hlY2tzIGNvbXBsZXRlZCBzdWNjZXNzZnVsbHksIGFzc3VyaW5nIHVzIHdlIGRpZG4ndCBpbnRyb2R1Y2UgYSBicmVha2luZyBjaGFuZ2UuPC9wPgo8cD4oSU1BR0UgUkVNT1ZFRCEpIC0gKGh0dHBzOi8vcGFydG5lci13b3Jrc2hvcC1hc3NldHMuczMudXMtZWFzdC0yLmFtYXpvbmF3cy5jb20vZ2gtcHJjaGVja3MucG5nKTwvcD4KPHA+Tm93LCBnbyBhaGVhZCBhbmQgbWVyZ2UgdGhlIFBSISBZb3UgY2FuIGFsc28gZGVsZXRlIHRoZSBicmFuY2guIEJhY2sgaW4gU255aywgd2UgY2FuIGFwcHJlY2lhdGUgdGhhdCBvdXIgPGNvZGU+cGFja2FnZS5qc29uPC9jb2RlPiBmaWxlIGhhcyAxIGxlc3MgSGlnaCBTZXZlcml0eSBWdWxuZXJhYmlsaXR5LjwvcD4KPHA+KElNQUdFIFJFTU9WRUQhKSAtIChodHRwczovL3BhcnRuZXItd29ya3Nob3AtYXNzZXRzLnMzLnVzLWVhc3QtMi5hbWF6b25hd3MuY29tL3NueWstcG9zdHByLnBuZyk8L3A+CjxoMiBpZD0ic3RlcC0zLWZpeC10aGUtcmVzdC1vZi10aGUtdnVsbmVyYWJpbGl0aWVzIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3N0ZXAtMy1maXgtdGhlLXJlc3Qtb2YtdGhlLXZ1bG5lcmFiaWxpdGllcyI+IzwvYT4gU3RlcCAzOiBGaXggdGhlIHJlc3Qgb2YgdGhlIFZ1bG5lcmFiaWxpdGllczwvaDI+CjxwPkxldCdzIGZhc3QgdHJhY2sgdG8gYSBjbGVhbiA8Y29kZT5kZXZlbG9wPC9jb2RlPiBicmFuY2ggd2l0aCBhbm90aGVyIFB1bGwgUmVxdWVzdC4gVGhpcyB0aW1lLCBmcm9tIHRoZSA8Y29kZT5hbGwtZml4ZXM8L2NvZGU+IGJyYW5jaCBpbnRvIDxjb2RlPmRldmVsb3A8L2NvZGU+LjwvcD4KPGgzIGlkPSJob3ctd2UtYXJyaXZlZC1hdC1hLWNsZWFuLWJyYW5jaCI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNob3ctd2UtYXJyaXZlZC1hdC1hLWNsZWFuLWJyYW5jaCI+IzwvYT4gSG93IHdlIGFycml2ZWQgYXQgYSBjbGVhbiBicmFuY2g8L2gzPgo8cD5UaGUgPGNvZGU+YWxsLWZpeGVzPC9jb2RlPiBicmFuY2ggd2FzIGNyZWF0ZWQgYnkgdXNpbmcgdGhlIDxhIGhyZWY9Imh0dHBzOi8vc3VwcG9ydC5zbnlrLmlvL2hjL2VuLXVzL2FydGljbGVzLzM2MDAwMzg1MTM1Ny1NYW5hZ2UtdnVsbmVyYWJpbGl0eS1yZXN1bHRzLXdpdGgtdGhlLVNueWstQ0xJLXdpemFyZCIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+U255ayBXaXphcmQ8T3V0Ym91bmRMaW5rLz48L2E+IGFnYWluc3Qgb3VyIDxjb2RlPmRldmVsb3A8L2NvZGU+IGJyYW5jaC4gSWYgeW91J2QgcmF0aGVyIGRvIHRoaXMgeW91cnNlbGYsIDxjb2RlPmdpdCBjbG9uZTwvY29kZT4gdGhlIHJlcG8gdG8geW91ciB3b3Jrc3RhdGlvbiBhbmQgcnVuIDxjb2RlPnNueWsgd2l6YXJkPC9jb2RlPiBhZ2FpbnN0IGl0LiBXZSByZWNvbW1lbmQgcHVzaGluZyBjaGFuZ2VzIGludG8gYSBuZXcgYnJhbmNoIHNvIHlvdSBjYW4gY29udGludWUgdGhlIHdvcmtzaG9wIGZyb20gdGhlcmUuPC9wPgo8aDMgaWQ9Im9wZW4tYS1wdWxsLXJlcXVlc3QiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjb3Blbi1hLXB1bGwtcmVxdWVzdCI+IzwvYT4gT3BlbiBhIFB1bGwgUmVxdWVzdCE8L2gzPgo8cD5DcmVhdGUgYSBOZXcgUHVsbCBSZXF1ZXN0IGZyb20gPGNvZGU+YWxsLWZpeGVzPC9jb2RlPiB0byA8Y29kZT5kZXZlbG9wPC9jb2RlPi4gVGhpcyBpbnRyb2R1Y2VzIHNvbWUgY2hhbmdlczo8L3A+Cjx1bD4KPGxpPlRoZSBjcmVhdGlvbiBvZiBhIDxjb2RlPi5zbnlrPC9jb2RlPiBmaWxlLCB3aGljaCBpcyB1c2VkIHRvIHRyYWNrIGNoYW5nZXMgbWFkZSBieSA8Y29kZT5TbnlrIFdpemFyZDwvY29kZT4uPC9saT4KPGxpPlVwZGF0ZWQgPGNvZGU+cGFja2FnZS5qc29uPC9jb2RlPiBhbmQgPGNvZGU+cGFja2FnZS1sb2NrLmpzb248L2NvZGU+IGZpbGVzIHdpdGggdXBkYXRlZCBkZXBlbmRlbmNpZXMuPC9saT4KPC91bD4KPHA+KElNQUdFIFJFTU9WRUQhKSAtIChodHRwczovL3BhcnRuZXItd29ya3Nob3AtYXNzZXRzLnMzLnVzLWVhc3QtMi5hbWF6b25hd3MuY29tL2doLWFsbGZpeHByLnBuZyk8L3A+CjxwPllvdSBjYW4gZXhwbG9yZSB0aGVzZSBjaGFuZ2VzIGluIHRoZSBDb21wYXJpbmcgQ2hhbmdlcyB2aWV3IHRvIGxlYXJuIG1vcmUuIFdoZW4gcmVhZHksIGZpbmlzaCBjcmVhdGluZyBhbmQgTWVyZ2UgdGhlIFB1bGwgUmVxdWVzdC48L3A+CjxoMiBpZD0ic3RlcC00LXJlLXZpc2l0LXRoZS1wci1jcmVhdGVkLWluLXN0ZXAtMiI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNzdGVwLTQtcmUtdmlzaXQtdGhlLXByLWNyZWF0ZWQtaW4tc3RlcC0yIj4jPC9hPiBTdGVwIDQ6IFJlLXZpc2l0IHRoZSBQUiBjcmVhdGVkIGluIFN0ZXAgMjwvaDI+CjxwPklmIHlvdSBsZWZ0IHRoZSBQdWxsIFJlcXVlc3QgZnJvbSBTZWN0aW9uIDIgb3BlbiwgeW91IGNhbiByZS12aXNpdCBpdCBpbiB0aGUgUHVsbCBSZXF1ZXN0cyB0YWIuPC9wPgo8cD4oSU1BR0UgUkVNT1ZFRCEpIC0gKGh0dHBzOi8vcGFydG5lci13b3Jrc2hvcC1hc3NldHMuczMudXMtZWFzdC0yLmFtYXpvbmF3cy5jb20vZ2gtcG9zdGZpeGVzLnBuZyk8L3A+CjxwPldoZW4gdGhlIHdvcmtmbG93cyByZS1ydW4sIHRoaXMgdGltZSwgdGhlIFNueWsgU2VjdXJpdHkgZ2F0ZSBhbmQgQ0kgam9icyBzaG91bGQgY29tcGxldGUgc3VjY2Vzc2Z1bGx5LjwvcD4KPHA+eyUgaGludCBzdHlsZT0mcXVvdDt3YXJuaW5nJnF1b3Q7ICV9Ck9wZW4gU291cmNlIHZ1bG5lcmFiaWxpdGllcyBhcmUgZGlzY2xvc2VkIGV2ZXJ5IGRheS4gSWYgdGhlIFNueWsgR2F0ZSBmYWlscywgYXQgbGVhc3Qgb25lIG5ldyBIaWdoIFNldmVyaXR5IHZ1bG5lcmFiaWxpdHkgaGFzIGJlZW4gZGlzY2xvc2VkIHNpbmNlIHRoaXMgd2FzIHdyaXR0ZW4uIElmIHRoaXMgaGFwcGVucywgUmVwZWF0IHN0ZXBzIDEgYW5kIDIgYWJvdmUgdG8gb3BlbiBhIFB1bGwgUmVxdWVzdCB0aGF0IGZpeGVzIHRoZSByZW1haW5pbmcgaXNzdWVzLgp7JSBlbmRoaW50ICV9PC9wPgo8cD4oSU1BR0UgUkVNT1ZFRCEpIC0gKGh0dHBzOi8vcGFydG5lci13b3Jrc2hvcC1hc3NldHMuczMudXMtZWFzdC0yLmFtYXpvbmF3cy5jb20vZ2gtcG9zdGZpeGNoZWNrcy5wbmcpPC9wPgo8cD5NZXJnZSBpbiB0aGUgY2hhbmdlcywgYW5kIGZlZWwgZ29vZCB0aGF0IHlvdXIgPGNvZGU+UFJPRDwvY29kZT4gYnJhbmNoIGlzIGZyZWUgZnJvbSBPcGVuIFNvdXJjZSBWdWxuZXJhYmlsaXRpZXMhIPCfj4Y8L3A+CjxwPllvdSBtYWRlIGl0IHRvIHRoZSBlbmQgb2YgUGFydCAxISBDb25ncmF0dWxhdGlvbnMhIFByb2NlZWQgdG8gUGFydCAyIHRvIHNlZSBob3cgU255ayBDb250YWluZXIgY2FuIGhlbHAgeW91IGtlZXAgdGhpcyBhcHBsaWNhdGlvbiBzZWN1cmUgYXMgeW91IHBhY2thZ2UgaXQgaW4gYSBjb250YWluZXIuPC9wPgo8L0NvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yPgo="},null]}