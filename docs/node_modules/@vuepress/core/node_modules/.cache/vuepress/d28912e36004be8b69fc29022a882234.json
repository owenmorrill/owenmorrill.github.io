{"remainingRequest":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/owenmorrill/Sites/vue-docs/docs/src/guide/features/other-tools/snyk-scm-contributors-count-cli-tool/consolidateResults.md?vue&type=template&id=35756fa0&","dependencies":[{"path":"/Users/owenmorrill/Sites/vue-docs/docs/src/guide/features/other-tools/snyk-scm-contributors-count-cli-tool/consolidateResults.md","mtime":1644439892937},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js","mtime":1647884535821},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1647884535666},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js","mtime":1647884535821},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/index.js","mtime":1647884534539},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/@vuepress/markdown-loader/index.js","mtime":1647884535441}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHsKICB2YXIgX3ZtID0gdGhpcwogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogIHJldHVybiBfYygKICAgICJDb250ZW50U2xvdHNEaXN0cmlidXRvciIsCiAgICB7IGF0dHJzOiB7ICJzbG90LWtleSI6IF92bS4kcGFyZW50LnNsb3RLZXkgfSB9LAogICAgWwogICAgICBfYygiaDIiLCB7IGF0dHJzOiB7IGlkOiAiY29uc29saWRhdGVyZXN1bHRzIiB9IH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogIiNjb25zb2xpZGF0ZXJlc3VsdHMiIH0sCiAgICAgICAgICB9LAogICAgICAgICAgW192bS5fdigiIyIpXQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCIgQ29uc29saWRhdGVSZXN1bHRzIiksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbX3ZtLl92KCJBdmFpbGFibGUgb3B0aW9uczoiKV0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJsYW5ndWFnZS0gZXh0cmEtY2xhc3MiIH0sIFsKICAgICAgICBfYygicHJlIiwgeyBwcmU6IHRydWUsIGF0dHJzOiB7IGNsYXNzOiAibGFuZ3VhZ2UtdGV4dCIgfSB9LCBbCiAgICAgICAgICBfYygiY29kZSIsIFsKICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICIgIC0tdmVyc2lvbiAgICAgICAgICAgICAgICAgU2hvdyB2ZXJzaW9uIG51bWJlciAgICAgICAgICAgICAgICAgICAgICAgIFtib29sZWFuXVxuICAtLWhlbHAgICAgICAgICAgICAgICAgICAgIFNob3cgaGVscCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbYm9vbGVhbl1cbiAgLS1mb2xkZXJQYXRoICAgICAgICAgICAgICBQYXRoIHRvIGEgZm9sZGVyIGNvbnRhaW5pbmcgdGhlIGpzb24gb3V0cHV0cyAgICAgICAgW3JlcXVpZXJlZF1cbiIKICAgICAgICAgICAgKSwKICAgICAgICAgIF0pLAogICAgICAgIF0pLAogICAgICBdKSwKICAgICAgX2MoImgzIiwgeyBhdHRyczogeyBpZDogIm92ZXJ2aWV3IiB9IH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwgYXR0cnM6IHsgaHJlZjogIiNvdmVydmlldyIgfSB9LAogICAgICAgICAgW192bS5fdigiIyIpXQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCIgT3ZlcnZpZXc6IiksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIllvdSBtaWdodCB3b3JrIHdpdGggbm90IGp1c3Qgb25lIHNvdXJjZSBjb250cm9sIG1hbmFnZXIgKFNDTSkgYnV0IGEgZmV3LCB3aGVuIHdvcmtpbmcgd2l0aCB0aGlzIHRvb2wsIHlvdSdsbCBuZWVkIHRvIHJ1biBhIHNlcGVyYXRlIGNvbW1hbmQgZm9yIGVhY2ggU0NNIHRvIGdldCB0aGUgY29udHJpYnV0b3JzIGNvdW50IGZvciB5b3VyIHJlcG9zIHRoZXJlLiIKICAgICAgICApLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJGb3IgZXhhbXBsZTogSWYgeW91IGhhdmUgYSBjb250cmlidXRvciB0aGF0IGNvbW1pdHMgdG8gYm90aCBHaXRodWIgcmVwb3MgYW5kIEJpdGJ1Y2tldCBwcm9qZWN0cywgeW91J2xsIHNlZSBoaXMvaGVycyBkZXRhaWxzIG9uIHRoZSBvdXRwdXRzIG9mIGJvdGggU0NNcy4iCiAgICAgICAgKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiV2hhdCBpZiB5b3Ugd2FudCB0byBnZXQgYW4gb3ZlcmFsbCBwaWN0dXJlIG9mIGFsbCB5b3VyIGNvbnRyaWJ1dG9ycyBhY3Jvc3MgYWxsIHRoZSBTQ01zIHRoYXQgeW91IHdvcmsgd2l0aD8iCiAgICAgICAgKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiVGhpcyBjb21tYW5kIGFsbG93cyB0byB0YWtlIG11bHRpcGxlIChqc29uKSBvdXRwdXRzIG9mIGRpZmZlcmVudCBjb21tYW5kcyBmb3IgZGlmZmVyZW50IFNDTXMgYW5kIGNvbnNvbGlkYXRlIHRoZW0gaW50byBvbmUgZmlsZSwgd2l0aCBhIHVuaXF1ZSBjb250cmlidXRvcnMgY291bnQgYW5kIGEgdG90YWwgb2YgdGhlIHJlcG9zIGZyb20gYWxsIFNDTXMgZXRjJyIKICAgICAgICApLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoMyIsIHsgYXR0cnM6IHsgaWQ6ICJydW5uaW5nLXRoZS1jb21tYW5kIiB9IH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogIiNydW5uaW5nLXRoZS1jb21tYW5kIiB9LAogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIFJ1bm5pbmcgdGhlIGNvbW1hbmQ6IiksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInVsIiwgWwogICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgIlJ1biB0aGUgZGlmZmVyZW50IGNvbW1hbmRzIHdpdGggdGhlIC0tanNvbiBmbGFnIGFuZCBzZW5kIHRoZSBvdXRwdXQgdG8gYSBkZXNpZ25hdGVkIGZvbGRlciwgZm9yIGV4YW1wbGU6IgogICAgICAgICAgKSwKICAgICAgICBdKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImxhbmd1YWdlLSBleHRyYS1jbGFzcyIgfSwgWwogICAgICAgIF9jKCJwcmUiLCB7IHByZTogdHJ1ZSwgYXR0cnM6IHsgY2xhc3M6ICJsYW5ndWFnZS10ZXh0IiB9IH0sIFsKICAgICAgICAgIF9jKCJjb2RlIiwgWwogICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgInNueWstc2NtLWNvbnRyaWJ1dG9ycy1jb3VudCBnaXRodWIgLS10b2tlbiBUT0tFTiAtLWpzb24gPiBQYXRoVG9Gb2xkZXIvRmlsZU5hbWVcbnNueWstc2NtLWNvbnRyaWJ1dG9ycy1jb3VudCBnaXRodWItZW50ZXJwcmlzZSAtLXRva2VuIFRPS0VOIC0tanNvbiA+IFBhdGhUb0ZvbGRlci9PdGhlckZpbGVOYW1lXG4iCiAgICAgICAgICAgICksCiAgICAgICAgICBdKSwKICAgICAgICBdKSwKICAgICAgXSksCiAgICAgIF9jKCJ1bCIsIFsKICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICJSdW4gdGhlIGNvbW1hbmQgYW5kIGFwcGx5IHRoZSAtLWZvbGRlclBhdGggZmxhZyB3aXRoIHRoZSBwYXRoIHRvIHRoZSBkZXNpZ25hdGVkLCByZWFkL3dyaXRlIGFjY2Vzc2libGUsIGZvbGRlciB0aGF0IGNvbnRhaW5zIHRoZSBkaWZmZXJlbnQgb3V0cHV0IGpzb24gZmlsZXMgd2l0aCB0aGUgaW5kaXZpZHVhbCBTQ00gcmVzdWx0cy4iCiAgICAgICAgICApLAogICAgICAgIF0pLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibGFuZ3VhZ2UtIGV4dHJhLWNsYXNzIiB9LCBbCiAgICAgICAgX2MoInByZSIsIHsgcHJlOiB0cnVlLCBhdHRyczogeyBjbGFzczogImxhbmd1YWdlLXRleHQiIH0gfSwgWwogICAgICAgICAgX2MoImNvZGUiLCBbCiAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAic255ay1zY20tY29udHJpYnV0b3JzLWNvdW50IGNvbnNvbGlkYXRlUmVzdWx0cyAtLWZvbGRlclBhdGggUGF0aFRvRm9sZGVyXG4iCiAgICAgICAgICAgICksCiAgICAgICAgICBdKSwKICAgICAgICBdKSwKICAgICAgXSksCiAgICAgIF9jKCJ1bCIsIFsKICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICdUaGUgdG9vbCB3aWxsIHRoZW4gbG9vayBmb3IgdmFsaWQgZmlsZXMgaW4gdGhlIGFwcGxpZWQgZm9sZGVyLCByZWFkIHRoZSBjb250ZW50IG9mIHRoZSBmaWxlcyBhbmQgY3JlYXRlIGEgbmV3IGZpbGUgd2l0aCBjb25zb2xpZGF0ZWQsIHVuaXF1ZSByZXN1bHRzIGZyb20gYWxsIHRoZSByZWFkIGZpbGVzIGFuZCBuYW1lIGl0ICJjb25zb2xpZGF0ZWQtcmVzdWx0cy5qc29uIicKICAgICAgICAgICksCiAgICAgICAgXSksCiAgICAgIF0pLAogICAgXQogICkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gW10KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}