{"remainingRequest":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/owenmorrill/Sites/vue-docs/docs/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/owenmorrill/Sites/vue-docs/docs/src/docs/integration-guide/ide-plugin/overview.md?vue&type=template&id=c9eefb5c&","dependencies":[{"path":"/Users/owenmorrill/Sites/vue-docs/docs/src/docs/integration-guide/ide-plugin/overview.md","mtime":1644439892981},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js","mtime":1647884535821},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1647884535666},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/cache-loader/dist/cjs.js","mtime":1647884535821},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/vue-loader/lib/index.js","mtime":1647884534539},{"path":"/Users/owenmorrill/Sites/vue-docs/docs/node_modules/@vuepress/markdown-loader/index.js","mtime":1647884535441}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHsKICB2YXIgX3ZtID0gdGhpcwogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogIHJldHVybiBfYygKICAgICJDb250ZW50U2xvdHNEaXN0cmlidXRvciIsCiAgICB7IGF0dHJzOiB7ICJzbG90LWtleSI6IF92bS4kcGFyZW50LnNsb3RLZXkgfSB9LAogICAgWwogICAgICBfYygiaDEiLCB7IGF0dHJzOiB7IGlkOiAib3ZlcnZpZXciIH0gfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgeyBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLCBhdHRyczogeyBocmVmOiAiI292ZXJ2aWV3IiB9IH0sCiAgICAgICAgICBbX3ZtLl92KCIjIildCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIiBPdmVydmlldyIpLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJGb3IgdGhlIHB1cnBvc2Ugb2YgZXh0cmFjdGluZyBTbnlrIHNjYW4gcmVzdWx0cyBhbmQgbWFraW5nIHRoZW0gYXZhaWxhYmxlIGluIHlvdXIgSURFIHBsdWdpbiwgd2Ugd2lsbCBtYWtlIHVzZSBvZiB0aGUgU255ayBDTEkgd2hpY2ggdGhlIElERSBwbHVnaW4gc2hvdWxkIGRvd25sb2FkIGluIHRoZSBiYWNrZ3JvdW5kIGFuZCBwZXJpb2RpY2FsbHkgY2hlY2sgZm9yIG5ld2VyIHZlcnNpb25zIGFuZCBkb3dubG9hZCB0aG9zZSB3aGVuIGF2YWlsYWJsZS4iCiAgICAgICAgKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiU255ayBpcyB3b3JraW5nIG9uIGEgU0RLIHRvIG1ha2UgaXQgZWFzaWVyIHRvIGltcGxlbWVudCB0aGUgZG93bmxvYWQgYW5kIHBlcmlvZCB1cGRhdGVzLiBJbiB0aGUgbWVhbnRpbWUgeW91IGNhbiBnZXQgYSB0YXN0ZSBvZiBhIEphdmEgIgogICAgICAgICksCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7CiAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgaHJlZjogImh0dHBzOi8vZ2l0aHViLmNvbS9qZW5raW5zY2kvc255ay1zZWN1cml0eS1zY2FubmVyLXBsdWdpbi9ibG9iL21hc3Rlci9zcmMvbWFpbi9qYXZhL2lvL3NueWsvamVua2lucy90b29scy9pbnRlcm5hbC9Eb3dubG9hZFNlcnZpY2UuamF2YSIsCiAgICAgICAgICAgICAgdGFyZ2V0OiAiX2JsYW5rIiwKICAgICAgICAgICAgICByZWw6ICJub29wZW5lciBub3JlZmVycmVyIiwKICAgICAgICAgICAgfSwKICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl92KCJpbXBsZW1lbnRhdGlvbiBoZXJlIiksIF9jKCJPdXRib3VuZExpbmsiKV0sCiAgICAgICAgICAxCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIjoiKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAneyUgaGludCBzdHlsZT0iaW5mbyIgJX1cbllvdSBzaG91bGQgZG93bmxvYWQgdGhlIFNueWsgQ0xJIGZvciB0aGUgSURFIHVzYWdlIGlycmVzcGVjdGl2ZSBvZiB3aGV0aGVyIHRoZSBkZXZlbG9wZXIgaGFzIHNueWsgQ0xJIGluc3RhbGxlZCBvbiB0aGVpciBtYWNoaW5lIGFzIHdlbGwuXG57JSBlbmRoaW50ICV9JwogICAgICAgICksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIk5leHQsIHdlIG5lZWQgdG8gbWFrZSBzdXJlIHRoZSB1c2VyIGlzIGF1dGhlbnRpY2F0ZWQgaW50byB0aGVpciBzbnlrIGFjY291bnQsIGFuZCBpZiBub3QgcnVuICIKICAgICAgICApLAogICAgICAgIF9jKCJjb2RlIiwgW192bS5fdigic255ayBhdXRoIildKSwKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiIHdoaWNoIHdpbGwgdGFrZSB0aGUgdXNlciB0aHJvdWdoIGEgc2lnbnVwL2xvZ2luIGV4cGVyaWVuY2UgYW5kIHdpbGwgc3RvcmUgdGhlaXIgU255ayB0b2tlbiBsb2NhbGx5IG9uIHRoZSBtYWNoaW5lLiIKICAgICAgICApLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigiRm9yIHRoZSBwdXJwb3NlIG9mIHNjYW5uaW5nIHdlIGxldmVyYWdlIHRoZSBTbnlrIENMSSdzICIpLAogICAgICAgIF9jKCJjb2RlIiwgW192bS5fdigidGVzdCIpXSksCiAgICAgICAgX3ZtLl92KCIgY29tbWFuZCB3aXRoIGl0cyAiKSwKICAgICAgICBfYygiY29kZSIsIFtfdm0uX3YoIi0tanNvbiIpXSksCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIiBmbGFnIHRvIGNvbnZlcnQgdGhlIG91dHB1dCBpbnRvIG1hY2hpbmUgcmVhZGFibGUgZm9ybWF0LiBJbiBzaG9ydCwgZm9yIGV2ZXJ5IHN1cHBvcnRlZCBkZXBlbmRlbmN5IG1hbmlmZXN0IGZpbGUgaW4gYSBwcm9qZWN0IHlvdSBuZWVkIHRvIHJ1biAiCiAgICAgICAgKSwKICAgICAgICBfYygiY29kZSIsIFtfdm0uX3YoInNueWsgdGVzdCAtLWZpbGU9PG1hbmlmZXN0IGZpbGUgbmFtZT4gLS1qc29uIildKSwKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiICwgcGFyc2UgdGhlIHJlc3VsdHMgYW5kIGRpc3BsYXkgdGhlbSBpbiB0aGUgaW50ZW5kZWQgcGxhY2VzIGluc2lkZSB0aGUgSURFIHVzZXIgaW50ZXJmYWNlLiIKICAgICAgICApLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJSZXJ1biB0aGUgc255ayBzY2FuIHBlcmlvZGljYWxseSBvciB3aGVuIGEgdHJpZ2dlcmluZyBldmVudCBoYXBwZW5zIChzZWUgIgogICAgICAgICksCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7CiAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgaHJlZjogImh0dHBzOi8vd3d3Lm5vdGlvbi5zby9zbnlrL0hvdy10by1CdWlsZC1hbi1JREUtcGx1Z2luLXRoYXQtaW5jb3Jwb3JhdGVzLVNueWstc2Nhbm5pbmctNmFhMmMwYTkyOTFlNDA1YmI4YjI2NDMxMDM5ZmMyMWMjNjA3YjJjZDgyZmI1NDllZTg0NzMzMTlhNDJiOGM0MjEiLAogICAgICAgICAgICAgIHRhcmdldDogIl9ibGFuayIsCiAgICAgICAgICAgICAgcmVsOiAibm9vcGVuZXIgbm9yZWZlcnJlciIsCiAgICAgICAgICAgIH0sCiAgICAgICAgICB9LAogICAgICAgICAgW192bS5fdigiV2hlbiB0byByZXJ1biIpLCBfYygiT3V0Ym91bmRMaW5rIildLAogICAgICAgICAgMQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCIgYSBzbnlrIHNjYW4gYmVsb3cpLiIpLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgW192bS5fdigiV2UgY2FuIHN1bW1hcml6ZSB0aGUgc3RlcHMgYXJlIGFzIGZvbGxvd3M6IildKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJvbCIsIFsKICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICJDaGVjayBmb3IgdGhlIGV4aXN0ZW5jZSBvZiB0aGUgU255ayBDTEksIG9yIHByb21wdCB1c2VyIHRvIGluc3RhbGwgaXQgKG9uZSB0aW1lKS4iCiAgICAgICAgICApLAogICAgICAgIF0pLAogICAgICAgIF92bS5fdigiICIpLAogICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgIF92bS5fdigiQ2hlY2sgaWYgdGhlIHVzZXIgaXMgYXV0aGVudGljYXRlZCB0byB0aGUgQ0xJIGFuZCBydW4gIiksCiAgICAgICAgICBfYygiY29kZSIsIFtfdm0uX3YoInNueWsgYXV0aCIpXSksCiAgICAgICAgICBfdm0uX3YoIiBpZiBub3QgKG9uZSB0aW1lKS4iKSwKICAgICAgICBdKSwKICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICBfdm0uX3YoIlNjYW4gZXZlcnkgbWFuaWZlc3QgZmlsZSB1c2luZyAiKSwKICAgICAgICAgIF9jKCJjb2RlIiwgW192bS5fdigic255ayB0ZXN0IC0tZmlsZT08bWFuaWZlc3QgZmlsZSBuYW1lPiAtLWpzb24iKV0pLAogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAiIHBhcnNpbmcgdGhlIG91dHB1dCBhbmQgaW5jb3Jwb3JhdGVkIGl0IGludG8gdGhlIElERSB1c2VyIGludGVyZmFjZS4iCiAgICAgICAgICApLAogICAgICAgIF0pLAogICAgICAgIF92bS5fdigiICIpLAogICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgIlJlcnVuIGEgc2NhbiBwZXJpb2RpY2FsbHkgb3Igd2hlbiBhIHRyaWdnZXJpbmcgZXZlbnQgaGFwcGVucy4iCiAgICAgICAgICApLAogICAgICAgIF0pLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoMiIsIHsgYXR0cnM6IHsgaWQ6ICJhdXRoZW50aWNhdGluZy10aGUtdXNlci10by1zbnlrIiB9IH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogIiNhdXRoZW50aWNhdGluZy10aGUtdXNlci10by1zbnlrIiB9LAogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIEF1dGhlbnRpY2F0aW5nIHRoZSB1c2VyIHRvIFNueWsgIiksCiAgICAgICAgX2MoImEiLCB7IGF0dHJzOiB7IGlkOiAiNjY4OWM5MzktMGJmZi00ZDMwLTk0ODAtYjYyMTc5ODg5ZTM3IiB9IH0pLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJJbiBvcmRlciB0byBydW4gdGhlIHNlY3VyaXR5IHNjYW5zIHVzaW5nIHRoZSBTbnlrIENMSSB0aGUgdXNlciB3aWxsIG5lZWQgdG8gYXV0aGVudGljYXRlIHRvIFNueWsgZmlyc3QuIFRvIGNoZWNrIHdoZXRoZXIgdGhlIHVzZXIgaXMgcHJldmlvdXNseSBhdXRoZW50aWNhdGVkIG9uIHRoaXMgbWFjaGluZSB5b3UgY2FuIHJ1biAiCiAgICAgICAgKSwKICAgICAgICBfYygiY29kZSIsIFtfdm0uX3YoInNueWsgY29uZmlnIGdldCBhcGkiKV0pLAogICAgICAgIF92bS5fdigiIGFuZCBjaGVjayBmb3IgYSByZXR1cm4gb2YgYSBVVUlELiIpLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigiSWYgdGhlIHVzZXIgaXMgbm90IGF1dGhlbnRpY2F0ZWQgcnVuIHRoZSAiKSwKICAgICAgICBfYygiY29kZSIsIFtfdm0uX3YoInNueWsgYXV0aCIpXSksCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIiBjb21tYW5kIHdoaWNoIHdpbGwgdGFrZSB0aGUgdXNlciB0aHJvdWdoIGEgc2lnbnVwL2xvZ2luIGV4cGVyaWVuY2UgYW5kIHdpbGwgc3RvcmUgdGhlaXIgU255ayB0b2tlbiBsb2NhbGx5IG9uIHRoZSBtYWNoaW5lLiIKICAgICAgICApLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoMiIsIHsgYXR0cnM6IHsgaWQ6ICIiIH0gfSwgWwogICAgICAgIF9jKCJhIiwgeyBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLCBhdHRyczogeyBocmVmOiAiIyIgfSB9LCBbCiAgICAgICAgICBfdm0uX3YoIiMiKSwKICAgICAgICBdKSwKICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICBfYygiYSIsIHsgYXR0cnM6IHsgaWQ6ICI3NjM3N2FkYS04MDZiLTQ0MTYtYjY4ZS00MjllMDBjZjBkYjgiIH0gfSksCiAgICAgIF0pLAogICAgXQogICkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gW10KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}